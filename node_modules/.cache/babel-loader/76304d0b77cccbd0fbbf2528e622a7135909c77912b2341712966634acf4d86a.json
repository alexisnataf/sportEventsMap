{"ast":null,"code":"/**\r\n * DevExtreme (esm/common/core/localization/core.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport dependencyInjector from \"../../../core/utils/dependency_injector\";\nimport parentLocales from \"./cldr-data/parent_locales\";\nimport getParentLocale from \"./parentLocale\";\nconst DEFAULT_LOCALE = \"en\";\nexport default dependencyInjector({\n  locale: (() => {\n    let currentLocale = \"en\";\n    return locale => {\n      if (!locale) {\n        return currentLocale;\n      }\n      currentLocale = locale;\n    };\n  })(),\n  getValueByClosestLocale: function (getter) {\n    let locale = this.locale();\n    let value = getter(locale);\n    let isRootLocale;\n    while (!value && !isRootLocale) {\n      locale = getParentLocale(parentLocales, locale);\n      if (locale) {\n        value = getter(locale);\n      } else {\n        isRootLocale = true;\n      }\n    }\n    if (void 0 === value && \"en\" !== locale) {\n      return getter(\"en\");\n    }\n    return value;\n  }\n});","map":{"version":3,"names":["dependencyInjector","parentLocales","getParentLocale","DEFAULT_LOCALE","locale","currentLocale","getValueByClosestLocale","getter","value","isRootLocale"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/common/core/localization/core.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/common/core/localization/core.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport dependencyInjector from \"../../../core/utils/dependency_injector\";\r\nimport parentLocales from \"./cldr-data/parent_locales\";\r\nimport getParentLocale from \"./parentLocale\";\r\nconst DEFAULT_LOCALE = \"en\";\r\nexport default dependencyInjector({\r\n    locale: (() => {\r\n        let currentLocale = \"en\";\r\n        return locale => {\r\n            if (!locale) {\r\n                return currentLocale\r\n            }\r\n            currentLocale = locale\r\n        }\r\n    })(),\r\n    getValueByClosestLocale: function(getter) {\r\n        let locale = this.locale();\r\n        let value = getter(locale);\r\n        let isRootLocale;\r\n        while (!value && !isRootLocale) {\r\n            locale = getParentLocale(parentLocales, locale);\r\n            if (locale) {\r\n                value = getter(locale)\r\n            } else {\r\n                isRootLocale = true\r\n            }\r\n        }\r\n        if (void 0 === value && \"en\" !== locale) {\r\n            return getter(\"en\")\r\n        }\r\n        return value\r\n    }\r\n});\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,kBAAkB,MAAM,yCAAyC;AACxE,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,eAAe,MAAM,gBAAgB;AAC5C,MAAMC,cAAc,GAAG,IAAI;AAC3B,eAAeH,kBAAkB,CAAC;EAC9BI,MAAM,EAAE,CAAC,MAAM;IACX,IAAIC,aAAa,GAAG,IAAI;IACxB,OAAOD,MAAM,IAAI;MACb,IAAI,CAACA,MAAM,EAAE;QACT,OAAOC,aAAa;MACxB;MACAA,aAAa,GAAGD,MAAM;IAC1B,CAAC;EACL,CAAC,EAAE,CAAC;EACJE,uBAAuB,EAAE,SAAAA,CAASC,MAAM,EAAE;IACtC,IAAIH,MAAM,GAAG,IAAI,CAACA,MAAM,CAAC,CAAC;IAC1B,IAAII,KAAK,GAAGD,MAAM,CAACH,MAAM,CAAC;IAC1B,IAAIK,YAAY;IAChB,OAAO,CAACD,KAAK,IAAI,CAACC,YAAY,EAAE;MAC5BL,MAAM,GAAGF,eAAe,CAACD,aAAa,EAAEG,MAAM,CAAC;MAC/C,IAAIA,MAAM,EAAE;QACRI,KAAK,GAAGD,MAAM,CAACH,MAAM,CAAC;MAC1B,CAAC,MAAM;QACHK,YAAY,GAAG,IAAI;MACvB;IACJ;IACA,IAAI,KAAK,CAAC,KAAKD,KAAK,IAAI,IAAI,KAAKJ,MAAM,EAAE;MACrC,OAAOG,MAAM,CAAC,IAAI,CAAC;IACvB;IACA,OAAOC,KAAK;EAChB;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}