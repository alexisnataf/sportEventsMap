{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/events/core/m_wheel.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport registerEvent from \"../../../common/core/events/core/event_registrator\";\nimport eventsEngine from \"../../../common/core/events/core/events_engine\";\nimport { addNamespace, fireEvent } from \"../../../common/core/events/utils/index\";\nimport $ from \"../../../core/renderer\";\nconst EVENT_NAME = \"dxmousewheel\";\nconst EVENT_NAMESPACE = \"dxWheel\";\nconst NATIVE_EVENT_NAME = \"wheel\";\nconst PIXEL_MODE = 0;\nconst DELTA_MUTLIPLIER = 30;\nconst wheel = {\n  setup(element) {\n    const $element = $(element);\n    eventsEngine.on($element, addNamespace(\"wheel\", \"dxWheel\"), wheel._wheelHandler.bind(wheel));\n  },\n  teardown(element) {\n    eventsEngine.off(element, \".dxWheel\");\n  },\n  _wheelHandler(e) {\n    const {\n      deltaMode: deltaMode,\n      deltaY: deltaY,\n      deltaX: deltaX,\n      deltaZ: deltaZ\n    } = e.originalEvent;\n    fireEvent({\n      type: EVENT_NAME,\n      originalEvent: e,\n      delta: this._normalizeDelta(deltaY, deltaMode),\n      deltaX: deltaX,\n      deltaY: deltaY,\n      deltaZ: deltaZ,\n      deltaMode: deltaMode,\n      pointerType: \"mouse\"\n    });\n    e.stopPropagation();\n  },\n  _normalizeDelta(delta) {\n    let deltaMode = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;\n    if (0 === deltaMode) {\n      return -delta;\n    }\n    return -30 * delta;\n  }\n};\nregisterEvent(EVENT_NAME, wheel);\nexport { EVENT_NAME as name };","map":{"version":3,"names":["registerEvent","eventsEngine","addNamespace","fireEvent","$","EVENT_NAME","EVENT_NAMESPACE","NATIVE_EVENT_NAME","PIXEL_MODE","DELTA_MUTLIPLIER","wheel","setup","element","$element","on","_wheelHandler","bind","teardown","off","e","deltaMode","deltaY","deltaX","deltaZ","originalEvent","type","delta","_normalizeDelta","pointerType","stopPropagation","arguments","length","name"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/events/core/m_wheel.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/events/core/m_wheel.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport registerEvent from \"../../../common/core/events/core/event_registrator\";\r\nimport eventsEngine from \"../../../common/core/events/core/events_engine\";\r\nimport {\r\n    addNamespace,\r\n    fireEvent\r\n} from \"../../../common/core/events/utils/index\";\r\nimport $ from \"../../../core/renderer\";\r\nconst EVENT_NAME = \"dxmousewheel\";\r\nconst EVENT_NAMESPACE = \"dxWheel\";\r\nconst NATIVE_EVENT_NAME = \"wheel\";\r\nconst PIXEL_MODE = 0;\r\nconst DELTA_MUTLIPLIER = 30;\r\nconst wheel = {\r\n    setup(element) {\r\n        const $element = $(element);\r\n        eventsEngine.on($element, addNamespace(\"wheel\", \"dxWheel\"), wheel._wheelHandler.bind(wheel))\r\n    },\r\n    teardown(element) {\r\n        eventsEngine.off(element, \".dxWheel\")\r\n    },\r\n    _wheelHandler(e) {\r\n        const {\r\n            deltaMode: deltaMode,\r\n            deltaY: deltaY,\r\n            deltaX: deltaX,\r\n            deltaZ: deltaZ\r\n        } = e.originalEvent;\r\n        fireEvent({\r\n            type: EVENT_NAME,\r\n            originalEvent: e,\r\n            delta: this._normalizeDelta(deltaY, deltaMode),\r\n            deltaX: deltaX,\r\n            deltaY: deltaY,\r\n            deltaZ: deltaZ,\r\n            deltaMode: deltaMode,\r\n            pointerType: \"mouse\"\r\n        });\r\n        e.stopPropagation()\r\n    },\r\n    _normalizeDelta(delta) {\r\n        let deltaMode = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;\r\n        if (0 === deltaMode) {\r\n            return -delta\r\n        }\r\n        return -30 * delta\r\n    }\r\n};\r\nregisterEvent(EVENT_NAME, wheel);\r\nexport {\r\n    EVENT_NAME as name\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,aAAa,MAAM,oDAAoD;AAC9E,OAAOC,YAAY,MAAM,gDAAgD;AACzE,SACIC,YAAY,EACZC,SAAS,QACN,yCAAyC;AAChD,OAAOC,CAAC,MAAM,wBAAwB;AACtC,MAAMC,UAAU,GAAG,cAAc;AACjC,MAAMC,eAAe,GAAG,SAAS;AACjC,MAAMC,iBAAiB,GAAG,OAAO;AACjC,MAAMC,UAAU,GAAG,CAAC;AACpB,MAAMC,gBAAgB,GAAG,EAAE;AAC3B,MAAMC,KAAK,GAAG;EACVC,KAAKA,CAACC,OAAO,EAAE;IACX,MAAMC,QAAQ,GAAGT,CAAC,CAACQ,OAAO,CAAC;IAC3BX,YAAY,CAACa,EAAE,CAACD,QAAQ,EAAEX,YAAY,CAAC,OAAO,EAAE,SAAS,CAAC,EAAEQ,KAAK,CAACK,aAAa,CAACC,IAAI,CAACN,KAAK,CAAC,CAAC;EAChG,CAAC;EACDO,QAAQA,CAACL,OAAO,EAAE;IACdX,YAAY,CAACiB,GAAG,CAACN,OAAO,EAAE,UAAU,CAAC;EACzC,CAAC;EACDG,aAAaA,CAACI,CAAC,EAAE;IACb,MAAM;MACFC,SAAS,EAAEA,SAAS;MACpBC,MAAM,EAAEA,MAAM;MACdC,MAAM,EAAEA,MAAM;MACdC,MAAM,EAAEA;IACZ,CAAC,GAAGJ,CAAC,CAACK,aAAa;IACnBrB,SAAS,CAAC;MACNsB,IAAI,EAAEpB,UAAU;MAChBmB,aAAa,EAAEL,CAAC;MAChBO,KAAK,EAAE,IAAI,CAACC,eAAe,CAACN,MAAM,EAAED,SAAS,CAAC;MAC9CE,MAAM,EAAEA,MAAM;MACdD,MAAM,EAAEA,MAAM;MACdE,MAAM,EAAEA,MAAM;MACdH,SAAS,EAAEA,SAAS;MACpBQ,WAAW,EAAE;IACjB,CAAC,CAAC;IACFT,CAAC,CAACU,eAAe,CAAC,CAAC;EACvB,CAAC;EACDF,eAAeA,CAACD,KAAK,EAAE;IACnB,IAAIN,SAAS,GAAGU,SAAS,CAACC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,KAAKD,SAAS,CAAC,CAAC,CAAC,GAAGA,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;IAClF,IAAI,CAAC,KAAKV,SAAS,EAAE;MACjB,OAAO,CAACM,KAAK;IACjB;IACA,OAAO,CAAC,EAAE,GAAGA,KAAK;EACtB;AACJ,CAAC;AACD1B,aAAa,CAACK,UAAU,EAAEK,KAAK,CAAC;AAChC,SACIL,UAAU,IAAI2B,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}