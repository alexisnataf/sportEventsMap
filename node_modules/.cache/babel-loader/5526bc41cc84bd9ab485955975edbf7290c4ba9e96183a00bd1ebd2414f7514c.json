{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/events/gesture/m_emitter.gesture.scroll.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { cancelAnimationFrame, requestAnimationFrame } from \"../../../common/core/animation/frame\";\nimport registerEmitter from \"../../../common/core/events/core/emitter_registrator\";\nimport eventsEngine from \"../../../common/core/events/core/events_engine\";\nimport GestureEmitter from \"../../../common/core/events/gesture/emitter.gesture\";\nimport { addNamespace, eventData, eventDelta, isDxMouseWheelEvent, isMouseEvent } from \"../../../common/core/events/utils/index\";\nimport Class from \"../../../core/class\";\nimport devices from \"../../core/m_devices\";\nconst {\n  abstract: abstract\n} = Class;\nconst realDevice = devices.real();\nconst SCROLL_EVENT = \"scroll\";\nconst SCROLL_INIT_EVENT = \"dxscrollinit\";\nconst SCROLL_START_EVENT = \"dxscrollstart\";\nconst SCROLL_MOVE_EVENT = \"dxscroll\";\nconst SCROLL_END_EVENT = \"dxscrollend\";\nconst SCROLL_STOP_EVENT = \"dxscrollstop\";\nconst SCROLL_CANCEL_EVENT = \"dxscrollcancel\";\nconst Locker = Class.inherit(function () {\n  const NAMESPACED_SCROLL_EVENT = addNamespace(\"scroll\", \"dxScrollEmitter\");\n  return {\n    ctor(element) {\n      this._element = element;\n      this._locked = false;\n      this._proxiedScroll = e => {\n        if (!this._disposed) {\n          this._scroll(e);\n        }\n      };\n      eventsEngine.on(this._element, NAMESPACED_SCROLL_EVENT, this._proxiedScroll);\n    },\n    _scroll: abstract,\n    check(e, callback) {\n      if (this._locked) {\n        callback();\n      }\n    },\n    dispose() {\n      this._disposed = true;\n      eventsEngine.off(this._element, NAMESPACED_SCROLL_EVENT, this._proxiedScroll);\n    }\n  };\n}());\nconst TimeoutLocker = Locker.inherit({\n  ctor(element, timeout) {\n    this.callBase(element);\n    this._timeout = timeout;\n  },\n  _scroll() {\n    this._prepare();\n    this._forget();\n  },\n  _prepare() {\n    if (this._timer) {\n      this._clearTimer();\n    }\n    this._locked = true;\n  },\n  _clearTimer() {\n    clearTimeout(this._timer);\n    this._locked = false;\n    this._timer = null;\n  },\n  _forget() {\n    const that = this;\n    this._timer = setTimeout(() => {\n      that._clearTimer();\n    }, this._timeout);\n  },\n  dispose() {\n    this.callBase();\n    this._clearTimer();\n  }\n});\nconst WheelLocker = TimeoutLocker.inherit({\n  ctor(element) {\n    this.callBase(element, 400);\n    this._lastWheelDirection = null;\n  },\n  check(e, callback) {\n    this._checkDirectionChanged(e);\n    this.callBase(e, callback);\n  },\n  _checkDirectionChanged(e) {\n    if (!isDxMouseWheelEvent(e)) {\n      this._lastWheelDirection = null;\n      return;\n    }\n    const direction = e.shiftKey || false;\n    const directionChange = null !== this._lastWheelDirection && direction !== this._lastWheelDirection;\n    this._lastWheelDirection = direction;\n    this._locked = this._locked && !directionChange;\n  }\n});\nlet PointerLocker = TimeoutLocker.inherit({\n  ctor(element) {\n    this.callBase(element, 400);\n  }\n});\n!function () {\n  const {\n    ios: isIos,\n    android: isAndroid\n  } = realDevice;\n  if (!(isIos || isAndroid)) {\n    return;\n  }\n  PointerLocker = Locker.inherit({\n    _scroll() {\n      this._locked = true;\n      const that = this;\n      cancelAnimationFrame(this._scrollFrame);\n      this._scrollFrame = requestAnimationFrame(() => {\n        that._locked = false;\n      });\n    },\n    check(e, callback) {\n      cancelAnimationFrame(this._scrollFrame);\n      cancelAnimationFrame(this._checkFrame);\n      const that = this;\n      const {\n        callBase: callBase\n      } = this;\n      this._checkFrame = requestAnimationFrame(() => {\n        callBase.call(that, e, callback);\n        that._locked = false;\n      });\n    },\n    dispose() {\n      this.callBase();\n      cancelAnimationFrame(this._scrollFrame);\n      cancelAnimationFrame(this._checkFrame);\n    }\n  });\n}();\nconst ScrollEmitter = GestureEmitter.inherit(function () {\n  const FRAME_DURATION = Math.round(1e3 / 60);\n  return {\n    ctor(element) {\n      this.callBase.apply(this, arguments);\n      this.direction = \"both\";\n      this._pointerLocker = new PointerLocker(element);\n      this._wheelLocker = new WheelLocker(element);\n    },\n    validate: () => true,\n    configure(data) {\n      if (data.scrollTarget) {\n        this._pointerLocker.dispose();\n        this._wheelLocker.dispose();\n        this._pointerLocker = new PointerLocker(data.scrollTarget);\n        this._wheelLocker = new WheelLocker(data.scrollTarget);\n      }\n      this.callBase(data);\n    },\n    _init(e) {\n      this._wheelLocker.check(e, () => {\n        if (isDxMouseWheelEvent(e)) {\n          this._accept(e);\n        }\n      });\n      this._pointerLocker.check(e, () => {\n        const skipCheck = this.isNative && isMouseEvent(e);\n        if (!isDxMouseWheelEvent(e) && !skipCheck) {\n          this._accept(e);\n        }\n      });\n      this._fireEvent(\"dxscrollinit\", e);\n      this._prevEventData = eventData(e);\n    },\n    move(e) {\n      this.callBase.apply(this, arguments);\n      e.isScrollingEvent = this.isNative || e.isScrollingEvent;\n    },\n    _start(e) {\n      this._savedEventData = eventData(e);\n      this._fireEvent(\"dxscrollstart\", e);\n      this._prevEventData = eventData(e);\n    },\n    _move(e) {\n      const currentEventData = eventData(e);\n      this._fireEvent(\"dxscroll\", e, {\n        delta: eventDelta(this._prevEventData, currentEventData)\n      });\n      const delta = eventDelta(this._savedEventData, currentEventData);\n      if (delta.time > 200) {\n        this._savedEventData = this._prevEventData;\n      }\n      this._prevEventData = eventData(e);\n    },\n    _end(e) {\n      const endEventDelta = eventDelta(this._prevEventData, eventData(e));\n      let velocity = {\n        x: 0,\n        y: 0\n      };\n      if (!isDxMouseWheelEvent(e) && endEventDelta.time < 100) {\n        const delta = eventDelta(this._savedEventData, this._prevEventData);\n        const velocityMultiplier = FRAME_DURATION / delta.time;\n        velocity = {\n          x: delta.x * velocityMultiplier,\n          y: delta.y * velocityMultiplier\n        };\n      }\n      this._fireEvent(\"dxscrollend\", e, {\n        velocity: velocity\n      });\n    },\n    _stop(e) {\n      this._fireEvent(\"dxscrollstop\", e);\n    },\n    cancel(e) {\n      this.callBase.apply(this, arguments);\n      this._fireEvent(\"dxscrollcancel\", e);\n    },\n    dispose() {\n      this.callBase.apply(this, arguments);\n      this._pointerLocker.dispose();\n      this._wheelLocker.dispose();\n    },\n    _clearSelection() {\n      if (this.isNative) {\n        return;\n      }\n      return this.callBase.apply(this, arguments);\n    },\n    _toggleGestureCover() {\n      if (this.isNative) {\n        return;\n      }\n      return this.callBase.apply(this, arguments);\n    }\n  };\n}());\nregisterEmitter({\n  emitter: ScrollEmitter,\n  events: [\"dxscrollinit\", \"dxscrollstart\", \"dxscroll\", \"dxscrollend\", \"dxscrollstop\", \"dxscrollcancel\"]\n});\nexport default {\n  init: \"dxscrollinit\",\n  start: \"dxscrollstart\",\n  move: \"dxscroll\",\n  end: \"dxscrollend\",\n  stop: \"dxscrollstop\",\n  cancel: \"dxscrollcancel\",\n  scroll: \"scroll\"\n};","map":{"version":3,"names":["cancelAnimationFrame","requestAnimationFrame","registerEmitter","eventsEngine","GestureEmitter","addNamespace","eventData","eventDelta","isDxMouseWheelEvent","isMouseEvent","Class","devices","abstract","realDevice","real","SCROLL_EVENT","SCROLL_INIT_EVENT","SCROLL_START_EVENT","SCROLL_MOVE_EVENT","SCROLL_END_EVENT","SCROLL_STOP_EVENT","SCROLL_CANCEL_EVENT","Locker","inherit","NAMESPACED_SCROLL_EVENT","ctor","element","_element","_locked","_proxiedScroll","e","_disposed","_scroll","on","check","callback","dispose","off","TimeoutLocker","timeout","callBase","_timeout","_prepare","_forget","_timer","_clearTimer","clearTimeout","that","setTimeout","WheelLocker","_lastWheelDirection","_checkDirectionChanged","direction","shiftKey","directionChange","PointerLocker","ios","isIos","android","isAndroid","_scrollFrame","_checkFrame","call","ScrollEmitter","FRAME_DURATION","Math","round","apply","arguments","_pointerLocker","_wheelLocker","validate","configure","data","scrollTarget","_init","_accept","skipCheck","isNative","_fireEvent","_prevEventData","move","isScrollingEvent","_start","_savedEventData","_move","currentEventData","delta","time","_end","endEventDelta","velocity","x","y","velocityMultiplier","_stop","cancel","_clearSelection","_toggleGestureCover","emitter","events","init","start","end","stop","scroll"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/events/gesture/m_emitter.gesture.scroll.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/events/gesture/m_emitter.gesture.scroll.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    cancelAnimationFrame,\r\n    requestAnimationFrame\r\n} from \"../../../common/core/animation/frame\";\r\nimport registerEmitter from \"../../../common/core/events/core/emitter_registrator\";\r\nimport eventsEngine from \"../../../common/core/events/core/events_engine\";\r\nimport GestureEmitter from \"../../../common/core/events/gesture/emitter.gesture\";\r\nimport {\r\n    addNamespace,\r\n    eventData,\r\n    eventDelta,\r\n    isDxMouseWheelEvent,\r\n    isMouseEvent\r\n} from \"../../../common/core/events/utils/index\";\r\nimport Class from \"../../../core/class\";\r\nimport devices from \"../../core/m_devices\";\r\nconst {\r\n    abstract: abstract\r\n} = Class;\r\nconst realDevice = devices.real();\r\nconst SCROLL_EVENT = \"scroll\";\r\nconst SCROLL_INIT_EVENT = \"dxscrollinit\";\r\nconst SCROLL_START_EVENT = \"dxscrollstart\";\r\nconst SCROLL_MOVE_EVENT = \"dxscroll\";\r\nconst SCROLL_END_EVENT = \"dxscrollend\";\r\nconst SCROLL_STOP_EVENT = \"dxscrollstop\";\r\nconst SCROLL_CANCEL_EVENT = \"dxscrollcancel\";\r\nconst Locker = Class.inherit(function() {\r\n    const NAMESPACED_SCROLL_EVENT = addNamespace(\"scroll\", \"dxScrollEmitter\");\r\n    return {\r\n        ctor(element) {\r\n            this._element = element;\r\n            this._locked = false;\r\n            this._proxiedScroll = e => {\r\n                if (!this._disposed) {\r\n                    this._scroll(e)\r\n                }\r\n            };\r\n            eventsEngine.on(this._element, NAMESPACED_SCROLL_EVENT, this._proxiedScroll)\r\n        },\r\n        _scroll: abstract,\r\n        check(e, callback) {\r\n            if (this._locked) {\r\n                callback()\r\n            }\r\n        },\r\n        dispose() {\r\n            this._disposed = true;\r\n            eventsEngine.off(this._element, NAMESPACED_SCROLL_EVENT, this._proxiedScroll)\r\n        }\r\n    }\r\n}());\r\nconst TimeoutLocker = Locker.inherit({\r\n    ctor(element, timeout) {\r\n        this.callBase(element);\r\n        this._timeout = timeout\r\n    },\r\n    _scroll() {\r\n        this._prepare();\r\n        this._forget()\r\n    },\r\n    _prepare() {\r\n        if (this._timer) {\r\n            this._clearTimer()\r\n        }\r\n        this._locked = true\r\n    },\r\n    _clearTimer() {\r\n        clearTimeout(this._timer);\r\n        this._locked = false;\r\n        this._timer = null\r\n    },\r\n    _forget() {\r\n        const that = this;\r\n        this._timer = setTimeout((() => {\r\n            that._clearTimer()\r\n        }), this._timeout)\r\n    },\r\n    dispose() {\r\n        this.callBase();\r\n        this._clearTimer()\r\n    }\r\n});\r\nconst WheelLocker = TimeoutLocker.inherit({\r\n    ctor(element) {\r\n        this.callBase(element, 400);\r\n        this._lastWheelDirection = null\r\n    },\r\n    check(e, callback) {\r\n        this._checkDirectionChanged(e);\r\n        this.callBase(e, callback)\r\n    },\r\n    _checkDirectionChanged(e) {\r\n        if (!isDxMouseWheelEvent(e)) {\r\n            this._lastWheelDirection = null;\r\n            return\r\n        }\r\n        const direction = e.shiftKey || false;\r\n        const directionChange = null !== this._lastWheelDirection && direction !== this._lastWheelDirection;\r\n        this._lastWheelDirection = direction;\r\n        this._locked = this._locked && !directionChange\r\n    }\r\n});\r\nlet PointerLocker = TimeoutLocker.inherit({\r\n    ctor(element) {\r\n        this.callBase(element, 400)\r\n    }\r\n});\r\n! function() {\r\n    const {\r\n        ios: isIos,\r\n        android: isAndroid\r\n    } = realDevice;\r\n    if (!(isIos || isAndroid)) {\r\n        return\r\n    }\r\n    PointerLocker = Locker.inherit({\r\n        _scroll() {\r\n            this._locked = true;\r\n            const that = this;\r\n            cancelAnimationFrame(this._scrollFrame);\r\n            this._scrollFrame = requestAnimationFrame((() => {\r\n                that._locked = false\r\n            }))\r\n        },\r\n        check(e, callback) {\r\n            cancelAnimationFrame(this._scrollFrame);\r\n            cancelAnimationFrame(this._checkFrame);\r\n            const that = this;\r\n            const {\r\n                callBase: callBase\r\n            } = this;\r\n            this._checkFrame = requestAnimationFrame((() => {\r\n                callBase.call(that, e, callback);\r\n                that._locked = false\r\n            }))\r\n        },\r\n        dispose() {\r\n            this.callBase();\r\n            cancelAnimationFrame(this._scrollFrame);\r\n            cancelAnimationFrame(this._checkFrame)\r\n        }\r\n    })\r\n}();\r\nconst ScrollEmitter = GestureEmitter.inherit(function() {\r\n    const FRAME_DURATION = Math.round(1e3 / 60);\r\n    return {\r\n        ctor(element) {\r\n            this.callBase.apply(this, arguments);\r\n            this.direction = \"both\";\r\n            this._pointerLocker = new PointerLocker(element);\r\n            this._wheelLocker = new WheelLocker(element)\r\n        },\r\n        validate: () => true,\r\n        configure(data) {\r\n            if (data.scrollTarget) {\r\n                this._pointerLocker.dispose();\r\n                this._wheelLocker.dispose();\r\n                this._pointerLocker = new PointerLocker(data.scrollTarget);\r\n                this._wheelLocker = new WheelLocker(data.scrollTarget)\r\n            }\r\n            this.callBase(data)\r\n        },\r\n        _init(e) {\r\n            this._wheelLocker.check(e, (() => {\r\n                if (isDxMouseWheelEvent(e)) {\r\n                    this._accept(e)\r\n                }\r\n            }));\r\n            this._pointerLocker.check(e, (() => {\r\n                const skipCheck = this.isNative && isMouseEvent(e);\r\n                if (!isDxMouseWheelEvent(e) && !skipCheck) {\r\n                    this._accept(e)\r\n                }\r\n            }));\r\n            this._fireEvent(\"dxscrollinit\", e);\r\n            this._prevEventData = eventData(e)\r\n        },\r\n        move(e) {\r\n            this.callBase.apply(this, arguments);\r\n            e.isScrollingEvent = this.isNative || e.isScrollingEvent\r\n        },\r\n        _start(e) {\r\n            this._savedEventData = eventData(e);\r\n            this._fireEvent(\"dxscrollstart\", e);\r\n            this._prevEventData = eventData(e)\r\n        },\r\n        _move(e) {\r\n            const currentEventData = eventData(e);\r\n            this._fireEvent(\"dxscroll\", e, {\r\n                delta: eventDelta(this._prevEventData, currentEventData)\r\n            });\r\n            const delta = eventDelta(this._savedEventData, currentEventData);\r\n            if (delta.time > 200) {\r\n                this._savedEventData = this._prevEventData\r\n            }\r\n            this._prevEventData = eventData(e)\r\n        },\r\n        _end(e) {\r\n            const endEventDelta = eventDelta(this._prevEventData, eventData(e));\r\n            let velocity = {\r\n                x: 0,\r\n                y: 0\r\n            };\r\n            if (!isDxMouseWheelEvent(e) && endEventDelta.time < 100) {\r\n                const delta = eventDelta(this._savedEventData, this._prevEventData);\r\n                const velocityMultiplier = FRAME_DURATION / delta.time;\r\n                velocity = {\r\n                    x: delta.x * velocityMultiplier,\r\n                    y: delta.y * velocityMultiplier\r\n                }\r\n            }\r\n            this._fireEvent(\"dxscrollend\", e, {\r\n                velocity: velocity\r\n            })\r\n        },\r\n        _stop(e) {\r\n            this._fireEvent(\"dxscrollstop\", e)\r\n        },\r\n        cancel(e) {\r\n            this.callBase.apply(this, arguments);\r\n            this._fireEvent(\"dxscrollcancel\", e)\r\n        },\r\n        dispose() {\r\n            this.callBase.apply(this, arguments);\r\n            this._pointerLocker.dispose();\r\n            this._wheelLocker.dispose()\r\n        },\r\n        _clearSelection() {\r\n            if (this.isNative) {\r\n                return\r\n            }\r\n            return this.callBase.apply(this, arguments)\r\n        },\r\n        _toggleGestureCover() {\r\n            if (this.isNative) {\r\n                return\r\n            }\r\n            return this.callBase.apply(this, arguments)\r\n        }\r\n    }\r\n}());\r\nregisterEmitter({\r\n    emitter: ScrollEmitter,\r\n    events: [\"dxscrollinit\", \"dxscrollstart\", \"dxscroll\", \"dxscrollend\", \"dxscrollstop\", \"dxscrollcancel\"]\r\n});\r\nexport default {\r\n    init: \"dxscrollinit\",\r\n    start: \"dxscrollstart\",\r\n    move: \"dxscroll\",\r\n    end: \"dxscrollend\",\r\n    stop: \"dxscrollstop\",\r\n    cancel: \"dxscrollcancel\",\r\n    scroll: \"scroll\"\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}