{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/ui/drop_down_editor/m_drop_down_editor.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport animationPosition from \"../../../common/core/animation/position\";\nimport { locate, move } from \"../../../common/core/animation/translator\";\nimport { name as clickEventName } from \"../../../common/core/events/click\";\nimport eventsEngine from \"../../../common/core/events/core/events_engine\";\nimport { addNamespace, isCommandKeyPressed, normalizeKeyName } from \"../../../common/core/events/utils/index\";\nimport messageLocalization from \"../../../common/core/localization/message\";\nimport registerComponent from \"../../../core/component_registrator\";\nimport devices from \"../../../core/devices\";\nimport { getPublicElement } from \"../../../core/element\";\nimport Guid from \"../../../core/guid\";\nimport $ from \"../../../core/renderer\";\nimport { FunctionTemplate } from \"../../../core/templates/function_template\";\nimport browser from \"../../../core/utils/browser\";\nimport { splitPair } from \"../../../core/utils/common\";\nimport { extend } from \"../../../core/utils/extend\";\nimport { each } from \"../../../core/utils/iterator\";\nimport { getDefaultAlignment } from \"../../../core/utils/position\";\nimport { isDefined } from \"../../../core/utils/type\";\nimport { hasWindow } from \"../../../core/utils/window\";\nimport Popup from \"../../../ui/popup/ui.popup\";\nimport { focused } from \"../../../ui/widget/selectors\";\nimport errors from \"../../../ui/widget/ui.errors\";\nimport Widget from \"../../../ui/widget/ui.widget\";\nimport TextBox from \"../../ui/text_box/m_text_box\";\nimport DropDownButton from \"./m_drop_down_button\";\nimport { getElementWidth, getSizeValue } from \"./m_utils\";\nexport const DROP_DOWN_EDITOR_CLASS = \"dx-dropdowneditor\";\nconst DROP_DOWN_EDITOR_INPUT_WRAPPER = \"dx-dropdowneditor-input-wrapper\";\nconst DROP_DOWN_EDITOR_BUTTON_ICON = \"dx-dropdowneditor-icon\";\nconst DROP_DOWN_EDITOR_OVERLAY = \"dx-dropdowneditor-overlay\";\nconst DROP_DOWN_EDITOR_OVERLAY_FLIPPED = \"dx-dropdowneditor-overlay-flipped\";\nconst DROP_DOWN_EDITOR_ACTIVE = \"dx-dropdowneditor-active\";\nconst DROP_DOWN_EDITOR_FIELD_CLICKABLE = \"dx-dropdowneditor-field-clickable\";\nconst DROP_DOWN_EDITOR_FIELD_TEMPLATE_WRAPPER = \"dx-dropdowneditor-field-template-wrapper\";\nconst OVERLAY_CONTENT_LABEL = \"Dropdown\";\nconst isIOs = \"ios\" === devices.current().platform;\nfunction createTemplateWrapperElement() {\n  return $(\"<div>\").addClass(DROP_DOWN_EDITOR_FIELD_TEMPLATE_WRAPPER);\n}\nclass DropDownEditor extends TextBox {\n  _supportedKeys() {\n    return _extends({}, super._supportedKeys(), {\n      tab: e => {\n        if (!this.option(\"opened\")) {\n          return;\n        }\n        if (!this._popup.getFocusableElements().length) {\n          this.close();\n          return;\n        }\n        const $focusableElement = e.shiftKey ? this._getLastPopupElement() : this._getFirstPopupElement();\n        if ($focusableElement) {\n          eventsEngine.trigger($focusableElement, \"focus\");\n          $focusableElement.select();\n        }\n        e.preventDefault();\n      },\n      escape: e => {\n        if (this.option(\"opened\")) {\n          e.preventDefault();\n        }\n        this.close();\n        return true;\n      },\n      upArrow: e => {\n        if (!isCommandKeyPressed(e)) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (e.altKey) {\n            this.close();\n            return false;\n          }\n        }\n        return true;\n      },\n      downArrow: e => {\n        if (!isCommandKeyPressed(e)) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (e.altKey) {\n            this._validatedOpening();\n            return false;\n          }\n        }\n        return true;\n      },\n      enter: e => {\n        if (this.option(\"opened\")) {\n          e.preventDefault();\n          this._valueChangeEventHandler(e);\n        }\n        return true;\n      }\n    });\n  }\n  _getDefaultButtons() {\n    return super._getDefaultButtons().concat([{\n      name: \"dropDown\",\n      Ctor: DropDownButton\n    }]);\n  }\n  _getDefaultOptions() {\n    return _extends({}, super._getDefaultOptions(), {\n      value: null,\n      onOpened: null,\n      onClosed: null,\n      opened: false,\n      acceptCustomValue: true,\n      applyValueMode: \"instantly\",\n      deferRendering: true,\n      activeStateEnabled: true,\n      dropDownButtonTemplate: \"dropDownButton\",\n      fieldTemplate: null,\n      openOnFieldClick: false,\n      showDropDownButton: true,\n      buttons: void 0,\n      dropDownOptions: {\n        showTitle: false\n      },\n      popupPosition: this._getDefaultPopupPosition(),\n      onPopupInitialized: null,\n      applyButtonText: messageLocalization.format(\"OK\"),\n      cancelButtonText: messageLocalization.format(\"Cancel\"),\n      buttonsLocation: \"default\",\n      useHiddenSubmitElement: false,\n      validationMessagePosition: \"auto\"\n    });\n  }\n  _useTemplates() {\n    return true;\n  }\n  _getDefaultPopupPosition(isRtlEnabled) {\n    const position = getDefaultAlignment(isRtlEnabled);\n    return {\n      offset: {\n        h: 0,\n        v: -1\n      },\n      my: `${position} top`,\n      at: `${position} bottom`,\n      collision: \"flip flip\"\n    };\n  }\n  _defaultOptionsRules() {\n    return super._defaultOptionsRules().concat([{\n      device(device) {\n        const isGeneric = \"generic\" === device.platform;\n        return isGeneric;\n      },\n      options: {\n        popupPosition: {\n          offset: {\n            v: 0\n          }\n        }\n      }\n    }]);\n  }\n  _inputWrapper() {\n    return this.$element().find(`.${DROP_DOWN_EDITOR_INPUT_WRAPPER}`).first();\n  }\n  _init() {\n    super._init();\n    this._initVisibilityActions();\n    this._initPopupInitializedAction();\n    const {\n      rtlEnabled: rtlEnabled,\n      dropDownOptions: dropDownOptions\n    } = this.option();\n    this._updatePopupPosition(rtlEnabled);\n    this._options.cache(\"dropDownOptions\", dropDownOptions);\n  }\n  _updatePopupPosition(isRtlEnabled) {\n    const {\n      my: my,\n      at: at\n    } = this._getDefaultPopupPosition(isRtlEnabled);\n    const currentPosition = this.option(\"popupPosition\");\n    this.option(\"popupPosition\", extend({}, currentPosition, {\n      my: my,\n      at: at\n    }));\n  }\n  _initVisibilityActions() {\n    this._openAction = this._createActionByOption(\"onOpened\", {\n      excludeValidators: [\"disabled\", \"readOnly\"]\n    });\n    this._closeAction = this._createActionByOption(\"onClosed\", {\n      excludeValidators: [\"disabled\", \"readOnly\"]\n    });\n  }\n  _initPopupInitializedAction() {\n    this._popupInitializedAction = this._createActionByOption(\"onPopupInitialized\", {\n      excludeValidators: [\"disabled\", \"readOnly\"]\n    });\n  }\n  _initMarkup() {\n    this._renderSubmitElement();\n    super._initMarkup();\n    this.$element().addClass(\"dx-dropdowneditor\");\n    this.setAria(\"role\", this._getAriaRole());\n  }\n  _render() {\n    this._detachFocusEvents();\n    super._render();\n    this._renderOpenHandler();\n    this._attachFocusOutHandler();\n    this._renderOpenedState();\n  }\n  _renderContentImpl() {\n    if (!this.option(\"deferRendering\")) {\n      this._createPopup();\n    }\n  }\n  _renderInput() {\n    super._renderInput();\n    this._renderTemplateWrapper();\n    this._wrapInput();\n    this._setDefaultAria();\n  }\n  _wrapInput() {\n    this._$container = this.$element().wrapInner($(\"<div>\").addClass(DROP_DOWN_EDITOR_INPUT_WRAPPER)).children().eq(0);\n  }\n  _getAriaHasPopup() {\n    return \"true\";\n  }\n  _getAriaAutocomplete() {\n    return \"none\";\n  }\n  _getAriaRole() {\n    return \"combobox\";\n  }\n  _setDefaultAria() {\n    this.setAria({\n      haspopup: this._getAriaHasPopup(),\n      autocomplete: this._getAriaAutocomplete(),\n      role: this._getAriaRole()\n    });\n  }\n  _readOnlyPropValue() {\n    return !this._isEditable() || super._readOnlyPropValue();\n  }\n  _cleanFocusState() {\n    super._cleanFocusState();\n    if (this.option(\"fieldTemplate\")) {\n      this._detachFocusEvents();\n    }\n  }\n  _getFieldTemplate() {\n    return this.option(\"fieldTemplate\") && this._getTemplateByOption(\"fieldTemplate\");\n  }\n  _renderMask() {\n    if (this.option(\"fieldTemplate\")) {\n      return;\n    }\n    super._renderMask();\n  }\n  _renderField() {\n    const fieldTemplate = this._getFieldTemplate();\n    if (fieldTemplate) {\n      this._renderTemplatedField(fieldTemplate, this._fieldRenderData());\n    }\n  }\n  _renderPlaceholder() {\n    const hasFieldTemplate = !!this._getFieldTemplate();\n    if (!hasFieldTemplate) {\n      super._renderPlaceholder();\n    }\n  }\n  _renderValue() {\n    if (this.option(\"useHiddenSubmitElement\")) {\n      this._setSubmitValue();\n    }\n    const promise = super._renderValue();\n    return promise.always(this._renderField.bind(this));\n  }\n  _getButtonsContainer() {\n    const fieldTemplate = this._getFieldTemplate();\n    return fieldTemplate ? this._$container : this._$textEditorContainer;\n  }\n  _renderTemplateWrapper() {\n    const fieldTemplate = this._getFieldTemplate();\n    if (!fieldTemplate) {\n      return;\n    }\n    if (!this._$templateWrapper) {\n      this._$templateWrapper = createTemplateWrapperElement().prependTo(this.$element());\n    }\n  }\n  _renderTemplatedField(fieldTemplate, data) {\n    const isFocused = focused(this._input());\n    this._detachKeyboardEvents();\n    this._detachFocusEvents();\n    this._$textEditorContainer.remove();\n    const $newTemplateWrapper = createTemplateWrapperElement();\n    this._$templateWrapper.replaceWith($newTemplateWrapper);\n    this._$templateWrapper = $newTemplateWrapper;\n    const currentRenderContext = Symbol(\"renderContext\");\n    this._activeRenderContext = currentRenderContext;\n    fieldTemplate.render({\n      model: data,\n      container: getPublicElement(this._$templateWrapper),\n      onRendered: () => {\n        if (this._activeRenderContext !== currentRenderContext) {\n          return;\n        }\n        const $input = this._input();\n        if (!$input.length) {\n          throw errors.Error(\"E1010\");\n        }\n        this._integrateInput();\n        if (!isFocused) {\n          return;\n        }\n        if (browser.mozilla) {\n          const inputElement = $input.get(0);\n          inputElement.focus({\n            preventScroll: true\n          });\n        } else {\n          eventsEngine.trigger($input, \"focus\");\n        }\n      }\n    });\n  }\n  _integrateInput() {\n    const {\n      isValid: isValid\n    } = this.option();\n    this._renderFocusState();\n    this._refreshValueChangeEvent();\n    this._refreshEvents();\n    this._refreshEmptinessEvent();\n    this._setDefaultAria();\n    this._setFieldAria();\n    this._toggleValidationClasses(!isValid);\n    const {\n      _onMarkupRendered: markupRendered\n    } = this.option();\n    null === markupRendered || void 0 === markupRendered || markupRendered();\n  }\n  _refreshEmptinessEvent() {\n    eventsEngine.off(this._input(), \"input blur\", this._toggleEmptinessEventHandler);\n    this._renderEmptinessEvent();\n  }\n  _fieldRenderData() {\n    return this.option(\"value\");\n  }\n  _initTemplates() {\n    this._templateManager.addDefaultTemplates({\n      dropDownButton: new FunctionTemplate(options => {\n        const $icon = $(\"<div>\").addClass(\"dx-dropdowneditor-icon\");\n        $(options.container).append($icon);\n      })\n    });\n    super._initTemplates();\n  }\n  _renderOpenHandler() {\n    const $inputWrapper = this._inputWrapper();\n    const eventName = addNamespace(clickEventName, this.NAME);\n    const {\n      openOnFieldClick: openOnFieldClick\n    } = this.option();\n    eventsEngine.off($inputWrapper, eventName);\n    eventsEngine.on($inputWrapper, eventName, this._getInputClickHandler(openOnFieldClick));\n    this.$element().toggleClass(DROP_DOWN_EDITOR_FIELD_CLICKABLE, openOnFieldClick);\n    if (openOnFieldClick) {\n      this._openOnFieldClickAction = this._createAction(this._openHandler.bind(this));\n    }\n  }\n  _attachFocusOutHandler() {\n    if (isIOs) {\n      this._detachFocusOutEvents();\n      eventsEngine.on(this._inputWrapper(), addNamespace(\"focusout\", this.NAME), event => {\n        const newTarget = event.relatedTarget;\n        if (newTarget && this.option(\"opened\")) {\n          const isNewTargetOutside = this._isTargetOutOfComponent(newTarget);\n          if (isNewTargetOutside) {\n            this.close();\n          }\n        }\n      });\n    }\n  }\n  _isTargetOutOfComponent(newTarget) {\n    const popupWrapper = this.content ? $(this.content()).closest(`.${DROP_DOWN_EDITOR_OVERLAY}`) : this._$popup;\n    const isTargetOutsidePopup = 0 === $(newTarget).closest(`.${DROP_DOWN_EDITOR_OVERLAY}`, popupWrapper).length;\n    return isTargetOutsidePopup;\n  }\n  _detachFocusOutEvents() {\n    isIOs && eventsEngine.off(this._inputWrapper(), addNamespace(\"focusout\", this.NAME));\n  }\n  _getInputClickHandler(openOnFieldClick) {\n    return openOnFieldClick ? e => {\n      this._executeOpenAction(e);\n    } : () => {\n      this._focusInput();\n    };\n  }\n  _openHandler() {\n    this._toggleOpenState();\n  }\n  _executeOpenAction(e) {\n    var _this$_openOnFieldCli;\n    null === (_this$_openOnFieldCli = this._openOnFieldClickAction) || void 0 === _this$_openOnFieldCli || _this$_openOnFieldCli.call(this, {\n      event: e\n    });\n  }\n  _keyboardEventBindingTarget() {\n    return this._input();\n  }\n  _focusInput() {\n    if (this.option(\"disabled\")) {\n      return false;\n    }\n    if (this.option(\"focusStateEnabled\") && !focused(this._input())) {\n      this._resetCaretPosition();\n      eventsEngine.trigger(this._input(), \"focus\");\n    }\n    return true;\n  }\n  _resetCaretPosition() {\n    let ignoreEditable = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : false;\n    const inputElement = this._input().get(0);\n    if (inputElement) {\n      const {\n        value: value\n      } = inputElement;\n      const caretPosition = isDefined(value) && (ignoreEditable || this._isEditable()) ? value.length : 0;\n      this._caret({\n        start: caretPosition,\n        end: caretPosition\n      }, true);\n    }\n  }\n  _isEditable() {\n    const {\n      acceptCustomValue: acceptCustomValue\n    } = this.option();\n    return acceptCustomValue;\n  }\n  _toggleOpenState(isVisible) {\n    if (!this._focusInput()) {\n      return;\n    }\n    if (!this.option(\"readOnly\")) {\n      isVisible = arguments.length ? isVisible : !this.option(\"opened\");\n      this.option(\"opened\", isVisible);\n    }\n  }\n  _getControlsAria() {\n    return this._popup && this._popupContentId;\n  }\n  _renderOpenedState() {\n    const opened = this.option(\"opened\");\n    if (opened) {\n      this._createPopup();\n    }\n    this.$element().toggleClass(DROP_DOWN_EDITOR_ACTIVE, opened);\n    this._setPopupOption(\"visible\", opened);\n    const arias = {\n      expanded: opened,\n      controls: this._getControlsAria()\n    };\n    this.setAria(arias);\n    this.setAria(\"owns\", opened ? this._popupContentId : void 0, this.$element());\n  }\n  _createPopup() {\n    if (this._$popup) {\n      return;\n    }\n    this._$popup = $(\"<div>\").addClass(DROP_DOWN_EDITOR_OVERLAY).appendTo(this.$element());\n    this._renderPopup();\n    this._renderPopupContent();\n    this._setPopupAriaLabel();\n  }\n  _setPopupAriaLabel() {\n    const $overlayContent = this._popup.$overlayContent();\n    this.setAria(\"label\", \"Dropdown\", $overlayContent);\n  }\n  _renderPopupContent() {}\n  _renderPopup() {\n    const popupConfig = extend(this._popupConfig(), this._options.cache(\"dropDownOptions\"));\n    delete popupConfig.closeOnOutsideClick;\n    this._popup = this._createComponent(this._$popup, Popup, popupConfig);\n    this._popup.on({\n      showing: this._popupShowingHandler.bind(this),\n      shown: this._popupShownHandler.bind(this),\n      hiding: this._popupHidingHandler.bind(this),\n      hidden: this._popupHiddenHandler.bind(this),\n      contentReady: this._contentReadyHandler.bind(this)\n    });\n    this._attachPopupKeyHandler();\n    this._contentReadyHandler();\n    this._setPopupContentId(this._popup.$content());\n    this._bindInnerWidgetOptions(this._popup, \"dropDownOptions\");\n  }\n  _attachPopupKeyHandler() {\n    eventsEngine.on(this._popup.$overlayContent(), addNamespace(\"keydown\", this.NAME), e => this._popupKeyHandler(e));\n  }\n  _popupKeyHandler(e) {\n    switch (normalizeKeyName(e)) {\n      case \"tab\":\n        this._popupTabHandler(e);\n        break;\n      case \"escape\":\n        this._popupEscHandler();\n    }\n  }\n  _popupTabHandler(e) {\n    const $target = $(e.target);\n    const moveBackward = e.shiftKey && $target.is(this._getFirstPopupElement());\n    const moveForward = !e.shiftKey && $target.is(this._getLastPopupElement());\n    if (moveForward || moveBackward) {\n      eventsEngine.trigger(this.field(), \"focus\");\n      e.preventDefault();\n    }\n  }\n  _popupEscHandler() {\n    eventsEngine.trigger(this._input(), \"focus\");\n    this.close();\n  }\n  _setPopupContentId($popupContent) {\n    this._popupContentId = `dx-${new Guid()}`;\n    this.setAria(\"id\", this._popupContentId, $popupContent);\n  }\n  _contentReadyHandler() {}\n  _popupConfig() {\n    return {\n      onInitialized: this._getPopupInitializedHandler(),\n      position: extend(this.option(\"popupPosition\"), {\n        of: this.$element()\n      }),\n      showTitle: this.option(\"dropDownOptions.showTitle\"),\n      _ignoreFunctionValueDeprecation: true,\n      width: () => getElementWidth(this.$element()),\n      height: \"auto\",\n      shading: false,\n      hideOnParentScroll: true,\n      hideOnOutsideClick: e => this._closeOutsideDropDownHandler(e),\n      animation: {\n        show: {\n          type: \"fade\",\n          duration: 0,\n          from: 0,\n          to: 1\n        },\n        hide: {\n          type: \"fade\",\n          duration: 400,\n          from: 1,\n          to: 0\n        }\n      },\n      deferRendering: false,\n      focusStateEnabled: false,\n      showCloseButton: false,\n      dragEnabled: false,\n      toolbarItems: this._getPopupToolbarItems(),\n      onPositioned: this._popupPositionedHandler.bind(this),\n      fullScreen: false,\n      contentTemplate: null,\n      _hideOnParentScrollTarget: this.$element(),\n      _wrapperClassExternal: DROP_DOWN_EDITOR_OVERLAY,\n      _ignorePreventScrollEventsDeprecation: true\n    };\n  }\n  _popupInitializedHandler() {}\n  _getPopupInitializedHandler() {\n    const onPopupInitialized = this.option(\"onPopupInitialized\");\n    return e => {\n      this._popupInitializedHandler();\n      if (onPopupInitialized) {\n        this._popupInitializedAction({\n          popup: e.component\n        });\n      }\n    };\n  }\n  _dimensionChanged() {\n    if (hasWindow() && !this.$element().is(\":visible\")) {\n      this.close();\n      return;\n    }\n    this._updatePopupWidth();\n  }\n  _updatePopupWidth() {\n    const popupWidth = getSizeValue(this.option(\"dropDownOptions.width\"));\n    if (void 0 === popupWidth) {\n      this._setPopupOption(\"width\", () => getElementWidth(this.$element()));\n    }\n  }\n  _popupPositionedHandler(e) {\n    var _e$position;\n    const {\n      labelMode: labelMode,\n      stylingMode: stylingMode\n    } = this.option();\n    if (!this._popup) {\n      return;\n    }\n    const $popupOverlayContent = this._popup.$overlayContent();\n    const isOverlayFlipped = null === (_e$position = e.position) || void 0 === _e$position || null === (_e$position = _e$position.v) || void 0 === _e$position ? void 0 : _e$position.flip;\n    const shouldIndentForLabel = \"hidden\" !== labelMode && \"outside\" !== labelMode && \"outlined\" === stylingMode;\n    if (e.position) {\n      $popupOverlayContent.toggleClass(DROP_DOWN_EDITOR_OVERLAY_FLIPPED, isOverlayFlipped);\n    }\n    if (isOverlayFlipped && shouldIndentForLabel && this._label.isVisible()) {\n      const $label = this._label.$element();\n      move($popupOverlayContent, {\n        top: locate($popupOverlayContent).top - parseInt($label.css(\"fontSize\"))\n      });\n    }\n  }\n  _popupShowingHandler() {}\n  _popupHidingHandler() {\n    this.option(\"opened\", false);\n  }\n  _popupShownHandler() {\n    var _this$_validationMess;\n    this._openAction();\n    null === (_this$_validationMess = this._validationMessage) || void 0 === _this$_validationMess || _this$_validationMess.option(\"positionSide\", this._getValidationMessagePositionSide());\n  }\n  _popupHiddenHandler() {\n    var _this$_validationMess2;\n    this._closeAction();\n    null === (_this$_validationMess2 = this._validationMessage) || void 0 === _this$_validationMess2 || _this$_validationMess2.option(\"positionSide\", this._getValidationMessagePositionSide());\n  }\n  _getValidationMessagePositionSide() {\n    var _this$_popup;\n    const {\n      validationMessagePosition: validationMessagePosition\n    } = this.option();\n    if (\"auto\" !== validationMessagePosition) {\n      return validationMessagePosition;\n    }\n    let positionSide = \"bottom\";\n    if (null !== (_this$_popup = this._popup) && void 0 !== _this$_popup && _this$_popup.option(\"visible\")) {\n      const {\n        top: myTop\n      } = animationPosition.setup(this.$element());\n      const {\n        top: popupTop\n      } = animationPosition.setup(this._popup.$content());\n      positionSide = myTop + this.option(\"popupPosition\").offset.v > popupTop ? \"bottom\" : \"top\";\n    }\n    return positionSide;\n  }\n  _closeOutsideDropDownHandler(event) {\n    const {\n      target: target\n    } = event;\n    const $target = $(target);\n    const dropDownButton = this.getButton(\"dropDown\");\n    const $dropDownButton = null === dropDownButton || void 0 === dropDownButton ? void 0 : dropDownButton.$element();\n    const isInputClicked = !!$target.closest(this.$element()).length;\n    const isDropDownButtonClicked = !!$target.closest($dropDownButton).length;\n    const isOutsideClick = !isInputClicked && !isDropDownButtonClicked;\n    return isOutsideClick;\n  }\n  _clean() {\n    delete this._openOnFieldClickAction;\n    delete this._$templateWrapper;\n    if (this._$popup) {\n      this._$popup.remove();\n      delete this._$popup;\n      delete this._popup;\n    }\n    super._clean();\n  }\n  _setPopupOption(optionName, value) {\n    this._setWidgetOption(\"_popup\", arguments);\n  }\n  _validatedOpening() {\n    if (!this.option(\"readOnly\")) {\n      this._toggleOpenState(true);\n    }\n  }\n  _getPopupToolbarItems() {\n    const {\n      applyValueMode: applyValueMode\n    } = this.option();\n    return \"useButtons\" === applyValueMode ? this._popupToolbarItemsConfig() : [];\n  }\n  _getFirstPopupElement() {\n    return $(this._popup.getFocusableElements()).first();\n  }\n  _getLastPopupElement() {\n    return $(this._popup.getFocusableElements()).last();\n  }\n  _popupToolbarItemsConfig() {\n    const buttonsConfig = [{\n      shortcut: \"done\",\n      options: {\n        onClick: this._applyButtonHandler.bind(this),\n        text: this.option(\"applyButtonText\")\n      }\n    }, {\n      shortcut: \"cancel\",\n      options: {\n        onClick: this._cancelButtonHandler.bind(this),\n        text: this.option(\"cancelButtonText\")\n      }\n    }];\n    return this._applyButtonsLocation(buttonsConfig);\n  }\n  _applyButtonsLocation(buttonsConfig) {\n    const {\n      buttonsLocation: buttonsLocation\n    } = this.option();\n    const resultConfig = buttonsConfig;\n    if (\"default\" !== buttonsLocation) {\n      const position = splitPair(buttonsLocation);\n      each(resultConfig, (_, element) => {\n        extend(element, {\n          toolbar: position[0],\n          location: position[1]\n        });\n      });\n    }\n    return resultConfig;\n  }\n  _applyButtonHandler(args) {\n    this.close();\n    if (this.option(\"focusStateEnabled\")) {\n      this.focus();\n    }\n  }\n  _cancelButtonHandler() {\n    this.close();\n    if (this.option(\"focusStateEnabled\")) {\n      this.focus();\n    }\n  }\n  _popupOptionChanged(args) {\n    const options = Widget.getOptionsFromContainer(args);\n    this._setPopupOption(options);\n    const optionsKeys = Object.keys(options);\n    if (optionsKeys.includes(\"width\") || optionsKeys.includes(\"height\")) {\n      this._dimensionChanged();\n    }\n  }\n  _renderSubmitElement() {\n    if (this.option(\"useHiddenSubmitElement\")) {\n      this._$submitElement = $(\"<input>\").attr(\"type\", \"hidden\").appendTo(this.$element());\n    }\n  }\n  _setSubmitValue() {\n    const {\n      value: value\n    } = this.option();\n    this._getSubmitElement().val(value);\n  }\n  _getSubmitElement() {\n    if (this.option(\"useHiddenSubmitElement\")) {\n      return this._$submitElement;\n    }\n    return super._getSubmitElement();\n  }\n  _dispose() {\n    this._detachFocusOutEvents();\n    super._dispose();\n  }\n  _optionChanged(args) {\n    var _this$_popup2;\n    const {\n      name: name,\n      value: value\n    } = args;\n    switch (name) {\n      case \"width\":\n      case \"height\":\n        super._optionChanged(args);\n        null === (_this$_popup2 = this._popup) || void 0 === _this$_popup2 || _this$_popup2.repaint();\n        break;\n      case \"opened\":\n        this._renderOpenedState();\n        break;\n      case \"onOpened\":\n      case \"onClosed\":\n        this._initVisibilityActions();\n        break;\n      case \"onPopupInitialized\":\n        this._initPopupInitializedAction();\n        break;\n      case \"fieldTemplate\":\n      case \"acceptCustomValue\":\n      case \"openOnFieldClick\":\n        this._invalidate();\n        break;\n      case \"dropDownButtonTemplate\":\n      case \"showDropDownButton\":\n        this._updateButtons([\"dropDown\"]);\n        break;\n      case \"dropDownOptions\":\n        {\n          this._popupOptionChanged(args);\n          const {\n            dropDownOptions: dropDownOptions\n          } = this.option();\n          this._options.cache(\"dropDownOptions\", dropDownOptions);\n          break;\n        }\n      case \"popupPosition\":\n        break;\n      case \"deferRendering\":\n        if (hasWindow()) {\n          this._createPopup();\n        }\n        break;\n      case \"applyValueMode\":\n      case \"applyButtonText\":\n      case \"cancelButtonText\":\n      case \"buttonsLocation\":\n        this._setPopupOption(\"toolbarItems\", this._getPopupToolbarItems());\n        break;\n      case \"useHiddenSubmitElement\":\n        if (this._$submitElement) {\n          this._$submitElement.remove();\n          this._$submitElement = void 0;\n        }\n        this._renderSubmitElement();\n        break;\n      case \"rtlEnabled\":\n        this._updatePopupPosition(value);\n        super._optionChanged(args);\n        break;\n      default:\n        super._optionChanged(args);\n    }\n  }\n  open() {\n    this.option(\"opened\", true);\n  }\n  close() {\n    this.option(\"opened\", false);\n  }\n  field() {\n    return getPublicElement(this._input());\n  }\n  content() {\n    return this._popup ? this._popup.content() : null;\n  }\n}\nregisterComponent(\"dxDropDownEditor\", DropDownEditor);\nexport default DropDownEditor;","map":{"version":3,"names":["_extends","animationPosition","locate","move","name","clickEventName","eventsEngine","addNamespace","isCommandKeyPressed","normalizeKeyName","messageLocalization","registerComponent","devices","getPublicElement","Guid","$","FunctionTemplate","browser","splitPair","extend","each","getDefaultAlignment","isDefined","hasWindow","Popup","focused","errors","Widget","TextBox","DropDownButton","getElementWidth","getSizeValue","DROP_DOWN_EDITOR_CLASS","DROP_DOWN_EDITOR_INPUT_WRAPPER","DROP_DOWN_EDITOR_BUTTON_ICON","DROP_DOWN_EDITOR_OVERLAY","DROP_DOWN_EDITOR_OVERLAY_FLIPPED","DROP_DOWN_EDITOR_ACTIVE","DROP_DOWN_EDITOR_FIELD_CLICKABLE","DROP_DOWN_EDITOR_FIELD_TEMPLATE_WRAPPER","OVERLAY_CONTENT_LABEL","isIOs","current","platform","createTemplateWrapperElement","addClass","DropDownEditor","_supportedKeys","tab","e","option","_popup","getFocusableElements","length","close","$focusableElement","shiftKey","_getLastPopupElement","_getFirstPopupElement","trigger","select","preventDefault","escape","upArrow","stopPropagation","altKey","downArrow","_validatedOpening","enter","_valueChangeEventHandler","_getDefaultButtons","concat","Ctor","_getDefaultOptions","value","onOpened","onClosed","opened","acceptCustomValue","applyValueMode","deferRendering","activeStateEnabled","dropDownButtonTemplate","fieldTemplate","openOnFieldClick","showDropDownButton","buttons","dropDownOptions","showTitle","popupPosition","_getDefaultPopupPosition","onPopupInitialized","applyButtonText","format","cancelButtonText","buttonsLocation","useHiddenSubmitElement","validationMessagePosition","_useTemplates","isRtlEnabled","position","offset","h","v","my","at","collision","_defaultOptionsRules","device","isGeneric","options","_inputWrapper","$element","find","first","_init","_initVisibilityActions","_initPopupInitializedAction","rtlEnabled","_updatePopupPosition","_options","cache","currentPosition","_openAction","_createActionByOption","excludeValidators","_closeAction","_popupInitializedAction","_initMarkup","_renderSubmitElement","setAria","_getAriaRole","_render","_detachFocusEvents","_renderOpenHandler","_attachFocusOutHandler","_renderOpenedState","_renderContentImpl","_createPopup","_renderInput","_renderTemplateWrapper","_wrapInput","_setDefaultAria","_$container","wrapInner","children","eq","_getAriaHasPopup","_getAriaAutocomplete","haspopup","autocomplete","role","_readOnlyPropValue","_isEditable","_cleanFocusState","_getFieldTemplate","_getTemplateByOption","_renderMask","_renderField","_renderTemplatedField","_fieldRenderData","_renderPlaceholder","hasFieldTemplate","_renderValue","_setSubmitValue","promise","always","bind","_getButtonsContainer","_$textEditorContainer","_$templateWrapper","prependTo","data","isFocused","_input","_detachKeyboardEvents","remove","$newTemplateWrapper","replaceWith","currentRenderContext","Symbol","_activeRenderContext","render","model","container","onRendered","$input","Error","_integrateInput","mozilla","inputElement","get","focus","preventScroll","isValid","_renderFocusState","_refreshValueChangeEvent","_refreshEvents","_refreshEmptinessEvent","_setFieldAria","_toggleValidationClasses","_onMarkupRendered","markupRendered","off","_toggleEmptinessEventHandler","_renderEmptinessEvent","_initTemplates","_templateManager","addDefaultTemplates","dropDownButton","$icon","append","$inputWrapper","eventName","NAME","on","_getInputClickHandler","toggleClass","_openOnFieldClickAction","_createAction","_openHandler","_detachFocusOutEvents","event","newTarget","relatedTarget","isNewTargetOutside","_isTargetOutOfComponent","popupWrapper","content","closest","_$popup","isTargetOutsidePopup","_executeOpenAction","_focusInput","_toggleOpenState","_this$_openOnFieldCli","call","_keyboardEventBindingTarget","_resetCaretPosition","ignoreEditable","arguments","caretPosition","_caret","start","end","isVisible","_getControlsAria","_popupContentId","_setPopupOption","arias","expanded","controls","appendTo","_renderPopup","_renderPopupContent","_setPopupAriaLabel","$overlayContent","popupConfig","_popupConfig","closeOnOutsideClick","_createComponent","showing","_popupShowingHandler","shown","_popupShownHandler","hiding","_popupHidingHandler","hidden","_popupHiddenHandler","contentReady","_contentReadyHandler","_attachPopupKeyHandler","_setPopupContentId","$content","_bindInnerWidgetOptions","_popupKeyHandler","_popupTabHandler","_popupEscHandler","$target","target","moveBackward","is","moveForward","field","$popupContent","onInitialized","_getPopupInitializedHandler","of","_ignoreFunctionValueDeprecation","width","height","shading","hideOnParentScroll","hideOnOutsideClick","_closeOutsideDropDownHandler","animation","show","type","duration","from","to","hide","focusStateEnabled","showCloseButton","dragEnabled","toolbarItems","_getPopupToolbarItems","onPositioned","_popupPositionedHandler","fullScreen","contentTemplate","_hideOnParentScrollTarget","_wrapperClassExternal","_ignorePreventScrollEventsDeprecation","_popupInitializedHandler","popup","component","_dimensionChanged","_updatePopupWidth","popupWidth","_e$position","labelMode","stylingMode","$popupOverlayContent","isOverlayFlipped","flip","shouldIndentForLabel","_label","$label","top","parseInt","css","_this$_validationMess","_validationMessage","_getValidationMessagePositionSide","_this$_validationMess2","_this$_popup","positionSide","myTop","setup","popupTop","getButton","$dropDownButton","isInputClicked","isDropDownButtonClicked","isOutsideClick","_clean","optionName","_setWidgetOption","_popupToolbarItemsConfig","last","buttonsConfig","shortcut","onClick","_applyButtonHandler","text","_cancelButtonHandler","_applyButtonsLocation","resultConfig","_","element","toolbar","location","args","_popupOptionChanged","getOptionsFromContainer","optionsKeys","Object","keys","includes","_$submitElement","attr","_getSubmitElement","val","_dispose","_optionChanged","_this$_popup2","repaint","_invalidate","_updateButtons","open"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/ui/drop_down_editor/m_drop_down_editor.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/ui/drop_down_editor/m_drop_down_editor.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport animationPosition from \"../../../common/core/animation/position\";\r\nimport {\r\n    locate,\r\n    move\r\n} from \"../../../common/core/animation/translator\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../../common/core/events/click\";\r\nimport eventsEngine from \"../../../common/core/events/core/events_engine\";\r\nimport {\r\n    addNamespace,\r\n    isCommandKeyPressed,\r\n    normalizeKeyName\r\n} from \"../../../common/core/events/utils/index\";\r\nimport messageLocalization from \"../../../common/core/localization/message\";\r\nimport registerComponent from \"../../../core/component_registrator\";\r\nimport devices from \"../../../core/devices\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../../core/element\";\r\nimport Guid from \"../../../core/guid\";\r\nimport $ from \"../../../core/renderer\";\r\nimport {\r\n    FunctionTemplate\r\n} from \"../../../core/templates/function_template\";\r\nimport browser from \"../../../core/utils/browser\";\r\nimport {\r\n    splitPair\r\n} from \"../../../core/utils/common\";\r\nimport {\r\n    extend\r\n} from \"../../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../../core/utils/iterator\";\r\nimport {\r\n    getDefaultAlignment\r\n} from \"../../../core/utils/position\";\r\nimport {\r\n    isDefined\r\n} from \"../../../core/utils/type\";\r\nimport {\r\n    hasWindow\r\n} from \"../../../core/utils/window\";\r\nimport Popup from \"../../../ui/popup/ui.popup\";\r\nimport {\r\n    focused\r\n} from \"../../../ui/widget/selectors\";\r\nimport errors from \"../../../ui/widget/ui.errors\";\r\nimport Widget from \"../../../ui/widget/ui.widget\";\r\nimport TextBox from \"../../ui/text_box/m_text_box\";\r\nimport DropDownButton from \"./m_drop_down_button\";\r\nimport {\r\n    getElementWidth,\r\n    getSizeValue\r\n} from \"./m_utils\";\r\nexport const DROP_DOWN_EDITOR_CLASS = \"dx-dropdowneditor\";\r\nconst DROP_DOWN_EDITOR_INPUT_WRAPPER = \"dx-dropdowneditor-input-wrapper\";\r\nconst DROP_DOWN_EDITOR_BUTTON_ICON = \"dx-dropdowneditor-icon\";\r\nconst DROP_DOWN_EDITOR_OVERLAY = \"dx-dropdowneditor-overlay\";\r\nconst DROP_DOWN_EDITOR_OVERLAY_FLIPPED = \"dx-dropdowneditor-overlay-flipped\";\r\nconst DROP_DOWN_EDITOR_ACTIVE = \"dx-dropdowneditor-active\";\r\nconst DROP_DOWN_EDITOR_FIELD_CLICKABLE = \"dx-dropdowneditor-field-clickable\";\r\nconst DROP_DOWN_EDITOR_FIELD_TEMPLATE_WRAPPER = \"dx-dropdowneditor-field-template-wrapper\";\r\nconst OVERLAY_CONTENT_LABEL = \"Dropdown\";\r\nconst isIOs = \"ios\" === devices.current().platform;\r\n\r\nfunction createTemplateWrapperElement() {\r\n    return $(\"<div>\").addClass(DROP_DOWN_EDITOR_FIELD_TEMPLATE_WRAPPER)\r\n}\r\nclass DropDownEditor extends TextBox {\r\n    _supportedKeys() {\r\n        return _extends({}, super._supportedKeys(), {\r\n            tab: e => {\r\n                if (!this.option(\"opened\")) {\r\n                    return\r\n                }\r\n                if (!this._popup.getFocusableElements().length) {\r\n                    this.close();\r\n                    return\r\n                }\r\n                const $focusableElement = e.shiftKey ? this._getLastPopupElement() : this._getFirstPopupElement();\r\n                if ($focusableElement) {\r\n                    eventsEngine.trigger($focusableElement, \"focus\");\r\n                    $focusableElement.select()\r\n                }\r\n                e.preventDefault()\r\n            },\r\n            escape: e => {\r\n                if (this.option(\"opened\")) {\r\n                    e.preventDefault()\r\n                }\r\n                this.close();\r\n                return true\r\n            },\r\n            upArrow: e => {\r\n                if (!isCommandKeyPressed(e)) {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                    if (e.altKey) {\r\n                        this.close();\r\n                        return false\r\n                    }\r\n                }\r\n                return true\r\n            },\r\n            downArrow: e => {\r\n                if (!isCommandKeyPressed(e)) {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                    if (e.altKey) {\r\n                        this._validatedOpening();\r\n                        return false\r\n                    }\r\n                }\r\n                return true\r\n            },\r\n            enter: e => {\r\n                if (this.option(\"opened\")) {\r\n                    e.preventDefault();\r\n                    this._valueChangeEventHandler(e)\r\n                }\r\n                return true\r\n            }\r\n        })\r\n    }\r\n    _getDefaultButtons() {\r\n        return super._getDefaultButtons().concat([{\r\n            name: \"dropDown\",\r\n            Ctor: DropDownButton\r\n        }])\r\n    }\r\n    _getDefaultOptions() {\r\n        return _extends({}, super._getDefaultOptions(), {\r\n            value: null,\r\n            onOpened: null,\r\n            onClosed: null,\r\n            opened: false,\r\n            acceptCustomValue: true,\r\n            applyValueMode: \"instantly\",\r\n            deferRendering: true,\r\n            activeStateEnabled: true,\r\n            dropDownButtonTemplate: \"dropDownButton\",\r\n            fieldTemplate: null,\r\n            openOnFieldClick: false,\r\n            showDropDownButton: true,\r\n            buttons: void 0,\r\n            dropDownOptions: {\r\n                showTitle: false\r\n            },\r\n            popupPosition: this._getDefaultPopupPosition(),\r\n            onPopupInitialized: null,\r\n            applyButtonText: messageLocalization.format(\"OK\"),\r\n            cancelButtonText: messageLocalization.format(\"Cancel\"),\r\n            buttonsLocation: \"default\",\r\n            useHiddenSubmitElement: false,\r\n            validationMessagePosition: \"auto\"\r\n        })\r\n    }\r\n    _useTemplates() {\r\n        return true\r\n    }\r\n    _getDefaultPopupPosition(isRtlEnabled) {\r\n        const position = getDefaultAlignment(isRtlEnabled);\r\n        return {\r\n            offset: {\r\n                h: 0,\r\n                v: -1\r\n            },\r\n            my: `${position} top`,\r\n            at: `${position} bottom`,\r\n            collision: \"flip flip\"\r\n        }\r\n    }\r\n    _defaultOptionsRules() {\r\n        return super._defaultOptionsRules().concat([{\r\n            device(device) {\r\n                const isGeneric = \"generic\" === device.platform;\r\n                return isGeneric\r\n            },\r\n            options: {\r\n                popupPosition: {\r\n                    offset: {\r\n                        v: 0\r\n                    }\r\n                }\r\n            }\r\n        }])\r\n    }\r\n    _inputWrapper() {\r\n        return this.$element().find(`.${DROP_DOWN_EDITOR_INPUT_WRAPPER}`).first()\r\n    }\r\n    _init() {\r\n        super._init();\r\n        this._initVisibilityActions();\r\n        this._initPopupInitializedAction();\r\n        const {\r\n            rtlEnabled: rtlEnabled,\r\n            dropDownOptions: dropDownOptions\r\n        } = this.option();\r\n        this._updatePopupPosition(rtlEnabled);\r\n        this._options.cache(\"dropDownOptions\", dropDownOptions)\r\n    }\r\n    _updatePopupPosition(isRtlEnabled) {\r\n        const {\r\n            my: my,\r\n            at: at\r\n        } = this._getDefaultPopupPosition(isRtlEnabled);\r\n        const currentPosition = this.option(\"popupPosition\");\r\n        this.option(\"popupPosition\", extend({}, currentPosition, {\r\n            my: my,\r\n            at: at\r\n        }))\r\n    }\r\n    _initVisibilityActions() {\r\n        this._openAction = this._createActionByOption(\"onOpened\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        });\r\n        this._closeAction = this._createActionByOption(\"onClosed\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    }\r\n    _initPopupInitializedAction() {\r\n        this._popupInitializedAction = this._createActionByOption(\"onPopupInitialized\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    }\r\n    _initMarkup() {\r\n        this._renderSubmitElement();\r\n        super._initMarkup();\r\n        this.$element().addClass(\"dx-dropdowneditor\");\r\n        this.setAria(\"role\", this._getAriaRole())\r\n    }\r\n    _render() {\r\n        this._detachFocusEvents();\r\n        super._render();\r\n        this._renderOpenHandler();\r\n        this._attachFocusOutHandler();\r\n        this._renderOpenedState()\r\n    }\r\n    _renderContentImpl() {\r\n        if (!this.option(\"deferRendering\")) {\r\n            this._createPopup()\r\n        }\r\n    }\r\n    _renderInput() {\r\n        super._renderInput();\r\n        this._renderTemplateWrapper();\r\n        this._wrapInput();\r\n        this._setDefaultAria()\r\n    }\r\n    _wrapInput() {\r\n        this._$container = this.$element().wrapInner($(\"<div>\").addClass(DROP_DOWN_EDITOR_INPUT_WRAPPER)).children().eq(0)\r\n    }\r\n    _getAriaHasPopup() {\r\n        return \"true\"\r\n    }\r\n    _getAriaAutocomplete() {\r\n        return \"none\"\r\n    }\r\n    _getAriaRole() {\r\n        return \"combobox\"\r\n    }\r\n    _setDefaultAria() {\r\n        this.setAria({\r\n            haspopup: this._getAriaHasPopup(),\r\n            autocomplete: this._getAriaAutocomplete(),\r\n            role: this._getAriaRole()\r\n        })\r\n    }\r\n    _readOnlyPropValue() {\r\n        return !this._isEditable() || super._readOnlyPropValue()\r\n    }\r\n    _cleanFocusState() {\r\n        super._cleanFocusState();\r\n        if (this.option(\"fieldTemplate\")) {\r\n            this._detachFocusEvents()\r\n        }\r\n    }\r\n    _getFieldTemplate() {\r\n        return this.option(\"fieldTemplate\") && this._getTemplateByOption(\"fieldTemplate\")\r\n    }\r\n    _renderMask() {\r\n        if (this.option(\"fieldTemplate\")) {\r\n            return\r\n        }\r\n        super._renderMask()\r\n    }\r\n    _renderField() {\r\n        const fieldTemplate = this._getFieldTemplate();\r\n        if (fieldTemplate) {\r\n            this._renderTemplatedField(fieldTemplate, this._fieldRenderData())\r\n        }\r\n    }\r\n    _renderPlaceholder() {\r\n        const hasFieldTemplate = !!this._getFieldTemplate();\r\n        if (!hasFieldTemplate) {\r\n            super._renderPlaceholder()\r\n        }\r\n    }\r\n    _renderValue() {\r\n        if (this.option(\"useHiddenSubmitElement\")) {\r\n            this._setSubmitValue()\r\n        }\r\n        const promise = super._renderValue();\r\n        return promise.always(this._renderField.bind(this))\r\n    }\r\n    _getButtonsContainer() {\r\n        const fieldTemplate = this._getFieldTemplate();\r\n        return fieldTemplate ? this._$container : this._$textEditorContainer\r\n    }\r\n    _renderTemplateWrapper() {\r\n        const fieldTemplate = this._getFieldTemplate();\r\n        if (!fieldTemplate) {\r\n            return\r\n        }\r\n        if (!this._$templateWrapper) {\r\n            this._$templateWrapper = createTemplateWrapperElement().prependTo(this.$element())\r\n        }\r\n    }\r\n    _renderTemplatedField(fieldTemplate, data) {\r\n        const isFocused = focused(this._input());\r\n        this._detachKeyboardEvents();\r\n        this._detachFocusEvents();\r\n        this._$textEditorContainer.remove();\r\n        const $newTemplateWrapper = createTemplateWrapperElement();\r\n        this._$templateWrapper.replaceWith($newTemplateWrapper);\r\n        this._$templateWrapper = $newTemplateWrapper;\r\n        const currentRenderContext = Symbol(\"renderContext\");\r\n        this._activeRenderContext = currentRenderContext;\r\n        fieldTemplate.render({\r\n            model: data,\r\n            container: getPublicElement(this._$templateWrapper),\r\n            onRendered: () => {\r\n                if (this._activeRenderContext !== currentRenderContext) {\r\n                    return\r\n                }\r\n                const $input = this._input();\r\n                if (!$input.length) {\r\n                    throw errors.Error(\"E1010\")\r\n                }\r\n                this._integrateInput();\r\n                if (!isFocused) {\r\n                    return\r\n                }\r\n                if (browser.mozilla) {\r\n                    const inputElement = $input.get(0);\r\n                    inputElement.focus({\r\n                        preventScroll: true\r\n                    })\r\n                } else {\r\n                    eventsEngine.trigger($input, \"focus\")\r\n                }\r\n            }\r\n        })\r\n    }\r\n    _integrateInput() {\r\n        const {\r\n            isValid: isValid\r\n        } = this.option();\r\n        this._renderFocusState();\r\n        this._refreshValueChangeEvent();\r\n        this._refreshEvents();\r\n        this._refreshEmptinessEvent();\r\n        this._setDefaultAria();\r\n        this._setFieldAria();\r\n        this._toggleValidationClasses(!isValid);\r\n        const {\r\n            _onMarkupRendered: markupRendered\r\n        } = this.option();\r\n        null === markupRendered || void 0 === markupRendered || markupRendered()\r\n    }\r\n    _refreshEmptinessEvent() {\r\n        eventsEngine.off(this._input(), \"input blur\", this._toggleEmptinessEventHandler);\r\n        this._renderEmptinessEvent()\r\n    }\r\n    _fieldRenderData() {\r\n        return this.option(\"value\")\r\n    }\r\n    _initTemplates() {\r\n        this._templateManager.addDefaultTemplates({\r\n            dropDownButton: new FunctionTemplate((options => {\r\n                const $icon = $(\"<div>\").addClass(\"dx-dropdowneditor-icon\");\r\n                $(options.container).append($icon)\r\n            }))\r\n        });\r\n        super._initTemplates()\r\n    }\r\n    _renderOpenHandler() {\r\n        const $inputWrapper = this._inputWrapper();\r\n        const eventName = addNamespace(clickEventName, this.NAME);\r\n        const {\r\n            openOnFieldClick: openOnFieldClick\r\n        } = this.option();\r\n        eventsEngine.off($inputWrapper, eventName);\r\n        eventsEngine.on($inputWrapper, eventName, this._getInputClickHandler(openOnFieldClick));\r\n        this.$element().toggleClass(DROP_DOWN_EDITOR_FIELD_CLICKABLE, openOnFieldClick);\r\n        if (openOnFieldClick) {\r\n            this._openOnFieldClickAction = this._createAction(this._openHandler.bind(this))\r\n        }\r\n    }\r\n    _attachFocusOutHandler() {\r\n        if (isIOs) {\r\n            this._detachFocusOutEvents();\r\n            eventsEngine.on(this._inputWrapper(), addNamespace(\"focusout\", this.NAME), (event => {\r\n                const newTarget = event.relatedTarget;\r\n                if (newTarget && this.option(\"opened\")) {\r\n                    const isNewTargetOutside = this._isTargetOutOfComponent(newTarget);\r\n                    if (isNewTargetOutside) {\r\n                        this.close()\r\n                    }\r\n                }\r\n            }))\r\n        }\r\n    }\r\n    _isTargetOutOfComponent(newTarget) {\r\n        const popupWrapper = this.content ? $(this.content()).closest(`.${DROP_DOWN_EDITOR_OVERLAY}`) : this._$popup;\r\n        const isTargetOutsidePopup = 0 === $(newTarget).closest(`.${DROP_DOWN_EDITOR_OVERLAY}`, popupWrapper).length;\r\n        return isTargetOutsidePopup\r\n    }\r\n    _detachFocusOutEvents() {\r\n        isIOs && eventsEngine.off(this._inputWrapper(), addNamespace(\"focusout\", this.NAME))\r\n    }\r\n    _getInputClickHandler(openOnFieldClick) {\r\n        return openOnFieldClick ? e => {\r\n            this._executeOpenAction(e)\r\n        } : () => {\r\n            this._focusInput()\r\n        }\r\n    }\r\n    _openHandler() {\r\n        this._toggleOpenState()\r\n    }\r\n    _executeOpenAction(e) {\r\n        var _this$_openOnFieldCli;\r\n        null === (_this$_openOnFieldCli = this._openOnFieldClickAction) || void 0 === _this$_openOnFieldCli || _this$_openOnFieldCli.call(this, {\r\n            event: e\r\n        })\r\n    }\r\n    _keyboardEventBindingTarget() {\r\n        return this._input()\r\n    }\r\n    _focusInput() {\r\n        if (this.option(\"disabled\")) {\r\n            return false\r\n        }\r\n        if (this.option(\"focusStateEnabled\") && !focused(this._input())) {\r\n            this._resetCaretPosition();\r\n            eventsEngine.trigger(this._input(), \"focus\")\r\n        }\r\n        return true\r\n    }\r\n    _resetCaretPosition() {\r\n        let ignoreEditable = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : false;\r\n        const inputElement = this._input().get(0);\r\n        if (inputElement) {\r\n            const {\r\n                value: value\r\n            } = inputElement;\r\n            const caretPosition = isDefined(value) && (ignoreEditable || this._isEditable()) ? value.length : 0;\r\n            this._caret({\r\n                start: caretPosition,\r\n                end: caretPosition\r\n            }, true)\r\n        }\r\n    }\r\n    _isEditable() {\r\n        const {\r\n            acceptCustomValue: acceptCustomValue\r\n        } = this.option();\r\n        return acceptCustomValue\r\n    }\r\n    _toggleOpenState(isVisible) {\r\n        if (!this._focusInput()) {\r\n            return\r\n        }\r\n        if (!this.option(\"readOnly\")) {\r\n            isVisible = arguments.length ? isVisible : !this.option(\"opened\");\r\n            this.option(\"opened\", isVisible)\r\n        }\r\n    }\r\n    _getControlsAria() {\r\n        return this._popup && this._popupContentId\r\n    }\r\n    _renderOpenedState() {\r\n        const opened = this.option(\"opened\");\r\n        if (opened) {\r\n            this._createPopup()\r\n        }\r\n        this.$element().toggleClass(DROP_DOWN_EDITOR_ACTIVE, opened);\r\n        this._setPopupOption(\"visible\", opened);\r\n        const arias = {\r\n            expanded: opened,\r\n            controls: this._getControlsAria()\r\n        };\r\n        this.setAria(arias);\r\n        this.setAria(\"owns\", opened ? this._popupContentId : void 0, this.$element())\r\n    }\r\n    _createPopup() {\r\n        if (this._$popup) {\r\n            return\r\n        }\r\n        this._$popup = $(\"<div>\").addClass(DROP_DOWN_EDITOR_OVERLAY).appendTo(this.$element());\r\n        this._renderPopup();\r\n        this._renderPopupContent();\r\n        this._setPopupAriaLabel()\r\n    }\r\n    _setPopupAriaLabel() {\r\n        const $overlayContent = this._popup.$overlayContent();\r\n        this.setAria(\"label\", \"Dropdown\", $overlayContent)\r\n    }\r\n    _renderPopupContent() {}\r\n    _renderPopup() {\r\n        const popupConfig = extend(this._popupConfig(), this._options.cache(\"dropDownOptions\"));\r\n        delete popupConfig.closeOnOutsideClick;\r\n        this._popup = this._createComponent(this._$popup, Popup, popupConfig);\r\n        this._popup.on({\r\n            showing: this._popupShowingHandler.bind(this),\r\n            shown: this._popupShownHandler.bind(this),\r\n            hiding: this._popupHidingHandler.bind(this),\r\n            hidden: this._popupHiddenHandler.bind(this),\r\n            contentReady: this._contentReadyHandler.bind(this)\r\n        });\r\n        this._attachPopupKeyHandler();\r\n        this._contentReadyHandler();\r\n        this._setPopupContentId(this._popup.$content());\r\n        this._bindInnerWidgetOptions(this._popup, \"dropDownOptions\")\r\n    }\r\n    _attachPopupKeyHandler() {\r\n        eventsEngine.on(this._popup.$overlayContent(), addNamespace(\"keydown\", this.NAME), (e => this._popupKeyHandler(e)))\r\n    }\r\n    _popupKeyHandler(e) {\r\n        switch (normalizeKeyName(e)) {\r\n            case \"tab\":\r\n                this._popupTabHandler(e);\r\n                break;\r\n            case \"escape\":\r\n                this._popupEscHandler()\r\n        }\r\n    }\r\n    _popupTabHandler(e) {\r\n        const $target = $(e.target);\r\n        const moveBackward = e.shiftKey && $target.is(this._getFirstPopupElement());\r\n        const moveForward = !e.shiftKey && $target.is(this._getLastPopupElement());\r\n        if (moveForward || moveBackward) {\r\n            eventsEngine.trigger(this.field(), \"focus\");\r\n            e.preventDefault()\r\n        }\r\n    }\r\n    _popupEscHandler() {\r\n        eventsEngine.trigger(this._input(), \"focus\");\r\n        this.close()\r\n    }\r\n    _setPopupContentId($popupContent) {\r\n        this._popupContentId = `dx-${new Guid}`;\r\n        this.setAria(\"id\", this._popupContentId, $popupContent)\r\n    }\r\n    _contentReadyHandler() {}\r\n    _popupConfig() {\r\n        return {\r\n            onInitialized: this._getPopupInitializedHandler(),\r\n            position: extend(this.option(\"popupPosition\"), {\r\n                of: this.$element()\r\n            }),\r\n            showTitle: this.option(\"dropDownOptions.showTitle\"),\r\n            _ignoreFunctionValueDeprecation: true,\r\n            width: () => getElementWidth(this.$element()),\r\n            height: \"auto\",\r\n            shading: false,\r\n            hideOnParentScroll: true,\r\n            hideOnOutsideClick: e => this._closeOutsideDropDownHandler(e),\r\n            animation: {\r\n                show: {\r\n                    type: \"fade\",\r\n                    duration: 0,\r\n                    from: 0,\r\n                    to: 1\r\n                },\r\n                hide: {\r\n                    type: \"fade\",\r\n                    duration: 400,\r\n                    from: 1,\r\n                    to: 0\r\n                }\r\n            },\r\n            deferRendering: false,\r\n            focusStateEnabled: false,\r\n            showCloseButton: false,\r\n            dragEnabled: false,\r\n            toolbarItems: this._getPopupToolbarItems(),\r\n            onPositioned: this._popupPositionedHandler.bind(this),\r\n            fullScreen: false,\r\n            contentTemplate: null,\r\n            _hideOnParentScrollTarget: this.$element(),\r\n            _wrapperClassExternal: DROP_DOWN_EDITOR_OVERLAY,\r\n            _ignorePreventScrollEventsDeprecation: true\r\n        }\r\n    }\r\n    _popupInitializedHandler() {}\r\n    _getPopupInitializedHandler() {\r\n        const onPopupInitialized = this.option(\"onPopupInitialized\");\r\n        return e => {\r\n            this._popupInitializedHandler();\r\n            if (onPopupInitialized) {\r\n                this._popupInitializedAction({\r\n                    popup: e.component\r\n                })\r\n            }\r\n        }\r\n    }\r\n    _dimensionChanged() {\r\n        if (hasWindow() && !this.$element().is(\":visible\")) {\r\n            this.close();\r\n            return\r\n        }\r\n        this._updatePopupWidth()\r\n    }\r\n    _updatePopupWidth() {\r\n        const popupWidth = getSizeValue(this.option(\"dropDownOptions.width\"));\r\n        if (void 0 === popupWidth) {\r\n            this._setPopupOption(\"width\", (() => getElementWidth(this.$element())))\r\n        }\r\n    }\r\n    _popupPositionedHandler(e) {\r\n        var _e$position;\r\n        const {\r\n            labelMode: labelMode,\r\n            stylingMode: stylingMode\r\n        } = this.option();\r\n        if (!this._popup) {\r\n            return\r\n        }\r\n        const $popupOverlayContent = this._popup.$overlayContent();\r\n        const isOverlayFlipped = null === (_e$position = e.position) || void 0 === _e$position || null === (_e$position = _e$position.v) || void 0 === _e$position ? void 0 : _e$position.flip;\r\n        const shouldIndentForLabel = \"hidden\" !== labelMode && \"outside\" !== labelMode && \"outlined\" === stylingMode;\r\n        if (e.position) {\r\n            $popupOverlayContent.toggleClass(DROP_DOWN_EDITOR_OVERLAY_FLIPPED, isOverlayFlipped)\r\n        }\r\n        if (isOverlayFlipped && shouldIndentForLabel && this._label.isVisible()) {\r\n            const $label = this._label.$element();\r\n            move($popupOverlayContent, {\r\n                top: locate($popupOverlayContent).top - parseInt($label.css(\"fontSize\"))\r\n            })\r\n        }\r\n    }\r\n    _popupShowingHandler() {}\r\n    _popupHidingHandler() {\r\n        this.option(\"opened\", false)\r\n    }\r\n    _popupShownHandler() {\r\n        var _this$_validationMess;\r\n        this._openAction();\r\n        null === (_this$_validationMess = this._validationMessage) || void 0 === _this$_validationMess || _this$_validationMess.option(\"positionSide\", this._getValidationMessagePositionSide())\r\n    }\r\n    _popupHiddenHandler() {\r\n        var _this$_validationMess2;\r\n        this._closeAction();\r\n        null === (_this$_validationMess2 = this._validationMessage) || void 0 === _this$_validationMess2 || _this$_validationMess2.option(\"positionSide\", this._getValidationMessagePositionSide())\r\n    }\r\n    _getValidationMessagePositionSide() {\r\n        var _this$_popup;\r\n        const {\r\n            validationMessagePosition: validationMessagePosition\r\n        } = this.option();\r\n        if (\"auto\" !== validationMessagePosition) {\r\n            return validationMessagePosition\r\n        }\r\n        let positionSide = \"bottom\";\r\n        if (null !== (_this$_popup = this._popup) && void 0 !== _this$_popup && _this$_popup.option(\"visible\")) {\r\n            const {\r\n                top: myTop\r\n            } = animationPosition.setup(this.$element());\r\n            const {\r\n                top: popupTop\r\n            } = animationPosition.setup(this._popup.$content());\r\n            positionSide = myTop + this.option(\"popupPosition\").offset.v > popupTop ? \"bottom\" : \"top\"\r\n        }\r\n        return positionSide\r\n    }\r\n    _closeOutsideDropDownHandler(event) {\r\n        const {\r\n            target: target\r\n        } = event;\r\n        const $target = $(target);\r\n        const dropDownButton = this.getButton(\"dropDown\");\r\n        const $dropDownButton = null === dropDownButton || void 0 === dropDownButton ? void 0 : dropDownButton.$element();\r\n        const isInputClicked = !!$target.closest(this.$element()).length;\r\n        const isDropDownButtonClicked = !!$target.closest($dropDownButton).length;\r\n        const isOutsideClick = !isInputClicked && !isDropDownButtonClicked;\r\n        return isOutsideClick\r\n    }\r\n    _clean() {\r\n        delete this._openOnFieldClickAction;\r\n        delete this._$templateWrapper;\r\n        if (this._$popup) {\r\n            this._$popup.remove();\r\n            delete this._$popup;\r\n            delete this._popup\r\n        }\r\n        super._clean()\r\n    }\r\n    _setPopupOption(optionName, value) {\r\n        this._setWidgetOption(\"_popup\", arguments)\r\n    }\r\n    _validatedOpening() {\r\n        if (!this.option(\"readOnly\")) {\r\n            this._toggleOpenState(true)\r\n        }\r\n    }\r\n    _getPopupToolbarItems() {\r\n        const {\r\n            applyValueMode: applyValueMode\r\n        } = this.option();\r\n        return \"useButtons\" === applyValueMode ? this._popupToolbarItemsConfig() : []\r\n    }\r\n    _getFirstPopupElement() {\r\n        return $(this._popup.getFocusableElements()).first()\r\n    }\r\n    _getLastPopupElement() {\r\n        return $(this._popup.getFocusableElements()).last()\r\n    }\r\n    _popupToolbarItemsConfig() {\r\n        const buttonsConfig = [{\r\n            shortcut: \"done\",\r\n            options: {\r\n                onClick: this._applyButtonHandler.bind(this),\r\n                text: this.option(\"applyButtonText\")\r\n            }\r\n        }, {\r\n            shortcut: \"cancel\",\r\n            options: {\r\n                onClick: this._cancelButtonHandler.bind(this),\r\n                text: this.option(\"cancelButtonText\")\r\n            }\r\n        }];\r\n        return this._applyButtonsLocation(buttonsConfig)\r\n    }\r\n    _applyButtonsLocation(buttonsConfig) {\r\n        const {\r\n            buttonsLocation: buttonsLocation\r\n        } = this.option();\r\n        const resultConfig = buttonsConfig;\r\n        if (\"default\" !== buttonsLocation) {\r\n            const position = splitPair(buttonsLocation);\r\n            each(resultConfig, ((_, element) => {\r\n                extend(element, {\r\n                    toolbar: position[0],\r\n                    location: position[1]\r\n                })\r\n            }))\r\n        }\r\n        return resultConfig\r\n    }\r\n    _applyButtonHandler(args) {\r\n        this.close();\r\n        if (this.option(\"focusStateEnabled\")) {\r\n            this.focus()\r\n        }\r\n    }\r\n    _cancelButtonHandler() {\r\n        this.close();\r\n        if (this.option(\"focusStateEnabled\")) {\r\n            this.focus()\r\n        }\r\n    }\r\n    _popupOptionChanged(args) {\r\n        const options = Widget.getOptionsFromContainer(args);\r\n        this._setPopupOption(options);\r\n        const optionsKeys = Object.keys(options);\r\n        if (optionsKeys.includes(\"width\") || optionsKeys.includes(\"height\")) {\r\n            this._dimensionChanged()\r\n        }\r\n    }\r\n    _renderSubmitElement() {\r\n        if (this.option(\"useHiddenSubmitElement\")) {\r\n            this._$submitElement = $(\"<input>\").attr(\"type\", \"hidden\").appendTo(this.$element())\r\n        }\r\n    }\r\n    _setSubmitValue() {\r\n        const {\r\n            value: value\r\n        } = this.option();\r\n        this._getSubmitElement().val(value)\r\n    }\r\n    _getSubmitElement() {\r\n        if (this.option(\"useHiddenSubmitElement\")) {\r\n            return this._$submitElement\r\n        }\r\n        return super._getSubmitElement()\r\n    }\r\n    _dispose() {\r\n        this._detachFocusOutEvents();\r\n        super._dispose()\r\n    }\r\n    _optionChanged(args) {\r\n        var _this$_popup2;\r\n        const {\r\n            name: name,\r\n            value: value\r\n        } = args;\r\n        switch (name) {\r\n            case \"width\":\r\n            case \"height\":\r\n                super._optionChanged(args);\r\n                null === (_this$_popup2 = this._popup) || void 0 === _this$_popup2 || _this$_popup2.repaint();\r\n                break;\r\n            case \"opened\":\r\n                this._renderOpenedState();\r\n                break;\r\n            case \"onOpened\":\r\n            case \"onClosed\":\r\n                this._initVisibilityActions();\r\n                break;\r\n            case \"onPopupInitialized\":\r\n                this._initPopupInitializedAction();\r\n                break;\r\n            case \"fieldTemplate\":\r\n            case \"acceptCustomValue\":\r\n            case \"openOnFieldClick\":\r\n                this._invalidate();\r\n                break;\r\n            case \"dropDownButtonTemplate\":\r\n            case \"showDropDownButton\":\r\n                this._updateButtons([\"dropDown\"]);\r\n                break;\r\n            case \"dropDownOptions\": {\r\n                this._popupOptionChanged(args);\r\n                const {\r\n                    dropDownOptions: dropDownOptions\r\n                } = this.option();\r\n                this._options.cache(\"dropDownOptions\", dropDownOptions);\r\n                break\r\n            }\r\n            case \"popupPosition\":\r\n                break;\r\n            case \"deferRendering\":\r\n                if (hasWindow()) {\r\n                    this._createPopup()\r\n                }\r\n                break;\r\n            case \"applyValueMode\":\r\n            case \"applyButtonText\":\r\n            case \"cancelButtonText\":\r\n            case \"buttonsLocation\":\r\n                this._setPopupOption(\"toolbarItems\", this._getPopupToolbarItems());\r\n                break;\r\n            case \"useHiddenSubmitElement\":\r\n                if (this._$submitElement) {\r\n                    this._$submitElement.remove();\r\n                    this._$submitElement = void 0\r\n                }\r\n                this._renderSubmitElement();\r\n                break;\r\n            case \"rtlEnabled\":\r\n                this._updatePopupPosition(value);\r\n                super._optionChanged(args);\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    open() {\r\n        this.option(\"opened\", true)\r\n    }\r\n    close() {\r\n        this.option(\"opened\", false)\r\n    }\r\n    field() {\r\n        return getPublicElement(this._input())\r\n    }\r\n    content() {\r\n        return this._popup ? this._popup.content() : null\r\n    }\r\n}\r\nregisterComponent(\"dxDropDownEditor\", DropDownEditor);\r\nexport default DropDownEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}