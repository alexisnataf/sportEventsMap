{"ast":null,"code":"/*!\n * devextreme-react\n * Version: 24.2.7\n * Build date: Mon Apr 28 2025\n *\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\nimport * as React from 'react';\nimport * as events from 'devextreme/events';\nimport { useState, useMemo, useCallback, useEffect, useRef } from 'react';\nimport { TemplateWrapper } from './template-wrapper';\nimport { TemplateInstantiationModels, generateID } from './helpers';\nimport { DX_REMOVE_EVENT } from './component-base';\nimport { getOption as getConfigOption } from './config';\nfunction normalizeProps(props) {\n  if (getConfigOption('useLegacyTemplateEngine')) {\n    const model = props.data;\n    if (model && Object.prototype.hasOwnProperty.call(model, 'key')) {\n      model.dxkey = model.key;\n    }\n    return model;\n  }\n  return props;\n}\nconst createMapKey = (key1, key2) => ({\n  key1,\n  key2\n});\nconst unsubscribeOnRemoval = (container, onRemoved) => {\n  if (container.nodeType === Node.ELEMENT_NODE) {\n    events.off(container, DX_REMOVE_EVENT, onRemoved);\n  }\n};\nconst subscribeOnRemoval = (container, onRemoved) => {\n  if (container.nodeType === Node.ELEMENT_NODE) {\n    events.on(container, DX_REMOVE_EVENT, onRemoved);\n  }\n};\nconst unwrapElement = element => element.get ? element.get(0) : element;\nconst getRandomId = () => `${generateID()}${generateID()}${generateID()}`;\nexport const TemplateManager = ({\n  init,\n  onTemplatesRendered\n}) => {\n  const [instantiationModels, setInstantiationModels] = useState({\n    collection: new TemplateInstantiationModels()\n  });\n  const [updateContext, setUpdateContext] = useState();\n  const widgetId = useRef('');\n  const templateFactories = useRef({});\n  const {\n    collection\n  } = instantiationModels;\n  const getRenderFunc = useCallback(templateKey => ({\n    model: data,\n    index,\n    container,\n    onRendered\n  }) => {\n    const containerElement = unwrapElement(container);\n    const key = createMapKey(data, containerElement);\n    const onRemoved = () => {\n      if (collection.get(key)) {\n        collection.delete(key);\n        setInstantiationModels({\n          collection\n        });\n      }\n    };\n    const hostWidgetId = widgetId.current;\n    collection.set(key, {\n      templateKey,\n      index,\n      componentKey: getRandomId(),\n      onRendered: () => {\n        unsubscribeOnRemoval(containerElement, onRemoved);\n        if (hostWidgetId === widgetId.current) {\n          onRendered?.();\n        }\n      },\n      onRemoved\n    });\n    setInstantiationModels({\n      collection\n    });\n    return containerElement;\n  }, [collection]);\n  useMemo(() => {\n    function getTemplateFunction(template) {\n      switch (template.type) {\n        case 'children':\n          return () => template.content;\n        case 'render':\n          return props => {\n            normalizeProps(props);\n            return template.content(props.data, props.index);\n          };\n        case 'component':\n          return props => {\n            props = normalizeProps(props);\n            return React.createElement.bind(null, template.content)(props);\n          };\n        default:\n          return () => React.createElement(React.Fragment);\n      }\n    }\n    function createDXTemplates(templateOptions) {\n      const factories = Object.entries(templateOptions).reduce((res, [key, template]) => ({\n        ...res,\n        [key]: getTemplateFunction(template)\n      }), {});\n      templateFactories.current = factories;\n      const dxTemplates = Object.keys(factories).reduce((templates, templateKey) => {\n        templates[templateKey] = {\n          render: getRenderFunc(templateKey)\n        };\n        return templates;\n      }, {});\n      return dxTemplates;\n    }\n    function clearInstantiationModels() {\n      widgetId.current = getRandomId();\n      instantiationModels.collection.clear();\n      setInstantiationModels({\n        ...instantiationModels\n      });\n    }\n    function updateTemplates(onUpdated) {\n      setUpdateContext({\n        onUpdated\n      });\n    }\n    init({\n      createDXTemplates,\n      clearInstantiationModels,\n      updateTemplates\n    });\n  }, [init, getRenderFunc]);\n  useEffect(() => {\n    if (updateContext) {\n      updateContext.onUpdated();\n    }\n    onTemplatesRendered();\n  }, [updateContext, onTemplatesRendered]);\n  if (instantiationModels.collection.empty) {\n    return null;\n  }\n  return React.createElement(React.Fragment, null, Array.from(instantiationModels.collection).map(([{\n    key1: data,\n    key2: container\n  }, {\n    index,\n    templateKey,\n    componentKey,\n    onRendered,\n    onRemoved\n  }]) => {\n    subscribeOnRemoval(container, onRemoved);\n    const factory = templateFactories.current[templateKey];\n    if (factory) {\n      return React.createElement(TemplateWrapper, {\n        key: componentKey,\n        templateFactory: factory,\n        data: data,\n        index: index,\n        container: container,\n        onRemoved: onRemoved,\n        onRendered: onRendered\n      });\n    }\n    return null;\n  }));\n};","map":{"version":3,"names":["React","events","useState","useMemo","useCallback","useEffect","useRef","TemplateWrapper","TemplateInstantiationModels","generateID","DX_REMOVE_EVENT","getOption","getConfigOption","normalizeProps","props","model","data","Object","prototype","hasOwnProperty","call","dxkey","key","createMapKey","key1","key2","unsubscribeOnRemoval","container","onRemoved","nodeType","Node","ELEMENT_NODE","off","subscribeOnRemoval","on","unwrapElement","element","get","getRandomId","TemplateManager","init","onTemplatesRendered","instantiationModels","setInstantiationModels","collection","updateContext","setUpdateContext","widgetId","templateFactories","getRenderFunc","templateKey","index","onRendered","containerElement","delete","hostWidgetId","current","set","componentKey","getTemplateFunction","template","type","content","createElement","bind","Fragment","createDXTemplates","templateOptions","factories","entries","reduce","res","dxTemplates","keys","templates","render","clearInstantiationModels","clear","updateTemplates","onUpdated","empty","Array","from","map","factory","templateFactory"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme-react/esm/core/template-manager.js"],"sourcesContent":["/*!\n * devextreme-react\n * Version: 24.2.7\n * Build date: Mon Apr 28 2025\n *\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\nimport * as React from 'react';\nimport * as events from 'devextreme/events';\nimport { useState, useMemo, useCallback, useEffect, useRef, } from 'react';\nimport { TemplateWrapper } from './template-wrapper';\nimport { TemplateInstantiationModels, generateID } from './helpers';\nimport { DX_REMOVE_EVENT } from './component-base';\nimport { getOption as getConfigOption } from './config';\nfunction normalizeProps(props) {\n    if (getConfigOption('useLegacyTemplateEngine')) {\n        const model = props.data;\n        if (model && Object.prototype.hasOwnProperty.call(model, 'key')) {\n            model.dxkey = model.key;\n        }\n        return model;\n    }\n    return props;\n}\nconst createMapKey = (key1, key2) => ({ key1, key2 });\nconst unsubscribeOnRemoval = (container, onRemoved) => {\n    if (container.nodeType === Node.ELEMENT_NODE) {\n        events.off(container, DX_REMOVE_EVENT, onRemoved);\n    }\n};\nconst subscribeOnRemoval = (container, onRemoved) => {\n    if (container.nodeType === Node.ELEMENT_NODE) {\n        events.on(container, DX_REMOVE_EVENT, onRemoved);\n    }\n};\nconst unwrapElement = (element) => (element.get ? element.get(0) : element);\nconst getRandomId = () => `${generateID()}${generateID()}${generateID()}`;\nexport const TemplateManager = ({ init, onTemplatesRendered }) => {\n    const [instantiationModels, setInstantiationModels] = useState({\n        collection: new TemplateInstantiationModels(),\n    });\n    const [updateContext, setUpdateContext] = useState();\n    const widgetId = useRef('');\n    const templateFactories = useRef({});\n    const { collection } = instantiationModels;\n    const getRenderFunc = useCallback((templateKey) => ({ model: data, index, container, onRendered, }) => {\n        const containerElement = unwrapElement(container);\n        const key = createMapKey(data, containerElement);\n        const onRemoved = () => {\n            if (collection.get(key)) {\n                collection.delete(key);\n                setInstantiationModels({ collection });\n            }\n        };\n        const hostWidgetId = widgetId.current;\n        collection.set(key, {\n            templateKey,\n            index,\n            componentKey: getRandomId(),\n            onRendered: () => {\n                unsubscribeOnRemoval(containerElement, onRemoved);\n                if (hostWidgetId === widgetId.current) {\n                    onRendered?.();\n                }\n            },\n            onRemoved,\n        });\n        setInstantiationModels({ collection });\n        return containerElement;\n    }, [collection]);\n    useMemo(() => {\n        function getTemplateFunction(template) {\n            switch (template.type) {\n                case 'children': return () => template.content;\n                case 'render': return (props) => {\n                    normalizeProps(props);\n                    return template.content(props.data, props.index);\n                };\n                case 'component': return (props) => {\n                    props = normalizeProps(props);\n                    return React.createElement.bind(null, template.content)(props);\n                };\n                default: return () => React.createElement(React.Fragment);\n            }\n        }\n        function createDXTemplates(templateOptions) {\n            const factories = Object.entries(templateOptions)\n                .reduce((res, [key, template]) => ({\n                ...res,\n                [key]: getTemplateFunction(template),\n            }), {});\n            templateFactories.current = factories;\n            const dxTemplates = Object.keys(factories)\n                .reduce((templates, templateKey) => {\n                templates[templateKey] = { render: getRenderFunc(templateKey) };\n                return templates;\n            }, {});\n            return dxTemplates;\n        }\n        function clearInstantiationModels() {\n            widgetId.current = getRandomId();\n            instantiationModels.collection.clear();\n            setInstantiationModels({ ...instantiationModels });\n        }\n        function updateTemplates(onUpdated) {\n            setUpdateContext({ onUpdated });\n        }\n        init({ createDXTemplates, clearInstantiationModels, updateTemplates });\n    }, [init, getRenderFunc]);\n    useEffect(() => {\n        if (updateContext) {\n            updateContext.onUpdated();\n        }\n        onTemplatesRendered();\n    }, [updateContext, onTemplatesRendered]);\n    if (instantiationModels.collection.empty) {\n        return null;\n    }\n    return (React.createElement(React.Fragment, null, Array.from(instantiationModels.collection).map(([{ key1: data, key2: container }, { index, templateKey, componentKey, onRendered, onRemoved, }]) => {\n        subscribeOnRemoval(container, onRemoved);\n        const factory = templateFactories.current[templateKey];\n        if (factory) {\n            return React.createElement(TemplateWrapper, { key: componentKey, templateFactory: factory, data: data, index: index, container: container, onRemoved: onRemoved, onRendered: onRendered });\n        }\n        return null;\n    })));\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}