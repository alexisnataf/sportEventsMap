{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/core/widget/widget.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport \"../../../common/core/events/click\";\nimport \"../../../common/core/events/core/emitter.feedback\";\nimport \"../../../common/core/events/hover\";\nimport { active, focus, hover, keyboard } from \"../../../common/core/events/short\";\nimport Action from \"../../../core/action\";\nimport devices from \"../../../core/devices\";\nimport $ from \"../../../core/renderer\";\nimport { deferRender } from \"../../../core/utils/common\";\nimport { extend } from \"../../../core/utils/extend\";\nimport { each } from \"../../../core/utils/iterator\";\nimport { isDefined, isPlainObject } from \"../../../core/utils/type\";\nimport { compare as compareVersions } from \"../../../core/utils/version\";\nimport { focusable as focusableSelector } from \"../../../ui/widget/selectors\";\nimport DOMComponent from \"./dom_component\";\nconst DISABLED_STATE_CLASS = \"dx-state-disabled\";\nexport const FOCUSED_STATE_CLASS = \"dx-state-focused\";\nconst INVISIBLE_STATE_CLASS = \"dx-state-invisible\";\nfunction setAttribute(name, value, target) {\n  name = \"role\" === name || \"id\" === name ? name : `aria-${name}`;\n  value = isDefined(value) ? value.toString() : null;\n  target.attr(name, value);\n}\nclass Widget extends DOMComponent {\n  constructor() {\n    super(...arguments);\n    this._feedbackHideTimeout = 400;\n    this._feedbackShowTimeout = 30;\n  }\n  static getOptionsFromContainer(_ref) {\n    let {\n      name: name,\n      fullName: fullName,\n      value: value\n    } = _ref;\n    let options = {};\n    if (name === fullName) {\n      options = value;\n    } else {\n      const option = fullName.split(\".\").pop();\n      options[option] = value;\n    }\n    return options;\n  }\n  _supportedKeys() {\n    return {};\n  }\n  _getDefaultOptions() {\n    return extend(super._getDefaultOptions(), {\n      hoveredElement: null,\n      isActive: false,\n      disabled: false,\n      visible: true,\n      hint: void 0,\n      activeStateEnabled: false,\n      onContentReady: null,\n      hoverStateEnabled: false,\n      focusStateEnabled: false,\n      tabIndex: 0,\n      accessKey: void 0,\n      onFocusIn: null,\n      onFocusOut: null,\n      onKeyboardHandled: null,\n      ignoreParentReadOnly: false,\n      useResizeObserver: true\n    });\n  }\n  _defaultOptionsRules() {\n    return super._defaultOptionsRules().concat([{\n      device() {\n        const device = devices.real();\n        const {\n          platform: platform\n        } = device;\n        const {\n          version: version\n        } = device;\n        return \"ios\" === platform && compareVersions(version, \"13.3\") <= 0;\n      },\n      options: {\n        useResizeObserver: false\n      }\n    }]);\n  }\n  _init() {\n    super._init();\n    this._initContentReadyAction();\n  }\n  _innerWidgetOptionChanged(innerWidget, args) {\n    const options = Widget.getOptionsFromContainer(args);\n    innerWidget && innerWidget.option(options);\n    this._options.cache(args.name, options);\n  }\n  _bindInnerWidgetOptions(innerWidget, optionsContainer) {\n    const syncOptions = () => this._options.silent(optionsContainer, extend({}, innerWidget.option()));\n    syncOptions();\n    innerWidget.on(\"optionChanged\", syncOptions);\n  }\n  _getAriaTarget() {\n    return this._focusTarget();\n  }\n  _initContentReadyAction() {\n    this._contentReadyAction = this._createActionByOption(\"onContentReady\", {\n      excludeValidators: [\"disabled\", \"readOnly\"]\n    });\n  }\n  _initMarkup() {\n    const {\n      disabled: disabled,\n      visible: visible\n    } = this.option();\n    this.$element().addClass(\"dx-widget\");\n    this._toggleDisabledState(disabled);\n    this._toggleVisibility(visible);\n    this._renderHint();\n    this._isFocusable() && this._renderFocusTarget();\n    super._initMarkup();\n  }\n  _render() {\n    super._render();\n    this._renderContent();\n    this._renderFocusState();\n    this._attachFeedbackEvents();\n    this._attachHoverEvents();\n    this._toggleIndependentState();\n  }\n  _renderHint() {\n    const {\n      hint: hint\n    } = this.option();\n    this.$element().attr(\"title\", hint || null);\n  }\n  _renderContent() {\n    deferRender(() => !this._disposed ? this._renderContentImpl() : void 0).done(() => !this._disposed ? this._fireContentReadyAction() : void 0);\n  }\n  _renderContentImpl() {}\n  _fireContentReadyAction() {\n    return deferRender(() => {\n      var _this$_contentReadyAc;\n      return null === (_this$_contentReadyAc = this._contentReadyAction) || void 0 === _this$_contentReadyAc ? void 0 : _this$_contentReadyAc.call(this);\n    });\n  }\n  _dispose() {\n    this._contentReadyAction = null;\n    this._detachKeyboardEvents();\n    super._dispose();\n  }\n  _resetActiveState() {\n    this._toggleActiveState(this._eventBindingTarget(), false);\n  }\n  _clean() {\n    this._cleanFocusState();\n    this._resetActiveState();\n    super._clean();\n    this.$element().empty();\n  }\n  _toggleVisibility(visible) {\n    this.$element().toggleClass(\"dx-state-invisible\", !visible);\n  }\n  _renderFocusState() {\n    this._attachKeyboardEvents();\n    if (this._isFocusable()) {\n      this._renderFocusTarget();\n      this._attachFocusEvents();\n      this._renderAccessKey();\n    }\n  }\n  _renderAccessKey() {\n    const $el = this._focusTarget();\n    const {\n      accessKey: accessKey\n    } = this.option();\n    $el.attr(\"accesskey\", accessKey);\n  }\n  _isFocusable() {\n    const {\n      focusStateEnabled: focusStateEnabled,\n      disabled: disabled\n    } = this.option();\n    return focusStateEnabled && !disabled;\n  }\n  _eventBindingTarget() {\n    return this.$element();\n  }\n  _focusTarget() {\n    return this._getActiveElement();\n  }\n  _isFocusTarget(element) {\n    const focusTargets = $(this._focusTarget()).toArray();\n    return focusTargets.includes(element);\n  }\n  _findActiveTarget($element) {\n    return $element.find(this._activeStateUnit).not(\".dx-state-disabled\");\n  }\n  _getActiveElement() {\n    const activeElement = this._eventBindingTarget();\n    if (this._activeStateUnit) {\n      return this._findActiveTarget(activeElement);\n    }\n    return activeElement;\n  }\n  _renderFocusTarget() {\n    const {\n      tabIndex: tabIndex\n    } = this.option();\n    this._focusTarget().attr(\"tabIndex\", tabIndex);\n  }\n  _keyboardEventBindingTarget() {\n    return this._eventBindingTarget();\n  }\n  _refreshFocusEvent() {\n    this._detachFocusEvents();\n    this._attachFocusEvents();\n  }\n  _focusEventTarget() {\n    return this._focusTarget();\n  }\n  _focusInHandler(event) {\n    if (!event.isDefaultPrevented()) {\n      this._createActionByOption(\"onFocusIn\", {\n        beforeExecute: () => this._updateFocusState(event, true),\n        excludeValidators: [\"readOnly\"]\n      })({\n        event: event\n      });\n    }\n  }\n  _focusOutHandler(event) {\n    if (!event.isDefaultPrevented()) {\n      this._createActionByOption(\"onFocusOut\", {\n        beforeExecute: () => this._updateFocusState(event, false),\n        excludeValidators: [\"readOnly\", \"disabled\"]\n      })({\n        event: event\n      });\n    }\n  }\n  _updateFocusState(_ref2, isFocused) {\n    let {\n      target: target\n    } = _ref2;\n    if (this._isFocusTarget(target)) {\n      this._toggleFocusClass(isFocused, $(target));\n    }\n  }\n  _toggleFocusClass(isFocused, $element) {\n    const $focusTarget = $element && $element.length ? $element : this._focusTarget();\n    $focusTarget.toggleClass(\"dx-state-focused\", isFocused);\n  }\n  _hasFocusClass(element) {\n    const $focusTarget = $(element ?? this._focusTarget());\n    return $focusTarget.hasClass(\"dx-state-focused\");\n  }\n  _isFocused() {\n    return this._hasFocusClass();\n  }\n  _getKeyboardListeners() {\n    return [];\n  }\n  _attachKeyboardEvents() {\n    this._detachKeyboardEvents();\n    const {\n      focusStateEnabled: focusStateEnabled,\n      onKeyboardHandled: onKeyboardHandled\n    } = this.option();\n    const hasChildListeners = this._getKeyboardListeners().length;\n    const hasKeyboardEventHandler = !!onKeyboardHandled;\n    const shouldAttach = focusStateEnabled || hasChildListeners || hasKeyboardEventHandler;\n    if (shouldAttach) {\n      this._keyboardListenerId = keyboard.on(this._keyboardEventBindingTarget(), this._focusTarget(), opts => this._keyboardHandler(opts));\n    }\n  }\n  _keyboardHandler(options, onlyChildProcessing) {\n    if (!onlyChildProcessing) {\n      const {\n        originalEvent: originalEvent,\n        keyName: keyName,\n        which: which\n      } = options;\n      const keys = this._supportedKeys(originalEvent);\n      const func = keys[keyName] || keys[which];\n      if (void 0 !== func) {\n        const handler = func.bind(this);\n        const result = handler(originalEvent, options);\n        if (!result) {\n          return false;\n        }\n      }\n    }\n    const keyboardListeners = this._getKeyboardListeners();\n    const {\n      onKeyboardHandled: onKeyboardHandled\n    } = this.option();\n    keyboardListeners.forEach(listener => listener && listener._keyboardHandler(options));\n    onKeyboardHandled && onKeyboardHandled(options);\n    return true;\n  }\n  _refreshFocusState() {\n    this._cleanFocusState();\n    this._renderFocusState();\n  }\n  _cleanFocusState() {\n    const $element = this._focusTarget();\n    $element.removeAttr(\"tabIndex\");\n    this._toggleFocusClass(false);\n    this._detachFocusEvents();\n    this._detachKeyboardEvents();\n  }\n  _detachKeyboardEvents() {\n    keyboard.off(this._keyboardListenerId);\n    this._keyboardListenerId = null;\n  }\n  _attachHoverEvents() {\n    const {\n      hoverStateEnabled: hoverStateEnabled\n    } = this.option();\n    const selector = this._activeStateUnit;\n    const $el = this._eventBindingTarget();\n    hover.off($el, {\n      selector: selector,\n      namespace: \"UIFeedback\"\n    });\n    if (hoverStateEnabled) {\n      hover.on($el, new Action(_ref3 => {\n        let {\n          event: event,\n          element: element\n        } = _ref3;\n        this._hoverStartHandler(event);\n        this.option(\"hoveredElement\", $(element));\n      }, {\n        excludeValidators: [\"readOnly\"]\n      }), event => {\n        this.option(\"hoveredElement\", null);\n        this._hoverEndHandler(event);\n      }, {\n        selector: selector,\n        namespace: \"UIFeedback\"\n      });\n    }\n  }\n  _attachFeedbackEvents() {\n    const {\n      activeStateEnabled: activeStateEnabled\n    } = this.option();\n    const selector = this._activeStateUnit;\n    const $el = this._eventBindingTarget();\n    active.off($el, {\n      namespace: \"UIFeedback\",\n      selector: selector\n    });\n    if (activeStateEnabled) {\n      active.on($el, new Action(_ref4 => {\n        let {\n          event: event,\n          element: element\n        } = _ref4;\n        return this._toggleActiveState($(element), true, event);\n      }), new Action(_ref5 => {\n        let {\n          event: event,\n          element: element\n        } = _ref5;\n        return this._toggleActiveState($(element), false, event);\n      }, {\n        excludeValidators: [\"disabled\", \"readOnly\"]\n      }), {\n        showTimeout: this._feedbackShowTimeout,\n        hideTimeout: this._feedbackHideTimeout,\n        selector: selector,\n        namespace: \"UIFeedback\"\n      });\n    }\n  }\n  _detachFocusEvents() {\n    const $el = this._focusEventTarget();\n    focus.off($el, {\n      namespace: `${this.NAME}Focus`\n    });\n  }\n  _attachFocusEvents() {\n    const $el = this._focusEventTarget();\n    focus.on($el, e => this._focusInHandler(e), e => this._focusOutHandler(e), {\n      namespace: `${this.NAME}Focus`,\n      isFocusable: (index, el) => $(el).is(focusableSelector)\n    });\n  }\n  _hoverStartHandler(event) {}\n  _hoverEndHandler(event) {}\n  _toggleActiveState($element, value, event) {\n    this.option(\"isActive\", value);\n    $element.toggleClass(\"dx-state-active\", value);\n  }\n  _updatedHover() {\n    const hoveredElement = this._options.silent(\"hoveredElement\");\n    this._hover(hoveredElement, hoveredElement);\n  }\n  _findHoverTarget($el) {\n    return $el && $el.closest(this._activeStateUnit || this._eventBindingTarget());\n  }\n  _hover($el, $previous) {\n    const {\n      hoverStateEnabled: hoverStateEnabled,\n      disabled: disabled,\n      isActive: isActive\n    } = this.option();\n    $previous = this._findHoverTarget($previous);\n    $previous && $previous.toggleClass(\"dx-state-hover\", false);\n    if ($el && hoverStateEnabled && !disabled && !isActive) {\n      const newHoveredElement = this._findHoverTarget($el);\n      newHoveredElement && newHoveredElement.toggleClass(\"dx-state-hover\", true);\n    }\n  }\n  _toggleDisabledState(value) {\n    this.$element().toggleClass(\"dx-state-disabled\", Boolean(value));\n    this.setAria(\"disabled\", value || void 0);\n  }\n  _toggleIndependentState() {\n    const {\n      ignoreParentReadOnly: ignoreParentReadOnly\n    } = this.option();\n    this.$element().toggleClass(\"dx-state-independent\", ignoreParentReadOnly);\n  }\n  _setWidgetOption(widgetName, args) {\n    if (!this[widgetName]) {\n      return;\n    }\n    if (isPlainObject(args[0])) {\n      each(args[0], (option, value) => this._setWidgetOption(widgetName, [option, value]));\n      return;\n    }\n    const optionName = args[0];\n    let value = args[1];\n    if (1 === args.length) {\n      value = this.option(optionName);\n    }\n    const widgetOptionMap = this[`${widgetName}OptionMap`];\n    this[widgetName].option(widgetOptionMap ? widgetOptionMap(optionName) : optionName, value);\n  }\n  _optionChanged(args) {\n    const {\n      name: name,\n      value: value,\n      previousValue: previousValue\n    } = args;\n    switch (name) {\n      case \"disabled\":\n        this._toggleDisabledState(value);\n        this._updatedHover();\n        this._refreshFocusState();\n        break;\n      case \"hint\":\n        this._renderHint();\n        break;\n      case \"ignoreParentReadOnly\":\n        this._toggleIndependentState();\n        break;\n      case \"activeStateEnabled\":\n        this._attachFeedbackEvents();\n        break;\n      case \"hoverStateEnabled\":\n        this._attachHoverEvents();\n        this._updatedHover();\n        break;\n      case \"tabIndex\":\n      case \"focusStateEnabled\":\n        this._refreshFocusState();\n        break;\n      case \"onFocusIn\":\n      case \"onFocusOut\":\n      case \"useResizeObserver\":\n        break;\n      case \"accessKey\":\n        this._renderAccessKey();\n        break;\n      case \"hoveredElement\":\n        this._hover(value, previousValue);\n        break;\n      case \"isActive\":\n        this._updatedHover();\n        break;\n      case \"visible\":\n        this._toggleVisibility(value);\n        if (this._isVisibilityChangeSupported()) {\n          this._checkVisibilityChanged(value ? \"shown\" : \"hiding\");\n        }\n        break;\n      case \"onKeyboardHandled\":\n        this._attachKeyboardEvents();\n        break;\n      case \"onContentReady\":\n        this._initContentReadyAction();\n        break;\n      default:\n        super._optionChanged(args);\n    }\n  }\n  _isVisible() {\n    const {\n      visible: visible\n    } = this.option();\n    return super._isVisible() && visible;\n  }\n  beginUpdate() {\n    this._ready(false);\n    super.beginUpdate();\n  }\n  endUpdate() {\n    super.endUpdate();\n    if (this._initialized) {\n      this._ready(true);\n    }\n  }\n  _ready(value) {\n    if (0 === arguments.length) {\n      return !!this._isReady;\n    }\n    this._isReady = !!value;\n    return this._isReady;\n  }\n  setAria() {\n    if (!isPlainObject(arguments.length <= 0 ? void 0 : arguments[0])) {\n      setAttribute(arguments.length <= 0 ? void 0 : arguments[0], arguments.length <= 1 ? void 0 : arguments[1], (arguments.length <= 2 ? void 0 : arguments[2]) || this._getAriaTarget());\n    } else {\n      const target = (arguments.length <= 1 ? void 0 : arguments[1]) || this._getAriaTarget();\n      each(arguments.length <= 0 ? void 0 : arguments[0], (name, value) => setAttribute(name, value, target));\n    }\n  }\n  isReady() {\n    return this._ready();\n  }\n  repaint() {\n    this._refresh();\n  }\n  focus() {\n    focus.trigger(this._focusTarget());\n  }\n  registerKeyHandler(key, handler) {\n    const currentKeys = this._supportedKeys();\n    this._supportedKeys = () => extend(currentKeys, {\n      [key]: handler\n    });\n  }\n}\nexport default Widget;","map":{"version":3,"names":["active","focus","hover","keyboard","Action","devices","$","deferRender","extend","each","isDefined","isPlainObject","compare","compareVersions","focusable","focusableSelector","DOMComponent","DISABLED_STATE_CLASS","FOCUSED_STATE_CLASS","INVISIBLE_STATE_CLASS","setAttribute","name","value","target","toString","attr","Widget","constructor","arguments","_feedbackHideTimeout","_feedbackShowTimeout","getOptionsFromContainer","_ref","fullName","options","option","split","pop","_supportedKeys","_getDefaultOptions","hoveredElement","isActive","disabled","visible","hint","activeStateEnabled","onContentReady","hoverStateEnabled","focusStateEnabled","tabIndex","accessKey","onFocusIn","onFocusOut","onKeyboardHandled","ignoreParentReadOnly","useResizeObserver","_defaultOptionsRules","concat","device","real","platform","version","_init","_initContentReadyAction","_innerWidgetOptionChanged","innerWidget","args","_options","cache","_bindInnerWidgetOptions","optionsContainer","syncOptions","silent","on","_getAriaTarget","_focusTarget","_contentReadyAction","_createActionByOption","excludeValidators","_initMarkup","$element","addClass","_toggleDisabledState","_toggleVisibility","_renderHint","_isFocusable","_renderFocusTarget","_render","_renderContent","_renderFocusState","_attachFeedbackEvents","_attachHoverEvents","_toggleIndependentState","_disposed","_renderContentImpl","done","_fireContentReadyAction","_this$_contentReadyAc","call","_dispose","_detachKeyboardEvents","_resetActiveState","_toggleActiveState","_eventBindingTarget","_clean","_cleanFocusState","empty","toggleClass","_attachKeyboardEvents","_attachFocusEvents","_renderAccessKey","$el","_getActiveElement","_isFocusTarget","element","focusTargets","toArray","includes","_findActiveTarget","find","_activeStateUnit","not","activeElement","_keyboardEventBindingTarget","_refreshFocusEvent","_detachFocusEvents","_focusEventTarget","_focusInHandler","event","isDefaultPrevented","beforeExecute","_updateFocusState","_focusOutHandler","_ref2","isFocused","_toggleFocusClass","$focusTarget","length","_hasFocusClass","hasClass","_isFocused","_getKeyboardListeners","hasChildListeners","hasKeyboardEventHandler","shouldAttach","_keyboardListenerId","opts","_keyboardHandler","onlyChildProcessing","originalEvent","keyName","which","keys","func","handler","bind","result","keyboardListeners","forEach","listener","_refreshFocusState","removeAttr","off","selector","namespace","_ref3","_hoverStartHandler","_hoverEndHandler","_ref4","_ref5","showTimeout","hideTimeout","NAME","e","isFocusable","index","el","is","_updatedHover","_hover","_findHoverTarget","closest","$previous","newHoveredElement","Boolean","setAria","_setWidgetOption","widgetName","optionName","widgetOptionMap","_optionChanged","previousValue","_isVisibilityChangeSupported","_checkVisibilityChanged","_isVisible","beginUpdate","_ready","endUpdate","_initialized","_isReady","isReady","repaint","_refresh","trigger","registerKeyHandler","key","currentKeys"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/core/widget/widget.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/core/widget/widget.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport \"../../../common/core/events/click\";\r\nimport \"../../../common/core/events/core/emitter.feedback\";\r\nimport \"../../../common/core/events/hover\";\r\nimport {\r\n    active,\r\n    focus,\r\n    hover,\r\n    keyboard\r\n} from \"../../../common/core/events/short\";\r\nimport Action from \"../../../core/action\";\r\nimport devices from \"../../../core/devices\";\r\nimport $ from \"../../../core/renderer\";\r\nimport {\r\n    deferRender\r\n} from \"../../../core/utils/common\";\r\nimport {\r\n    extend\r\n} from \"../../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../../core/utils/iterator\";\r\nimport {\r\n    isDefined,\r\n    isPlainObject\r\n} from \"../../../core/utils/type\";\r\nimport {\r\n    compare as compareVersions\r\n} from \"../../../core/utils/version\";\r\nimport {\r\n    focusable as focusableSelector\r\n} from \"../../../ui/widget/selectors\";\r\nimport DOMComponent from \"./dom_component\";\r\nconst DISABLED_STATE_CLASS = \"dx-state-disabled\";\r\nexport const FOCUSED_STATE_CLASS = \"dx-state-focused\";\r\nconst INVISIBLE_STATE_CLASS = \"dx-state-invisible\";\r\n\r\nfunction setAttribute(name, value, target) {\r\n    name = \"role\" === name || \"id\" === name ? name : `aria-${name}`;\r\n    value = isDefined(value) ? value.toString() : null;\r\n    target.attr(name, value)\r\n}\r\nclass Widget extends DOMComponent {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._feedbackHideTimeout = 400;\r\n        this._feedbackShowTimeout = 30\r\n    }\r\n    static getOptionsFromContainer(_ref) {\r\n        let {\r\n            name: name,\r\n            fullName: fullName,\r\n            value: value\r\n        } = _ref;\r\n        let options = {};\r\n        if (name === fullName) {\r\n            options = value\r\n        } else {\r\n            const option = fullName.split(\".\").pop();\r\n            options[option] = value\r\n        }\r\n        return options\r\n    }\r\n    _supportedKeys() {\r\n        return {}\r\n    }\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            hoveredElement: null,\r\n            isActive: false,\r\n            disabled: false,\r\n            visible: true,\r\n            hint: void 0,\r\n            activeStateEnabled: false,\r\n            onContentReady: null,\r\n            hoverStateEnabled: false,\r\n            focusStateEnabled: false,\r\n            tabIndex: 0,\r\n            accessKey: void 0,\r\n            onFocusIn: null,\r\n            onFocusOut: null,\r\n            onKeyboardHandled: null,\r\n            ignoreParentReadOnly: false,\r\n            useResizeObserver: true\r\n        })\r\n    }\r\n    _defaultOptionsRules() {\r\n        return super._defaultOptionsRules().concat([{\r\n            device() {\r\n                const device = devices.real();\r\n                const {\r\n                    platform: platform\r\n                } = device;\r\n                const {\r\n                    version: version\r\n                } = device;\r\n                return \"ios\" === platform && compareVersions(version, \"13.3\") <= 0\r\n            },\r\n            options: {\r\n                useResizeObserver: false\r\n            }\r\n        }])\r\n    }\r\n    _init() {\r\n        super._init();\r\n        this._initContentReadyAction()\r\n    }\r\n    _innerWidgetOptionChanged(innerWidget, args) {\r\n        const options = Widget.getOptionsFromContainer(args);\r\n        innerWidget && innerWidget.option(options);\r\n        this._options.cache(args.name, options)\r\n    }\r\n    _bindInnerWidgetOptions(innerWidget, optionsContainer) {\r\n        const syncOptions = () => this._options.silent(optionsContainer, extend({}, innerWidget.option()));\r\n        syncOptions();\r\n        innerWidget.on(\"optionChanged\", syncOptions)\r\n    }\r\n    _getAriaTarget() {\r\n        return this._focusTarget()\r\n    }\r\n    _initContentReadyAction() {\r\n        this._contentReadyAction = this._createActionByOption(\"onContentReady\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    }\r\n    _initMarkup() {\r\n        const {\r\n            disabled: disabled,\r\n            visible: visible\r\n        } = this.option();\r\n        this.$element().addClass(\"dx-widget\");\r\n        this._toggleDisabledState(disabled);\r\n        this._toggleVisibility(visible);\r\n        this._renderHint();\r\n        this._isFocusable() && this._renderFocusTarget();\r\n        super._initMarkup()\r\n    }\r\n    _render() {\r\n        super._render();\r\n        this._renderContent();\r\n        this._renderFocusState();\r\n        this._attachFeedbackEvents();\r\n        this._attachHoverEvents();\r\n        this._toggleIndependentState()\r\n    }\r\n    _renderHint() {\r\n        const {\r\n            hint: hint\r\n        } = this.option();\r\n        this.$element().attr(\"title\", hint || null)\r\n    }\r\n    _renderContent() {\r\n        deferRender((() => !this._disposed ? this._renderContentImpl() : void 0)).done((() => !this._disposed ? this._fireContentReadyAction() : void 0))\r\n    }\r\n    _renderContentImpl() {}\r\n    _fireContentReadyAction() {\r\n        return deferRender((() => {\r\n            var _this$_contentReadyAc;\r\n            return null === (_this$_contentReadyAc = this._contentReadyAction) || void 0 === _this$_contentReadyAc ? void 0 : _this$_contentReadyAc.call(this)\r\n        }))\r\n    }\r\n    _dispose() {\r\n        this._contentReadyAction = null;\r\n        this._detachKeyboardEvents();\r\n        super._dispose()\r\n    }\r\n    _resetActiveState() {\r\n        this._toggleActiveState(this._eventBindingTarget(), false)\r\n    }\r\n    _clean() {\r\n        this._cleanFocusState();\r\n        this._resetActiveState();\r\n        super._clean();\r\n        this.$element().empty()\r\n    }\r\n    _toggleVisibility(visible) {\r\n        this.$element().toggleClass(\"dx-state-invisible\", !visible)\r\n    }\r\n    _renderFocusState() {\r\n        this._attachKeyboardEvents();\r\n        if (this._isFocusable()) {\r\n            this._renderFocusTarget();\r\n            this._attachFocusEvents();\r\n            this._renderAccessKey()\r\n        }\r\n    }\r\n    _renderAccessKey() {\r\n        const $el = this._focusTarget();\r\n        const {\r\n            accessKey: accessKey\r\n        } = this.option();\r\n        $el.attr(\"accesskey\", accessKey)\r\n    }\r\n    _isFocusable() {\r\n        const {\r\n            focusStateEnabled: focusStateEnabled,\r\n            disabled: disabled\r\n        } = this.option();\r\n        return focusStateEnabled && !disabled\r\n    }\r\n    _eventBindingTarget() {\r\n        return this.$element()\r\n    }\r\n    _focusTarget() {\r\n        return this._getActiveElement()\r\n    }\r\n    _isFocusTarget(element) {\r\n        const focusTargets = $(this._focusTarget()).toArray();\r\n        return focusTargets.includes(element)\r\n    }\r\n    _findActiveTarget($element) {\r\n        return $element.find(this._activeStateUnit).not(\".dx-state-disabled\")\r\n    }\r\n    _getActiveElement() {\r\n        const activeElement = this._eventBindingTarget();\r\n        if (this._activeStateUnit) {\r\n            return this._findActiveTarget(activeElement)\r\n        }\r\n        return activeElement\r\n    }\r\n    _renderFocusTarget() {\r\n        const {\r\n            tabIndex: tabIndex\r\n        } = this.option();\r\n        this._focusTarget().attr(\"tabIndex\", tabIndex)\r\n    }\r\n    _keyboardEventBindingTarget() {\r\n        return this._eventBindingTarget()\r\n    }\r\n    _refreshFocusEvent() {\r\n        this._detachFocusEvents();\r\n        this._attachFocusEvents()\r\n    }\r\n    _focusEventTarget() {\r\n        return this._focusTarget()\r\n    }\r\n    _focusInHandler(event) {\r\n        if (!event.isDefaultPrevented()) {\r\n            this._createActionByOption(\"onFocusIn\", {\r\n                beforeExecute: () => this._updateFocusState(event, true),\r\n                excludeValidators: [\"readOnly\"]\r\n            })({\r\n                event: event\r\n            })\r\n        }\r\n    }\r\n    _focusOutHandler(event) {\r\n        if (!event.isDefaultPrevented()) {\r\n            this._createActionByOption(\"onFocusOut\", {\r\n                beforeExecute: () => this._updateFocusState(event, false),\r\n                excludeValidators: [\"readOnly\", \"disabled\"]\r\n            })({\r\n                event: event\r\n            })\r\n        }\r\n    }\r\n    _updateFocusState(_ref2, isFocused) {\r\n        let {\r\n            target: target\r\n        } = _ref2;\r\n        if (this._isFocusTarget(target)) {\r\n            this._toggleFocusClass(isFocused, $(target))\r\n        }\r\n    }\r\n    _toggleFocusClass(isFocused, $element) {\r\n        const $focusTarget = $element && $element.length ? $element : this._focusTarget();\r\n        $focusTarget.toggleClass(\"dx-state-focused\", isFocused)\r\n    }\r\n    _hasFocusClass(element) {\r\n        const $focusTarget = $(element ?? this._focusTarget());\r\n        return $focusTarget.hasClass(\"dx-state-focused\")\r\n    }\r\n    _isFocused() {\r\n        return this._hasFocusClass()\r\n    }\r\n    _getKeyboardListeners() {\r\n        return []\r\n    }\r\n    _attachKeyboardEvents() {\r\n        this._detachKeyboardEvents();\r\n        const {\r\n            focusStateEnabled: focusStateEnabled,\r\n            onKeyboardHandled: onKeyboardHandled\r\n        } = this.option();\r\n        const hasChildListeners = this._getKeyboardListeners().length;\r\n        const hasKeyboardEventHandler = !!onKeyboardHandled;\r\n        const shouldAttach = focusStateEnabled || hasChildListeners || hasKeyboardEventHandler;\r\n        if (shouldAttach) {\r\n            this._keyboardListenerId = keyboard.on(this._keyboardEventBindingTarget(), this._focusTarget(), (opts => this._keyboardHandler(opts)))\r\n        }\r\n    }\r\n    _keyboardHandler(options, onlyChildProcessing) {\r\n        if (!onlyChildProcessing) {\r\n            const {\r\n                originalEvent: originalEvent,\r\n                keyName: keyName,\r\n                which: which\r\n            } = options;\r\n            const keys = this._supportedKeys(originalEvent);\r\n            const func = keys[keyName] || keys[which];\r\n            if (void 0 !== func) {\r\n                const handler = func.bind(this);\r\n                const result = handler(originalEvent, options);\r\n                if (!result) {\r\n                    return false\r\n                }\r\n            }\r\n        }\r\n        const keyboardListeners = this._getKeyboardListeners();\r\n        const {\r\n            onKeyboardHandled: onKeyboardHandled\r\n        } = this.option();\r\n        keyboardListeners.forEach((listener => listener && listener._keyboardHandler(options)));\r\n        onKeyboardHandled && onKeyboardHandled(options);\r\n        return true\r\n    }\r\n    _refreshFocusState() {\r\n        this._cleanFocusState();\r\n        this._renderFocusState()\r\n    }\r\n    _cleanFocusState() {\r\n        const $element = this._focusTarget();\r\n        $element.removeAttr(\"tabIndex\");\r\n        this._toggleFocusClass(false);\r\n        this._detachFocusEvents();\r\n        this._detachKeyboardEvents()\r\n    }\r\n    _detachKeyboardEvents() {\r\n        keyboard.off(this._keyboardListenerId);\r\n        this._keyboardListenerId = null\r\n    }\r\n    _attachHoverEvents() {\r\n        const {\r\n            hoverStateEnabled: hoverStateEnabled\r\n        } = this.option();\r\n        const selector = this._activeStateUnit;\r\n        const $el = this._eventBindingTarget();\r\n        hover.off($el, {\r\n            selector: selector,\r\n            namespace: \"UIFeedback\"\r\n        });\r\n        if (hoverStateEnabled) {\r\n            hover.on($el, new Action((_ref3 => {\r\n                let {\r\n                    event: event,\r\n                    element: element\r\n                } = _ref3;\r\n                this._hoverStartHandler(event);\r\n                this.option(\"hoveredElement\", $(element))\r\n            }), {\r\n                excludeValidators: [\"readOnly\"]\r\n            }), (event => {\r\n                this.option(\"hoveredElement\", null);\r\n                this._hoverEndHandler(event)\r\n            }), {\r\n                selector: selector,\r\n                namespace: \"UIFeedback\"\r\n            })\r\n        }\r\n    }\r\n    _attachFeedbackEvents() {\r\n        const {\r\n            activeStateEnabled: activeStateEnabled\r\n        } = this.option();\r\n        const selector = this._activeStateUnit;\r\n        const $el = this._eventBindingTarget();\r\n        active.off($el, {\r\n            namespace: \"UIFeedback\",\r\n            selector: selector\r\n        });\r\n        if (activeStateEnabled) {\r\n            active.on($el, new Action((_ref4 => {\r\n                let {\r\n                    event: event,\r\n                    element: element\r\n                } = _ref4;\r\n                return this._toggleActiveState($(element), true, event)\r\n            })), new Action((_ref5 => {\r\n                let {\r\n                    event: event,\r\n                    element: element\r\n                } = _ref5;\r\n                return this._toggleActiveState($(element), false, event)\r\n            }), {\r\n                excludeValidators: [\"disabled\", \"readOnly\"]\r\n            }), {\r\n                showTimeout: this._feedbackShowTimeout,\r\n                hideTimeout: this._feedbackHideTimeout,\r\n                selector: selector,\r\n                namespace: \"UIFeedback\"\r\n            })\r\n        }\r\n    }\r\n    _detachFocusEvents() {\r\n        const $el = this._focusEventTarget();\r\n        focus.off($el, {\r\n            namespace: `${this.NAME}Focus`\r\n        })\r\n    }\r\n    _attachFocusEvents() {\r\n        const $el = this._focusEventTarget();\r\n        focus.on($el, (e => this._focusInHandler(e)), (e => this._focusOutHandler(e)), {\r\n            namespace: `${this.NAME}Focus`,\r\n            isFocusable: (index, el) => $(el).is(focusableSelector)\r\n        })\r\n    }\r\n    _hoverStartHandler(event) {}\r\n    _hoverEndHandler(event) {}\r\n    _toggleActiveState($element, value, event) {\r\n        this.option(\"isActive\", value);\r\n        $element.toggleClass(\"dx-state-active\", value)\r\n    }\r\n    _updatedHover() {\r\n        const hoveredElement = this._options.silent(\"hoveredElement\");\r\n        this._hover(hoveredElement, hoveredElement)\r\n    }\r\n    _findHoverTarget($el) {\r\n        return $el && $el.closest(this._activeStateUnit || this._eventBindingTarget())\r\n    }\r\n    _hover($el, $previous) {\r\n        const {\r\n            hoverStateEnabled: hoverStateEnabled,\r\n            disabled: disabled,\r\n            isActive: isActive\r\n        } = this.option();\r\n        $previous = this._findHoverTarget($previous);\r\n        $previous && $previous.toggleClass(\"dx-state-hover\", false);\r\n        if ($el && hoverStateEnabled && !disabled && !isActive) {\r\n            const newHoveredElement = this._findHoverTarget($el);\r\n            newHoveredElement && newHoveredElement.toggleClass(\"dx-state-hover\", true)\r\n        }\r\n    }\r\n    _toggleDisabledState(value) {\r\n        this.$element().toggleClass(\"dx-state-disabled\", Boolean(value));\r\n        this.setAria(\"disabled\", value || void 0)\r\n    }\r\n    _toggleIndependentState() {\r\n        const {\r\n            ignoreParentReadOnly: ignoreParentReadOnly\r\n        } = this.option();\r\n        this.$element().toggleClass(\"dx-state-independent\", ignoreParentReadOnly)\r\n    }\r\n    _setWidgetOption(widgetName, args) {\r\n        if (!this[widgetName]) {\r\n            return\r\n        }\r\n        if (isPlainObject(args[0])) {\r\n            each(args[0], ((option, value) => this._setWidgetOption(widgetName, [option, value])));\r\n            return\r\n        }\r\n        const optionName = args[0];\r\n        let value = args[1];\r\n        if (1 === args.length) {\r\n            value = this.option(optionName)\r\n        }\r\n        const widgetOptionMap = this[`${widgetName}OptionMap`];\r\n        this[widgetName].option(widgetOptionMap ? widgetOptionMap(optionName) : optionName, value)\r\n    }\r\n    _optionChanged(args) {\r\n        const {\r\n            name: name,\r\n            value: value,\r\n            previousValue: previousValue\r\n        } = args;\r\n        switch (name) {\r\n            case \"disabled\":\r\n                this._toggleDisabledState(value);\r\n                this._updatedHover();\r\n                this._refreshFocusState();\r\n                break;\r\n            case \"hint\":\r\n                this._renderHint();\r\n                break;\r\n            case \"ignoreParentReadOnly\":\r\n                this._toggleIndependentState();\r\n                break;\r\n            case \"activeStateEnabled\":\r\n                this._attachFeedbackEvents();\r\n                break;\r\n            case \"hoverStateEnabled\":\r\n                this._attachHoverEvents();\r\n                this._updatedHover();\r\n                break;\r\n            case \"tabIndex\":\r\n            case \"focusStateEnabled\":\r\n                this._refreshFocusState();\r\n                break;\r\n            case \"onFocusIn\":\r\n            case \"onFocusOut\":\r\n            case \"useResizeObserver\":\r\n                break;\r\n            case \"accessKey\":\r\n                this._renderAccessKey();\r\n                break;\r\n            case \"hoveredElement\":\r\n                this._hover(value, previousValue);\r\n                break;\r\n            case \"isActive\":\r\n                this._updatedHover();\r\n                break;\r\n            case \"visible\":\r\n                this._toggleVisibility(value);\r\n                if (this._isVisibilityChangeSupported()) {\r\n                    this._checkVisibilityChanged(value ? \"shown\" : \"hiding\")\r\n                }\r\n                break;\r\n            case \"onKeyboardHandled\":\r\n                this._attachKeyboardEvents();\r\n                break;\r\n            case \"onContentReady\":\r\n                this._initContentReadyAction();\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    _isVisible() {\r\n        const {\r\n            visible: visible\r\n        } = this.option();\r\n        return super._isVisible() && visible\r\n    }\r\n    beginUpdate() {\r\n        this._ready(false);\r\n        super.beginUpdate()\r\n    }\r\n    endUpdate() {\r\n        super.endUpdate();\r\n        if (this._initialized) {\r\n            this._ready(true)\r\n        }\r\n    }\r\n    _ready(value) {\r\n        if (0 === arguments.length) {\r\n            return !!this._isReady\r\n        }\r\n        this._isReady = !!value;\r\n        return this._isReady\r\n    }\r\n    setAria() {\r\n        if (!isPlainObject(arguments.length <= 0 ? void 0 : arguments[0])) {\r\n            setAttribute(arguments.length <= 0 ? void 0 : arguments[0], arguments.length <= 1 ? void 0 : arguments[1], (arguments.length <= 2 ? void 0 : arguments[2]) || this._getAriaTarget())\r\n        } else {\r\n            const target = (arguments.length <= 1 ? void 0 : arguments[1]) || this._getAriaTarget();\r\n            each(arguments.length <= 0 ? void 0 : arguments[0], ((name, value) => setAttribute(name, value, target)))\r\n        }\r\n    }\r\n    isReady() {\r\n        return this._ready()\r\n    }\r\n    repaint() {\r\n        this._refresh()\r\n    }\r\n    focus() {\r\n        focus.trigger(this._focusTarget())\r\n    }\r\n    registerKeyHandler(key, handler) {\r\n        const currentKeys = this._supportedKeys();\r\n        this._supportedKeys = () => extend(currentKeys, {\r\n            [key]: handler\r\n        })\r\n    }\r\n}\r\nexport default Widget;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,mCAAmC;AAC1C,OAAO,mDAAmD;AAC1D,OAAO,mCAAmC;AAC1C,SACIA,MAAM,EACNC,KAAK,EACLC,KAAK,EACLC,QAAQ,QACL,mCAAmC;AAC1C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,CAAC,MAAM,wBAAwB;AACtC,SACIC,WAAW,QACR,4BAA4B;AACnC,SACIC,MAAM,QACH,4BAA4B;AACnC,SACIC,IAAI,QACD,8BAA8B;AACrC,SACIC,SAAS,EACTC,aAAa,QACV,0BAA0B;AACjC,SACIC,OAAO,IAAIC,eAAe,QACvB,6BAA6B;AACpC,SACIC,SAAS,IAAIC,iBAAiB,QAC3B,8BAA8B;AACrC,OAAOC,YAAY,MAAM,iBAAiB;AAC1C,MAAMC,oBAAoB,GAAG,mBAAmB;AAChD,OAAO,MAAMC,mBAAmB,GAAG,kBAAkB;AACrD,MAAMC,qBAAqB,GAAG,oBAAoB;AAElD,SAASC,YAAYA,CAACC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAE;EACvCF,IAAI,GAAG,MAAM,KAAKA,IAAI,IAAI,IAAI,KAAKA,IAAI,GAAGA,IAAI,GAAG,QAAQA,IAAI,EAAE;EAC/DC,KAAK,GAAGZ,SAAS,CAACY,KAAK,CAAC,GAAGA,KAAK,CAACE,QAAQ,CAAC,CAAC,GAAG,IAAI;EAClDD,MAAM,CAACE,IAAI,CAACJ,IAAI,EAAEC,KAAK,CAAC;AAC5B;AACA,MAAMI,MAAM,SAASV,YAAY,CAAC;EAC9BW,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,GAAGC,SAAS,CAAC;IACnB,IAAI,CAACC,oBAAoB,GAAG,GAAG;IAC/B,IAAI,CAACC,oBAAoB,GAAG,EAAE;EAClC;EACA,OAAOC,uBAAuBA,CAACC,IAAI,EAAE;IACjC,IAAI;MACAX,IAAI,EAAEA,IAAI;MACVY,QAAQ,EAAEA,QAAQ;MAClBX,KAAK,EAAEA;IACX,CAAC,GAAGU,IAAI;IACR,IAAIE,OAAO,GAAG,CAAC,CAAC;IAChB,IAAIb,IAAI,KAAKY,QAAQ,EAAE;MACnBC,OAAO,GAAGZ,KAAK;IACnB,CAAC,MAAM;MACH,MAAMa,MAAM,GAAGF,QAAQ,CAACG,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC;MACxCH,OAAO,CAACC,MAAM,CAAC,GAAGb,KAAK;IAC3B;IACA,OAAOY,OAAO;EAClB;EACAI,cAAcA,CAAA,EAAG;IACb,OAAO,CAAC,CAAC;EACb;EACAC,kBAAkBA,CAAA,EAAG;IACjB,OAAO/B,MAAM,CAAC,KAAK,CAAC+B,kBAAkB,CAAC,CAAC,EAAE;MACtCC,cAAc,EAAE,IAAI;MACpBC,QAAQ,EAAE,KAAK;MACfC,QAAQ,EAAE,KAAK;MACfC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAE,KAAK,CAAC;MACZC,kBAAkB,EAAE,KAAK;MACzBC,cAAc,EAAE,IAAI;MACpBC,iBAAiB,EAAE,KAAK;MACxBC,iBAAiB,EAAE,KAAK;MACxBC,QAAQ,EAAE,CAAC;MACXC,SAAS,EAAE,KAAK,CAAC;MACjBC,SAAS,EAAE,IAAI;MACfC,UAAU,EAAE,IAAI;MAChBC,iBAAiB,EAAE,IAAI;MACvBC,oBAAoB,EAAE,KAAK;MAC3BC,iBAAiB,EAAE;IACvB,CAAC,CAAC;EACN;EACAC,oBAAoBA,CAAA,EAAG;IACnB,OAAO,KAAK,CAACA,oBAAoB,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC;MACxCC,MAAMA,CAAA,EAAG;QACL,MAAMA,MAAM,GAAGrD,OAAO,CAACsD,IAAI,CAAC,CAAC;QAC7B,MAAM;UACFC,QAAQ,EAAEA;QACd,CAAC,GAAGF,MAAM;QACV,MAAM;UACFG,OAAO,EAAEA;QACb,CAAC,GAAGH,MAAM;QACV,OAAO,KAAK,KAAKE,QAAQ,IAAI/C,eAAe,CAACgD,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC;MACtE,CAAC;MACD3B,OAAO,EAAE;QACLqB,iBAAiB,EAAE;MACvB;IACJ,CAAC,CAAC,CAAC;EACP;EACAO,KAAKA,CAAA,EAAG;IACJ,KAAK,CAACA,KAAK,CAAC,CAAC;IACb,IAAI,CAACC,uBAAuB,CAAC,CAAC;EAClC;EACAC,yBAAyBA,CAACC,WAAW,EAAEC,IAAI,EAAE;IACzC,MAAMhC,OAAO,GAAGR,MAAM,CAACK,uBAAuB,CAACmC,IAAI,CAAC;IACpDD,WAAW,IAAIA,WAAW,CAAC9B,MAAM,CAACD,OAAO,CAAC;IAC1C,IAAI,CAACiC,QAAQ,CAACC,KAAK,CAACF,IAAI,CAAC7C,IAAI,EAAEa,OAAO,CAAC;EAC3C;EACAmC,uBAAuBA,CAACJ,WAAW,EAAEK,gBAAgB,EAAE;IACnD,MAAMC,WAAW,GAAGA,CAAA,KAAM,IAAI,CAACJ,QAAQ,CAACK,MAAM,CAACF,gBAAgB,EAAE9D,MAAM,CAAC,CAAC,CAAC,EAAEyD,WAAW,CAAC9B,MAAM,CAAC,CAAC,CAAC,CAAC;IAClGoC,WAAW,CAAC,CAAC;IACbN,WAAW,CAACQ,EAAE,CAAC,eAAe,EAAEF,WAAW,CAAC;EAChD;EACAG,cAAcA,CAAA,EAAG;IACb,OAAO,IAAI,CAACC,YAAY,CAAC,CAAC;EAC9B;EACAZ,uBAAuBA,CAAA,EAAG;IACtB,IAAI,CAACa,mBAAmB,GAAG,IAAI,CAACC,qBAAqB,CAAC,gBAAgB,EAAE;MACpEC,iBAAiB,EAAE,CAAC,UAAU,EAAE,UAAU;IAC9C,CAAC,CAAC;EACN;EACAC,WAAWA,CAAA,EAAG;IACV,MAAM;MACFrC,QAAQ,EAAEA,QAAQ;MAClBC,OAAO,EAAEA;IACb,CAAC,GAAG,IAAI,CAACR,MAAM,CAAC,CAAC;IACjB,IAAI,CAAC6C,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,WAAW,CAAC;IACrC,IAAI,CAACC,oBAAoB,CAACxC,QAAQ,CAAC;IACnC,IAAI,CAACyC,iBAAiB,CAACxC,OAAO,CAAC;IAC/B,IAAI,CAACyC,WAAW,CAAC,CAAC;IAClB,IAAI,CAACC,YAAY,CAAC,CAAC,IAAI,IAAI,CAACC,kBAAkB,CAAC,CAAC;IAChD,KAAK,CAACP,WAAW,CAAC,CAAC;EACvB;EACAQ,OAAOA,CAAA,EAAG;IACN,KAAK,CAACA,OAAO,CAAC,CAAC;IACf,IAAI,CAACC,cAAc,CAAC,CAAC;IACrB,IAAI,CAACC,iBAAiB,CAAC,CAAC;IACxB,IAAI,CAACC,qBAAqB,CAAC,CAAC;IAC5B,IAAI,CAACC,kBAAkB,CAAC,CAAC;IACzB,IAAI,CAACC,uBAAuB,CAAC,CAAC;EAClC;EACAR,WAAWA,CAAA,EAAG;IACV,MAAM;MACFxC,IAAI,EAAEA;IACV,CAAC,GAAG,IAAI,CAACT,MAAM,CAAC,CAAC;IACjB,IAAI,CAAC6C,QAAQ,CAAC,CAAC,CAACvD,IAAI,CAAC,OAAO,EAAEmB,IAAI,IAAI,IAAI,CAAC;EAC/C;EACA4C,cAAcA,CAAA,EAAG;IACbjF,WAAW,CAAE,MAAM,CAAC,IAAI,CAACsF,SAAS,GAAG,IAAI,CAACC,kBAAkB,CAAC,CAAC,GAAG,KAAK,CAAE,CAAC,CAACC,IAAI,CAAE,MAAM,CAAC,IAAI,CAACF,SAAS,GAAG,IAAI,CAACG,uBAAuB,CAAC,CAAC,GAAG,KAAK,CAAE,CAAC;EACrJ;EACAF,kBAAkBA,CAAA,EAAG,CAAC;EACtBE,uBAAuBA,CAAA,EAAG;IACtB,OAAOzF,WAAW,CAAE,MAAM;MACtB,IAAI0F,qBAAqB;MACzB,OAAO,IAAI,MAAMA,qBAAqB,GAAG,IAAI,CAACrB,mBAAmB,CAAC,IAAI,KAAK,CAAC,KAAKqB,qBAAqB,GAAG,KAAK,CAAC,GAAGA,qBAAqB,CAACC,IAAI,CAAC,IAAI,CAAC;IACtJ,CAAE,CAAC;EACP;EACAC,QAAQA,CAAA,EAAG;IACP,IAAI,CAACvB,mBAAmB,GAAG,IAAI;IAC/B,IAAI,CAACwB,qBAAqB,CAAC,CAAC;IAC5B,KAAK,CAACD,QAAQ,CAAC,CAAC;EACpB;EACAE,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACC,kBAAkB,CAAC,IAAI,CAACC,mBAAmB,CAAC,CAAC,EAAE,KAAK,CAAC;EAC9D;EACAC,MAAMA,CAAA,EAAG;IACL,IAAI,CAACC,gBAAgB,CAAC,CAAC;IACvB,IAAI,CAACJ,iBAAiB,CAAC,CAAC;IACxB,KAAK,CAACG,MAAM,CAAC,CAAC;IACd,IAAI,CAACxB,QAAQ,CAAC,CAAC,CAAC0B,KAAK,CAAC,CAAC;EAC3B;EACAvB,iBAAiBA,CAACxC,OAAO,EAAE;IACvB,IAAI,CAACqC,QAAQ,CAAC,CAAC,CAAC2B,WAAW,CAAC,oBAAoB,EAAE,CAAChE,OAAO,CAAC;EAC/D;EACA8C,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACmB,qBAAqB,CAAC,CAAC;IAC5B,IAAI,IAAI,CAACvB,YAAY,CAAC,CAAC,EAAE;MACrB,IAAI,CAACC,kBAAkB,CAAC,CAAC;MACzB,IAAI,CAACuB,kBAAkB,CAAC,CAAC;MACzB,IAAI,CAACC,gBAAgB,CAAC,CAAC;IAC3B;EACJ;EACAA,gBAAgBA,CAAA,EAAG;IACf,MAAMC,GAAG,GAAG,IAAI,CAACpC,YAAY,CAAC,CAAC;IAC/B,MAAM;MACFzB,SAAS,EAAEA;IACf,CAAC,GAAG,IAAI,CAACf,MAAM,CAAC,CAAC;IACjB4E,GAAG,CAACtF,IAAI,CAAC,WAAW,EAAEyB,SAAS,CAAC;EACpC;EACAmC,YAAYA,CAAA,EAAG;IACX,MAAM;MACFrC,iBAAiB,EAAEA,iBAAiB;MACpCN,QAAQ,EAAEA;IACd,CAAC,GAAG,IAAI,CAACP,MAAM,CAAC,CAAC;IACjB,OAAOa,iBAAiB,IAAI,CAACN,QAAQ;EACzC;EACA6D,mBAAmBA,CAAA,EAAG;IAClB,OAAO,IAAI,CAACvB,QAAQ,CAAC,CAAC;EAC1B;EACAL,YAAYA,CAAA,EAAG;IACX,OAAO,IAAI,CAACqC,iBAAiB,CAAC,CAAC;EACnC;EACAC,cAAcA,CAACC,OAAO,EAAE;IACpB,MAAMC,YAAY,GAAG7G,CAAC,CAAC,IAAI,CAACqE,YAAY,CAAC,CAAC,CAAC,CAACyC,OAAO,CAAC,CAAC;IACrD,OAAOD,YAAY,CAACE,QAAQ,CAACH,OAAO,CAAC;EACzC;EACAI,iBAAiBA,CAACtC,QAAQ,EAAE;IACxB,OAAOA,QAAQ,CAACuC,IAAI,CAAC,IAAI,CAACC,gBAAgB,CAAC,CAACC,GAAG,CAAC,oBAAoB,CAAC;EACzE;EACAT,iBAAiBA,CAAA,EAAG;IAChB,MAAMU,aAAa,GAAG,IAAI,CAACnB,mBAAmB,CAAC,CAAC;IAChD,IAAI,IAAI,CAACiB,gBAAgB,EAAE;MACvB,OAAO,IAAI,CAACF,iBAAiB,CAACI,aAAa,CAAC;IAChD;IACA,OAAOA,aAAa;EACxB;EACApC,kBAAkBA,CAAA,EAAG;IACjB,MAAM;MACFrC,QAAQ,EAAEA;IACd,CAAC,GAAG,IAAI,CAACd,MAAM,CAAC,CAAC;IACjB,IAAI,CAACwC,YAAY,CAAC,CAAC,CAAClD,IAAI,CAAC,UAAU,EAAEwB,QAAQ,CAAC;EAClD;EACA0E,2BAA2BA,CAAA,EAAG;IAC1B,OAAO,IAAI,CAACpB,mBAAmB,CAAC,CAAC;EACrC;EACAqB,kBAAkBA,CAAA,EAAG;IACjB,IAAI,CAACC,kBAAkB,CAAC,CAAC;IACzB,IAAI,CAAChB,kBAAkB,CAAC,CAAC;EAC7B;EACAiB,iBAAiBA,CAAA,EAAG;IAChB,OAAO,IAAI,CAACnD,YAAY,CAAC,CAAC;EAC9B;EACAoD,eAAeA,CAACC,KAAK,EAAE;IACnB,IAAI,CAACA,KAAK,CAACC,kBAAkB,CAAC,CAAC,EAAE;MAC7B,IAAI,CAACpD,qBAAqB,CAAC,WAAW,EAAE;QACpCqD,aAAa,EAAEA,CAAA,KAAM,IAAI,CAACC,iBAAiB,CAACH,KAAK,EAAE,IAAI,CAAC;QACxDlD,iBAAiB,EAAE,CAAC,UAAU;MAClC,CAAC,CAAC,CAAC;QACCkD,KAAK,EAAEA;MACX,CAAC,CAAC;IACN;EACJ;EACAI,gBAAgBA,CAACJ,KAAK,EAAE;IACpB,IAAI,CAACA,KAAK,CAACC,kBAAkB,CAAC,CAAC,EAAE;MAC7B,IAAI,CAACpD,qBAAqB,CAAC,YAAY,EAAE;QACrCqD,aAAa,EAAEA,CAAA,KAAM,IAAI,CAACC,iBAAiB,CAACH,KAAK,EAAE,KAAK,CAAC;QACzDlD,iBAAiB,EAAE,CAAC,UAAU,EAAE,UAAU;MAC9C,CAAC,CAAC,CAAC;QACCkD,KAAK,EAAEA;MACX,CAAC,CAAC;IACN;EACJ;EACAG,iBAAiBA,CAACE,KAAK,EAAEC,SAAS,EAAE;IAChC,IAAI;MACA/G,MAAM,EAAEA;IACZ,CAAC,GAAG8G,KAAK;IACT,IAAI,IAAI,CAACpB,cAAc,CAAC1F,MAAM,CAAC,EAAE;MAC7B,IAAI,CAACgH,iBAAiB,CAACD,SAAS,EAAEhI,CAAC,CAACiB,MAAM,CAAC,CAAC;IAChD;EACJ;EACAgH,iBAAiBA,CAACD,SAAS,EAAEtD,QAAQ,EAAE;IACnC,MAAMwD,YAAY,GAAGxD,QAAQ,IAAIA,QAAQ,CAACyD,MAAM,GAAGzD,QAAQ,GAAG,IAAI,CAACL,YAAY,CAAC,CAAC;IACjF6D,YAAY,CAAC7B,WAAW,CAAC,kBAAkB,EAAE2B,SAAS,CAAC;EAC3D;EACAI,cAAcA,CAACxB,OAAO,EAAE;IACpB,MAAMsB,YAAY,GAAGlI,CAAC,CAAC4G,OAAO,IAAI,IAAI,CAACvC,YAAY,CAAC,CAAC,CAAC;IACtD,OAAO6D,YAAY,CAACG,QAAQ,CAAC,kBAAkB,CAAC;EACpD;EACAC,UAAUA,CAAA,EAAG;IACT,OAAO,IAAI,CAACF,cAAc,CAAC,CAAC;EAChC;EACAG,qBAAqBA,CAAA,EAAG;IACpB,OAAO,EAAE;EACb;EACAjC,qBAAqBA,CAAA,EAAG;IACpB,IAAI,CAACR,qBAAqB,CAAC,CAAC;IAC5B,MAAM;MACFpD,iBAAiB,EAAEA,iBAAiB;MACpCK,iBAAiB,EAAEA;IACvB,CAAC,GAAG,IAAI,CAAClB,MAAM,CAAC,CAAC;IACjB,MAAM2G,iBAAiB,GAAG,IAAI,CAACD,qBAAqB,CAAC,CAAC,CAACJ,MAAM;IAC7D,MAAMM,uBAAuB,GAAG,CAAC,CAAC1F,iBAAiB;IACnD,MAAM2F,YAAY,GAAGhG,iBAAiB,IAAI8F,iBAAiB,IAAIC,uBAAuB;IACtF,IAAIC,YAAY,EAAE;MACd,IAAI,CAACC,mBAAmB,GAAG9I,QAAQ,CAACsE,EAAE,CAAC,IAAI,CAACkD,2BAA2B,CAAC,CAAC,EAAE,IAAI,CAAChD,YAAY,CAAC,CAAC,EAAGuE,IAAI,IAAI,IAAI,CAACC,gBAAgB,CAACD,IAAI,CAAE,CAAC;IAC1I;EACJ;EACAC,gBAAgBA,CAACjH,OAAO,EAAEkH,mBAAmB,EAAE;IAC3C,IAAI,CAACA,mBAAmB,EAAE;MACtB,MAAM;QACFC,aAAa,EAAEA,aAAa;QAC5BC,OAAO,EAAEA,OAAO;QAChBC,KAAK,EAAEA;MACX,CAAC,GAAGrH,OAAO;MACX,MAAMsH,IAAI,GAAG,IAAI,CAAClH,cAAc,CAAC+G,aAAa,CAAC;MAC/C,MAAMI,IAAI,GAAGD,IAAI,CAACF,OAAO,CAAC,IAAIE,IAAI,CAACD,KAAK,CAAC;MACzC,IAAI,KAAK,CAAC,KAAKE,IAAI,EAAE;QACjB,MAAMC,OAAO,GAAGD,IAAI,CAACE,IAAI,CAAC,IAAI,CAAC;QAC/B,MAAMC,MAAM,GAAGF,OAAO,CAACL,aAAa,EAAEnH,OAAO,CAAC;QAC9C,IAAI,CAAC0H,MAAM,EAAE;UACT,OAAO,KAAK;QAChB;MACJ;IACJ;IACA,MAAMC,iBAAiB,GAAG,IAAI,CAAChB,qBAAqB,CAAC,CAAC;IACtD,MAAM;MACFxF,iBAAiB,EAAEA;IACvB,CAAC,GAAG,IAAI,CAAClB,MAAM,CAAC,CAAC;IACjB0H,iBAAiB,CAACC,OAAO,CAAEC,QAAQ,IAAIA,QAAQ,IAAIA,QAAQ,CAACZ,gBAAgB,CAACjH,OAAO,CAAE,CAAC;IACvFmB,iBAAiB,IAAIA,iBAAiB,CAACnB,OAAO,CAAC;IAC/C,OAAO,IAAI;EACf;EACA8H,kBAAkBA,CAAA,EAAG;IACjB,IAAI,CAACvD,gBAAgB,CAAC,CAAC;IACvB,IAAI,CAAChB,iBAAiB,CAAC,CAAC;EAC5B;EACAgB,gBAAgBA,CAAA,EAAG;IACf,MAAMzB,QAAQ,GAAG,IAAI,CAACL,YAAY,CAAC,CAAC;IACpCK,QAAQ,CAACiF,UAAU,CAAC,UAAU,CAAC;IAC/B,IAAI,CAAC1B,iBAAiB,CAAC,KAAK,CAAC;IAC7B,IAAI,CAACV,kBAAkB,CAAC,CAAC;IACzB,IAAI,CAACzB,qBAAqB,CAAC,CAAC;EAChC;EACAA,qBAAqBA,CAAA,EAAG;IACpBjG,QAAQ,CAAC+J,GAAG,CAAC,IAAI,CAACjB,mBAAmB,CAAC;IACtC,IAAI,CAACA,mBAAmB,GAAG,IAAI;EACnC;EACAtD,kBAAkBA,CAAA,EAAG;IACjB,MAAM;MACF5C,iBAAiB,EAAEA;IACvB,CAAC,GAAG,IAAI,CAACZ,MAAM,CAAC,CAAC;IACjB,MAAMgI,QAAQ,GAAG,IAAI,CAAC3C,gBAAgB;IACtC,MAAMT,GAAG,GAAG,IAAI,CAACR,mBAAmB,CAAC,CAAC;IACtCrG,KAAK,CAACgK,GAAG,CAACnD,GAAG,EAAE;MACXoD,QAAQ,EAAEA,QAAQ;MAClBC,SAAS,EAAE;IACf,CAAC,CAAC;IACF,IAAIrH,iBAAiB,EAAE;MACnB7C,KAAK,CAACuE,EAAE,CAACsC,GAAG,EAAE,IAAI3G,MAAM,CAAEiK,KAAK,IAAI;QAC/B,IAAI;UACArC,KAAK,EAAEA,KAAK;UACZd,OAAO,EAAEA;QACb,CAAC,GAAGmD,KAAK;QACT,IAAI,CAACC,kBAAkB,CAACtC,KAAK,CAAC;QAC9B,IAAI,CAAC7F,MAAM,CAAC,gBAAgB,EAAE7B,CAAC,CAAC4G,OAAO,CAAC,CAAC;MAC7C,CAAC,EAAG;QACApC,iBAAiB,EAAE,CAAC,UAAU;MAClC,CAAC,CAAC,EAAGkD,KAAK,IAAI;QACV,IAAI,CAAC7F,MAAM,CAAC,gBAAgB,EAAE,IAAI,CAAC;QACnC,IAAI,CAACoI,gBAAgB,CAACvC,KAAK,CAAC;MAChC,CAAC,EAAG;QACAmC,QAAQ,EAAEA,QAAQ;QAClBC,SAAS,EAAE;MACf,CAAC,CAAC;IACN;EACJ;EACA1E,qBAAqBA,CAAA,EAAG;IACpB,MAAM;MACF7C,kBAAkB,EAAEA;IACxB,CAAC,GAAG,IAAI,CAACV,MAAM,CAAC,CAAC;IACjB,MAAMgI,QAAQ,GAAG,IAAI,CAAC3C,gBAAgB;IACtC,MAAMT,GAAG,GAAG,IAAI,CAACR,mBAAmB,CAAC,CAAC;IACtCvG,MAAM,CAACkK,GAAG,CAACnD,GAAG,EAAE;MACZqD,SAAS,EAAE,YAAY;MACvBD,QAAQ,EAAEA;IACd,CAAC,CAAC;IACF,IAAItH,kBAAkB,EAAE;MACpB7C,MAAM,CAACyE,EAAE,CAACsC,GAAG,EAAE,IAAI3G,MAAM,CAAEoK,KAAK,IAAI;QAChC,IAAI;UACAxC,KAAK,EAAEA,KAAK;UACZd,OAAO,EAAEA;QACb,CAAC,GAAGsD,KAAK;QACT,OAAO,IAAI,CAAClE,kBAAkB,CAAChG,CAAC,CAAC4G,OAAO,CAAC,EAAE,IAAI,EAAEc,KAAK,CAAC;MAC3D,CAAE,CAAC,EAAE,IAAI5H,MAAM,CAAEqK,KAAK,IAAI;QACtB,IAAI;UACAzC,KAAK,EAAEA,KAAK;UACZd,OAAO,EAAEA;QACb,CAAC,GAAGuD,KAAK;QACT,OAAO,IAAI,CAACnE,kBAAkB,CAAChG,CAAC,CAAC4G,OAAO,CAAC,EAAE,KAAK,EAAEc,KAAK,CAAC;MAC5D,CAAC,EAAG;QACAlD,iBAAiB,EAAE,CAAC,UAAU,EAAE,UAAU;MAC9C,CAAC,CAAC,EAAE;QACA4F,WAAW,EAAE,IAAI,CAAC5I,oBAAoB;QACtC6I,WAAW,EAAE,IAAI,CAAC9I,oBAAoB;QACtCsI,QAAQ,EAAEA,QAAQ;QAClBC,SAAS,EAAE;MACf,CAAC,CAAC;IACN;EACJ;EACAvC,kBAAkBA,CAAA,EAAG;IACjB,MAAMd,GAAG,GAAG,IAAI,CAACe,iBAAiB,CAAC,CAAC;IACpC7H,KAAK,CAACiK,GAAG,CAACnD,GAAG,EAAE;MACXqD,SAAS,EAAE,GAAG,IAAI,CAACQ,IAAI;IAC3B,CAAC,CAAC;EACN;EACA/D,kBAAkBA,CAAA,EAAG;IACjB,MAAME,GAAG,GAAG,IAAI,CAACe,iBAAiB,CAAC,CAAC;IACpC7H,KAAK,CAACwE,EAAE,CAACsC,GAAG,EAAG8D,CAAC,IAAI,IAAI,CAAC9C,eAAe,CAAC8C,CAAC,CAAC,EAAIA,CAAC,IAAI,IAAI,CAACzC,gBAAgB,CAACyC,CAAC,CAAC,EAAG;MAC3ET,SAAS,EAAE,GAAG,IAAI,CAACQ,IAAI,OAAO;MAC9BE,WAAW,EAAEA,CAACC,KAAK,EAAEC,EAAE,KAAK1K,CAAC,CAAC0K,EAAE,CAAC,CAACC,EAAE,CAAClK,iBAAiB;IAC1D,CAAC,CAAC;EACN;EACAuJ,kBAAkBA,CAACtC,KAAK,EAAE,CAAC;EAC3BuC,gBAAgBA,CAACvC,KAAK,EAAE,CAAC;EACzB1B,kBAAkBA,CAACtB,QAAQ,EAAE1D,KAAK,EAAE0G,KAAK,EAAE;IACvC,IAAI,CAAC7F,MAAM,CAAC,UAAU,EAAEb,KAAK,CAAC;IAC9B0D,QAAQ,CAAC2B,WAAW,CAAC,iBAAiB,EAAErF,KAAK,CAAC;EAClD;EACA4J,aAAaA,CAAA,EAAG;IACZ,MAAM1I,cAAc,GAAG,IAAI,CAAC2B,QAAQ,CAACK,MAAM,CAAC,gBAAgB,CAAC;IAC7D,IAAI,CAAC2G,MAAM,CAAC3I,cAAc,EAAEA,cAAc,CAAC;EAC/C;EACA4I,gBAAgBA,CAACrE,GAAG,EAAE;IAClB,OAAOA,GAAG,IAAIA,GAAG,CAACsE,OAAO,CAAC,IAAI,CAAC7D,gBAAgB,IAAI,IAAI,CAACjB,mBAAmB,CAAC,CAAC,CAAC;EAClF;EACA4E,MAAMA,CAACpE,GAAG,EAAEuE,SAAS,EAAE;IACnB,MAAM;MACFvI,iBAAiB,EAAEA,iBAAiB;MACpCL,QAAQ,EAAEA,QAAQ;MAClBD,QAAQ,EAAEA;IACd,CAAC,GAAG,IAAI,CAACN,MAAM,CAAC,CAAC;IACjBmJ,SAAS,GAAG,IAAI,CAACF,gBAAgB,CAACE,SAAS,CAAC;IAC5CA,SAAS,IAAIA,SAAS,CAAC3E,WAAW,CAAC,gBAAgB,EAAE,KAAK,CAAC;IAC3D,IAAII,GAAG,IAAIhE,iBAAiB,IAAI,CAACL,QAAQ,IAAI,CAACD,QAAQ,EAAE;MACpD,MAAM8I,iBAAiB,GAAG,IAAI,CAACH,gBAAgB,CAACrE,GAAG,CAAC;MACpDwE,iBAAiB,IAAIA,iBAAiB,CAAC5E,WAAW,CAAC,gBAAgB,EAAE,IAAI,CAAC;IAC9E;EACJ;EACAzB,oBAAoBA,CAAC5D,KAAK,EAAE;IACxB,IAAI,CAAC0D,QAAQ,CAAC,CAAC,CAAC2B,WAAW,CAAC,mBAAmB,EAAE6E,OAAO,CAAClK,KAAK,CAAC,CAAC;IAChE,IAAI,CAACmK,OAAO,CAAC,UAAU,EAAEnK,KAAK,IAAI,KAAK,CAAC,CAAC;EAC7C;EACAsE,uBAAuBA,CAAA,EAAG;IACtB,MAAM;MACFtC,oBAAoB,EAAEA;IAC1B,CAAC,GAAG,IAAI,CAACnB,MAAM,CAAC,CAAC;IACjB,IAAI,CAAC6C,QAAQ,CAAC,CAAC,CAAC2B,WAAW,CAAC,sBAAsB,EAAErD,oBAAoB,CAAC;EAC7E;EACAoI,gBAAgBA,CAACC,UAAU,EAAEzH,IAAI,EAAE;IAC/B,IAAI,CAAC,IAAI,CAACyH,UAAU,CAAC,EAAE;MACnB;IACJ;IACA,IAAIhL,aAAa,CAACuD,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;MACxBzD,IAAI,CAACyD,IAAI,CAAC,CAAC,CAAC,EAAG,CAAC/B,MAAM,EAAEb,KAAK,KAAK,IAAI,CAACoK,gBAAgB,CAACC,UAAU,EAAE,CAACxJ,MAAM,EAAEb,KAAK,CAAC,CAAE,CAAC;MACtF;IACJ;IACA,MAAMsK,UAAU,GAAG1H,IAAI,CAAC,CAAC,CAAC;IAC1B,IAAI5C,KAAK,GAAG4C,IAAI,CAAC,CAAC,CAAC;IACnB,IAAI,CAAC,KAAKA,IAAI,CAACuE,MAAM,EAAE;MACnBnH,KAAK,GAAG,IAAI,CAACa,MAAM,CAACyJ,UAAU,CAAC;IACnC;IACA,MAAMC,eAAe,GAAG,IAAI,CAAC,GAAGF,UAAU,WAAW,CAAC;IACtD,IAAI,CAACA,UAAU,CAAC,CAACxJ,MAAM,CAAC0J,eAAe,GAAGA,eAAe,CAACD,UAAU,CAAC,GAAGA,UAAU,EAAEtK,KAAK,CAAC;EAC9F;EACAwK,cAAcA,CAAC5H,IAAI,EAAE;IACjB,MAAM;MACF7C,IAAI,EAAEA,IAAI;MACVC,KAAK,EAAEA,KAAK;MACZyK,aAAa,EAAEA;IACnB,CAAC,GAAG7H,IAAI;IACR,QAAQ7C,IAAI;MACR,KAAK,UAAU;QACX,IAAI,CAAC6D,oBAAoB,CAAC5D,KAAK,CAAC;QAChC,IAAI,CAAC4J,aAAa,CAAC,CAAC;QACpB,IAAI,CAAClB,kBAAkB,CAAC,CAAC;QACzB;MACJ,KAAK,MAAM;QACP,IAAI,CAAC5E,WAAW,CAAC,CAAC;QAClB;MACJ,KAAK,sBAAsB;QACvB,IAAI,CAACQ,uBAAuB,CAAC,CAAC;QAC9B;MACJ,KAAK,oBAAoB;QACrB,IAAI,CAACF,qBAAqB,CAAC,CAAC;QAC5B;MACJ,KAAK,mBAAmB;QACpB,IAAI,CAACC,kBAAkB,CAAC,CAAC;QACzB,IAAI,CAACuF,aAAa,CAAC,CAAC;QACpB;MACJ,KAAK,UAAU;MACf,KAAK,mBAAmB;QACpB,IAAI,CAAClB,kBAAkB,CAAC,CAAC;QACzB;MACJ,KAAK,WAAW;MAChB,KAAK,YAAY;MACjB,KAAK,mBAAmB;QACpB;MACJ,KAAK,WAAW;QACZ,IAAI,CAAClD,gBAAgB,CAAC,CAAC;QACvB;MACJ,KAAK,gBAAgB;QACjB,IAAI,CAACqE,MAAM,CAAC7J,KAAK,EAAEyK,aAAa,CAAC;QACjC;MACJ,KAAK,UAAU;QACX,IAAI,CAACb,aAAa,CAAC,CAAC;QACpB;MACJ,KAAK,SAAS;QACV,IAAI,CAAC/F,iBAAiB,CAAC7D,KAAK,CAAC;QAC7B,IAAI,IAAI,CAAC0K,4BAA4B,CAAC,CAAC,EAAE;UACrC,IAAI,CAACC,uBAAuB,CAAC3K,KAAK,GAAG,OAAO,GAAG,QAAQ,CAAC;QAC5D;QACA;MACJ,KAAK,mBAAmB;QACpB,IAAI,CAACsF,qBAAqB,CAAC,CAAC;QAC5B;MACJ,KAAK,gBAAgB;QACjB,IAAI,CAAC7C,uBAAuB,CAAC,CAAC;QAC9B;MACJ;QACI,KAAK,CAAC+H,cAAc,CAAC5H,IAAI,CAAC;IAClC;EACJ;EACAgI,UAAUA,CAAA,EAAG;IACT,MAAM;MACFvJ,OAAO,EAAEA;IACb,CAAC,GAAG,IAAI,CAACR,MAAM,CAAC,CAAC;IACjB,OAAO,KAAK,CAAC+J,UAAU,CAAC,CAAC,IAAIvJ,OAAO;EACxC;EACAwJ,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,MAAM,CAAC,KAAK,CAAC;IAClB,KAAK,CAACD,WAAW,CAAC,CAAC;EACvB;EACAE,SAASA,CAAA,EAAG;IACR,KAAK,CAACA,SAAS,CAAC,CAAC;IACjB,IAAI,IAAI,CAACC,YAAY,EAAE;MACnB,IAAI,CAACF,MAAM,CAAC,IAAI,CAAC;IACrB;EACJ;EACAA,MAAMA,CAAC9K,KAAK,EAAE;IACV,IAAI,CAAC,KAAKM,SAAS,CAAC6G,MAAM,EAAE;MACxB,OAAO,CAAC,CAAC,IAAI,CAAC8D,QAAQ;IAC1B;IACA,IAAI,CAACA,QAAQ,GAAG,CAAC,CAACjL,KAAK;IACvB,OAAO,IAAI,CAACiL,QAAQ;EACxB;EACAd,OAAOA,CAAA,EAAG;IACN,IAAI,CAAC9K,aAAa,CAACiB,SAAS,CAAC6G,MAAM,IAAI,CAAC,GAAG,KAAK,CAAC,GAAG7G,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;MAC/DR,YAAY,CAACQ,SAAS,CAAC6G,MAAM,IAAI,CAAC,GAAG,KAAK,CAAC,GAAG7G,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAAC6G,MAAM,IAAI,CAAC,GAAG,KAAK,CAAC,GAAG7G,SAAS,CAAC,CAAC,CAAC,EAAE,CAACA,SAAS,CAAC6G,MAAM,IAAI,CAAC,GAAG,KAAK,CAAC,GAAG7G,SAAS,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC8C,cAAc,CAAC,CAAC,CAAC;IACxL,CAAC,MAAM;MACH,MAAMnD,MAAM,GAAG,CAACK,SAAS,CAAC6G,MAAM,IAAI,CAAC,GAAG,KAAK,CAAC,GAAG7G,SAAS,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC8C,cAAc,CAAC,CAAC;MACvFjE,IAAI,CAACmB,SAAS,CAAC6G,MAAM,IAAI,CAAC,GAAG,KAAK,CAAC,GAAG7G,SAAS,CAAC,CAAC,CAAC,EAAG,CAACP,IAAI,EAAEC,KAAK,KAAKF,YAAY,CAACC,IAAI,EAAEC,KAAK,EAAEC,MAAM,CAAE,CAAC;IAC7G;EACJ;EACAiL,OAAOA,CAAA,EAAG;IACN,OAAO,IAAI,CAACJ,MAAM,CAAC,CAAC;EACxB;EACAK,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,QAAQ,CAAC,CAAC;EACnB;EACAzM,KAAKA,CAAA,EAAG;IACJA,KAAK,CAAC0M,OAAO,CAAC,IAAI,CAAChI,YAAY,CAAC,CAAC,CAAC;EACtC;EACAiI,kBAAkBA,CAACC,GAAG,EAAEnD,OAAO,EAAE;IAC7B,MAAMoD,WAAW,GAAG,IAAI,CAACxK,cAAc,CAAC,CAAC;IACzC,IAAI,CAACA,cAAc,GAAG,MAAM9B,MAAM,CAACsM,WAAW,EAAE;MAC5C,CAACD,GAAG,GAAGnD;IACX,CAAC,CAAC;EACN;AACJ;AACA,eAAehI,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}