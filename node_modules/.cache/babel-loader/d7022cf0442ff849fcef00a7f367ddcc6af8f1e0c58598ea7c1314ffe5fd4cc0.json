{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/core/r1/utils/subscribe_to_event.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport * as clickEvent from \"../../../../common/core/events/click\";\nimport eventsEngine from \"../../../../common/core/events/core/events_engine\";\nimport scrollEvents from \"../../../../common/core/events/gesture/emitter.gesture.scroll\";\nimport pointerEvents from \"../../../../common/core/events/pointer\";\nimport { addNamespace } from \"../../../../common/core/events/utils/index\";\nexport function subscribeToEvent(eventName) {\n  return (element, handler, eventData, namespace) => {\n    const event = namespace ? addNamespace(eventName, namespace) : eventName;\n    if (handler) {\n      eventsEngine.on(element, event, eventData, handler);\n      return () => {\n        eventsEngine.off(element, event, handler);\n      };\n    }\n    return;\n  };\n}\nexport const subscribeToClickEvent = subscribeToEvent(clickEvent.name);\nexport const subscribeToScrollEvent = subscribeToEvent(scrollEvents.scroll);\nexport const subscribeToScrollInitEvent = subscribeToEvent(scrollEvents.init);\nexport const subscribeToDXScrollStartEvent = subscribeToEvent(scrollEvents.start);\nexport const subscribeToDXScrollMoveEvent = subscribeToEvent(scrollEvents.move);\nexport const subscribeToDXScrollEndEvent = subscribeToEvent(scrollEvents.end);\nexport const subscribeToDXScrollStopEvent = subscribeToEvent(scrollEvents.stop);\nexport const subscribeToDXScrollCancelEvent = subscribeToEvent(scrollEvents.cancel);\nexport const subscribeToDXPointerDownEvent = subscribeToEvent(pointerEvents.down);\nexport const subscribeToDXPointerUpEvent = subscribeToEvent(pointerEvents.up);\nexport const subscribeToDXPointerMoveEvent = subscribeToEvent(pointerEvents.move);\nexport const subscribeToMouseEnterEvent = subscribeToEvent(\"mouseenter\");\nexport const subscribeToMouseLeaveEvent = subscribeToEvent(\"mouseleave\");\nexport const subscribeToKeyDownEvent = subscribeToEvent(\"keydown\");\nexport const subscribeToDxActiveEvent = subscribeToEvent(\"dxactive\");\nexport const subscribeToDxInactiveEvent = subscribeToEvent(\"dxinactive\");\nexport const subscribeToDxHoverStartEvent = subscribeToEvent(\"dxhoverstart\");\nexport const subscribeToDxHoverEndEvent = subscribeToEvent(\"dxhoverend\");\nexport const subscribeToDxFocusInEvent = subscribeToEvent(\"focusin\");\nexport const subscribeToDxFocusOutEvent = subscribeToEvent(\"focusout\");","map":{"version":3,"names":["clickEvent","eventsEngine","scrollEvents","pointerEvents","addNamespace","subscribeToEvent","eventName","element","handler","eventData","namespace","event","on","off","subscribeToClickEvent","name","subscribeToScrollEvent","scroll","subscribeToScrollInitEvent","init","subscribeToDXScrollStartEvent","start","subscribeToDXScrollMoveEvent","move","subscribeToDXScrollEndEvent","end","subscribeToDXScrollStopEvent","stop","subscribeToDXScrollCancelEvent","cancel","subscribeToDXPointerDownEvent","down","subscribeToDXPointerUpEvent","up","subscribeToDXPointerMoveEvent","subscribeToMouseEnterEvent","subscribeToMouseLeaveEvent","subscribeToKeyDownEvent","subscribeToDxActiveEvent","subscribeToDxInactiveEvent","subscribeToDxHoverStartEvent","subscribeToDxHoverEndEvent","subscribeToDxFocusInEvent","subscribeToDxFocusOutEvent"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/core/r1/utils/subscribe_to_event.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/core/r1/utils/subscribe_to_event.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport * as clickEvent from \"../../../../common/core/events/click\";\r\nimport eventsEngine from \"../../../../common/core/events/core/events_engine\";\r\nimport scrollEvents from \"../../../../common/core/events/gesture/emitter.gesture.scroll\";\r\nimport pointerEvents from \"../../../../common/core/events/pointer\";\r\nimport {\r\n    addNamespace\r\n} from \"../../../../common/core/events/utils/index\";\r\nexport function subscribeToEvent(eventName) {\r\n    return (element, handler, eventData, namespace) => {\r\n        const event = namespace ? addNamespace(eventName, namespace) : eventName;\r\n        if (handler) {\r\n            eventsEngine.on(element, event, eventData, handler);\r\n            return () => {\r\n                eventsEngine.off(element, event, handler)\r\n            }\r\n        }\r\n        return\r\n    }\r\n}\r\nexport const subscribeToClickEvent = subscribeToEvent(clickEvent.name);\r\nexport const subscribeToScrollEvent = subscribeToEvent(scrollEvents.scroll);\r\nexport const subscribeToScrollInitEvent = subscribeToEvent(scrollEvents.init);\r\nexport const subscribeToDXScrollStartEvent = subscribeToEvent(scrollEvents.start);\r\nexport const subscribeToDXScrollMoveEvent = subscribeToEvent(scrollEvents.move);\r\nexport const subscribeToDXScrollEndEvent = subscribeToEvent(scrollEvents.end);\r\nexport const subscribeToDXScrollStopEvent = subscribeToEvent(scrollEvents.stop);\r\nexport const subscribeToDXScrollCancelEvent = subscribeToEvent(scrollEvents.cancel);\r\nexport const subscribeToDXPointerDownEvent = subscribeToEvent(pointerEvents.down);\r\nexport const subscribeToDXPointerUpEvent = subscribeToEvent(pointerEvents.up);\r\nexport const subscribeToDXPointerMoveEvent = subscribeToEvent(pointerEvents.move);\r\nexport const subscribeToMouseEnterEvent = subscribeToEvent(\"mouseenter\");\r\nexport const subscribeToMouseLeaveEvent = subscribeToEvent(\"mouseleave\");\r\nexport const subscribeToKeyDownEvent = subscribeToEvent(\"keydown\");\r\nexport const subscribeToDxActiveEvent = subscribeToEvent(\"dxactive\");\r\nexport const subscribeToDxInactiveEvent = subscribeToEvent(\"dxinactive\");\r\nexport const subscribeToDxHoverStartEvent = subscribeToEvent(\"dxhoverstart\");\r\nexport const subscribeToDxHoverEndEvent = subscribeToEvent(\"dxhoverend\");\r\nexport const subscribeToDxFocusInEvent = subscribeToEvent(\"focusin\");\r\nexport const subscribeToDxFocusOutEvent = subscribeToEvent(\"focusout\");\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKA,UAAU,MAAM,sCAAsC;AAClE,OAAOC,YAAY,MAAM,mDAAmD;AAC5E,OAAOC,YAAY,MAAM,+DAA+D;AACxF,OAAOC,aAAa,MAAM,wCAAwC;AAClE,SACIC,YAAY,QACT,4CAA4C;AACnD,OAAO,SAASC,gBAAgBA,CAACC,SAAS,EAAE;EACxC,OAAO,CAACC,OAAO,EAAEC,OAAO,EAAEC,SAAS,EAAEC,SAAS,KAAK;IAC/C,MAAMC,KAAK,GAAGD,SAAS,GAAGN,YAAY,CAACE,SAAS,EAAEI,SAAS,CAAC,GAAGJ,SAAS;IACxE,IAAIE,OAAO,EAAE;MACTP,YAAY,CAACW,EAAE,CAACL,OAAO,EAAEI,KAAK,EAAEF,SAAS,EAAED,OAAO,CAAC;MACnD,OAAO,MAAM;QACTP,YAAY,CAACY,GAAG,CAACN,OAAO,EAAEI,KAAK,EAAEH,OAAO,CAAC;MAC7C,CAAC;IACL;IACA;EACJ,CAAC;AACL;AACA,OAAO,MAAMM,qBAAqB,GAAGT,gBAAgB,CAACL,UAAU,CAACe,IAAI,CAAC;AACtE,OAAO,MAAMC,sBAAsB,GAAGX,gBAAgB,CAACH,YAAY,CAACe,MAAM,CAAC;AAC3E,OAAO,MAAMC,0BAA0B,GAAGb,gBAAgB,CAACH,YAAY,CAACiB,IAAI,CAAC;AAC7E,OAAO,MAAMC,6BAA6B,GAAGf,gBAAgB,CAACH,YAAY,CAACmB,KAAK,CAAC;AACjF,OAAO,MAAMC,4BAA4B,GAAGjB,gBAAgB,CAACH,YAAY,CAACqB,IAAI,CAAC;AAC/E,OAAO,MAAMC,2BAA2B,GAAGnB,gBAAgB,CAACH,YAAY,CAACuB,GAAG,CAAC;AAC7E,OAAO,MAAMC,4BAA4B,GAAGrB,gBAAgB,CAACH,YAAY,CAACyB,IAAI,CAAC;AAC/E,OAAO,MAAMC,8BAA8B,GAAGvB,gBAAgB,CAACH,YAAY,CAAC2B,MAAM,CAAC;AACnF,OAAO,MAAMC,6BAA6B,GAAGzB,gBAAgB,CAACF,aAAa,CAAC4B,IAAI,CAAC;AACjF,OAAO,MAAMC,2BAA2B,GAAG3B,gBAAgB,CAACF,aAAa,CAAC8B,EAAE,CAAC;AAC7E,OAAO,MAAMC,6BAA6B,GAAG7B,gBAAgB,CAACF,aAAa,CAACoB,IAAI,CAAC;AACjF,OAAO,MAAMY,0BAA0B,GAAG9B,gBAAgB,CAAC,YAAY,CAAC;AACxE,OAAO,MAAM+B,0BAA0B,GAAG/B,gBAAgB,CAAC,YAAY,CAAC;AACxE,OAAO,MAAMgC,uBAAuB,GAAGhC,gBAAgB,CAAC,SAAS,CAAC;AAClE,OAAO,MAAMiC,wBAAwB,GAAGjC,gBAAgB,CAAC,UAAU,CAAC;AACpE,OAAO,MAAMkC,0BAA0B,GAAGlC,gBAAgB,CAAC,YAAY,CAAC;AACxE,OAAO,MAAMmC,4BAA4B,GAAGnC,gBAAgB,CAAC,cAAc,CAAC;AAC5E,OAAO,MAAMoC,0BAA0B,GAAGpC,gBAAgB,CAAC,YAAY,CAAC;AACxE,OAAO,MAAMqC,yBAAyB,GAAGrC,gBAAgB,CAAC,SAAS,CAAC;AACpE,OAAO,MAAMsC,0BAA0B,GAAGtC,gBAAgB,CAAC,UAAU,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}