{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/core/utils/m_selection_filter.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { equalByValue, getKeyHash } from \"../../../core/utils/common\";\nimport { compileGetter } from \"../../../core/utils/data\";\nimport { isFunction, isObject, isString } from \"../../../core/utils/type\";\nexport const SelectionFilterCreator = function (selectedItemKeys, isSelectAll) {\n  this.getLocalFilter = function (keyGetter, equalKeys, equalByReference, keyExpr) {\n    equalKeys = void 0 === equalKeys ? equalByValue : equalKeys;\n    return functionFilter.bind(this, equalKeys, keyGetter, equalByReference, keyExpr);\n  };\n  this.getExpr = function (keyExpr) {\n    if (!keyExpr) {\n      return;\n    }\n    let filterExpr;\n    selectedItemKeys.forEach(function (key, index) {\n      filterExpr = filterExpr || [];\n      let filterExprPart;\n      if (index > 0) {\n        filterExpr.push(isSelectAll ? \"and\" : \"or\");\n      }\n      if (isString(keyExpr) || isFunction(keyExpr)) {\n        filterExprPart = getFilterForPlainKey(keyExpr, key);\n      } else {\n        filterExprPart = function (keyExpr, itemKeyValue) {\n          const filterExpr = [];\n          for (let i = 0, {\n              length: length\n            } = keyExpr; i < length; i++) {\n            const currentKeyExpr = keyExpr[i];\n            const keyValueGetter = compileGetter(currentKeyExpr);\n            const currentKeyValue = itemKeyValue && keyValueGetter(itemKeyValue);\n            const filterExprPart = getFilterForPlainKey(currentKeyExpr, currentKeyValue);\n            if (!filterExprPart) {\n              break;\n            }\n            if (i > 0) {\n              filterExpr.push(isSelectAll ? \"or\" : \"and\");\n            }\n            filterExpr.push(filterExprPart);\n          }\n          return filterExpr;\n        }(keyExpr, key);\n      }\n      filterExpr.push(filterExprPart);\n    });\n    if (filterExpr && 1 === filterExpr.length) {\n      filterExpr = filterExpr[0];\n    }\n    return filterExpr;\n  };\n  this.getCombinedFilter = function (keyExpr, dataSourceFilter) {\n    let forceCombinedFilter = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : false;\n    const filterExpr = this.getExpr(keyExpr);\n    let combinedFilter = filterExpr;\n    if ((forceCombinedFilter || isSelectAll) && dataSourceFilter) {\n      if (filterExpr) {\n        combinedFilter = [];\n        combinedFilter.push(filterExpr);\n        combinedFilter.push(dataSourceFilter);\n      } else {\n        combinedFilter = dataSourceFilter;\n      }\n    }\n    return combinedFilter;\n  };\n  let selectedItemKeyHashesMap;\n  const getSelectedItemKeyHashesMap = function (keyOf, keyExpr) {\n    if (!selectedItemKeyHashesMap) {\n      selectedItemKeyHashesMap = {};\n      const normalizedKeys = normalizeKeys(selectedItemKeys, keyOf, keyExpr);\n      for (let i = 0; i < normalizedKeys.length; i++) {\n        selectedItemKeyHashesMap[getKeyHash(normalizedKeys[i])] = true;\n      }\n    }\n    return selectedItemKeyHashesMap;\n  };\n  const normalizeKeys = function (keys, keyOf, keyExpr) {\n    return Array.isArray(keyExpr) ? keys.map(key => keyOf(key)) : keys;\n  };\n  function functionFilter(equalKeys, keyOf, equalByReference, keyExpr, item) {\n    const key = keyOf(item);\n    let keyHash;\n    let i;\n    if (!equalByReference) {\n      keyHash = getKeyHash(key);\n      if (!isObject(keyHash)) {\n        const selectedKeyHashesMap = getSelectedItemKeyHashesMap(keyOf, keyExpr);\n        if (selectedKeyHashesMap[keyHash]) {\n          return !isSelectAll;\n        }\n        return !!isSelectAll;\n      }\n    }\n    for (i = 0; i < selectedItemKeys.length; i++) {\n      if (equalKeys(selectedItemKeys[i], key)) {\n        return !isSelectAll;\n      }\n    }\n    return !!isSelectAll;\n  }\n  function getFilterForPlainKey(keyExpr, keyValue) {\n    if (void 0 === keyValue) {\n      return;\n    }\n    return [keyExpr, isSelectAll ? \"<>\" : \"=\", keyValue];\n  }\n};","map":{"version":3,"names":["equalByValue","getKeyHash","compileGetter","isFunction","isObject","isString","SelectionFilterCreator","selectedItemKeys","isSelectAll","getLocalFilter","keyGetter","equalKeys","equalByReference","keyExpr","functionFilter","bind","getExpr","filterExpr","forEach","key","index","filterExprPart","push","getFilterForPlainKey","itemKeyValue","i","length","currentKeyExpr","keyValueGetter","currentKeyValue","getCombinedFilter","dataSourceFilter","forceCombinedFilter","arguments","combinedFilter","selectedItemKeyHashesMap","getSelectedItemKeyHashesMap","keyOf","normalizedKeys","normalizeKeys","keys","Array","isArray","map","item","keyHash","selectedKeyHashesMap","keyValue"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/core/utils/m_selection_filter.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/core/utils/m_selection_filter.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    equalByValue,\r\n    getKeyHash\r\n} from \"../../../core/utils/common\";\r\nimport {\r\n    compileGetter\r\n} from \"../../../core/utils/data\";\r\nimport {\r\n    isFunction,\r\n    isObject,\r\n    isString\r\n} from \"../../../core/utils/type\";\r\nexport const SelectionFilterCreator = function(selectedItemKeys, isSelectAll) {\r\n    this.getLocalFilter = function(keyGetter, equalKeys, equalByReference, keyExpr) {\r\n        equalKeys = void 0 === equalKeys ? equalByValue : equalKeys;\r\n        return functionFilter.bind(this, equalKeys, keyGetter, equalByReference, keyExpr)\r\n    };\r\n    this.getExpr = function(keyExpr) {\r\n        if (!keyExpr) {\r\n            return\r\n        }\r\n        let filterExpr;\r\n        selectedItemKeys.forEach((function(key, index) {\r\n            filterExpr = filterExpr || [];\r\n            let filterExprPart;\r\n            if (index > 0) {\r\n                filterExpr.push(isSelectAll ? \"and\" : \"or\")\r\n            }\r\n            if (isString(keyExpr) || isFunction(keyExpr)) {\r\n                filterExprPart = getFilterForPlainKey(keyExpr, key)\r\n            } else {\r\n                filterExprPart = function(keyExpr, itemKeyValue) {\r\n                    const filterExpr = [];\r\n                    for (let i = 0, {\r\n                            length: length\r\n                        } = keyExpr; i < length; i++) {\r\n                        const currentKeyExpr = keyExpr[i];\r\n                        const keyValueGetter = compileGetter(currentKeyExpr);\r\n                        const currentKeyValue = itemKeyValue && keyValueGetter(itemKeyValue);\r\n                        const filterExprPart = getFilterForPlainKey(currentKeyExpr, currentKeyValue);\r\n                        if (!filterExprPart) {\r\n                            break\r\n                        }\r\n                        if (i > 0) {\r\n                            filterExpr.push(isSelectAll ? \"or\" : \"and\")\r\n                        }\r\n                        filterExpr.push(filterExprPart)\r\n                    }\r\n                    return filterExpr\r\n                }(keyExpr, key)\r\n            }\r\n            filterExpr.push(filterExprPart)\r\n        }));\r\n        if (filterExpr && 1 === filterExpr.length) {\r\n            filterExpr = filterExpr[0]\r\n        }\r\n        return filterExpr\r\n    };\r\n    this.getCombinedFilter = function(keyExpr, dataSourceFilter) {\r\n        let forceCombinedFilter = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : false;\r\n        const filterExpr = this.getExpr(keyExpr);\r\n        let combinedFilter = filterExpr;\r\n        if ((forceCombinedFilter || isSelectAll) && dataSourceFilter) {\r\n            if (filterExpr) {\r\n                combinedFilter = [];\r\n                combinedFilter.push(filterExpr);\r\n                combinedFilter.push(dataSourceFilter)\r\n            } else {\r\n                combinedFilter = dataSourceFilter\r\n            }\r\n        }\r\n        return combinedFilter\r\n    };\r\n    let selectedItemKeyHashesMap;\r\n    const getSelectedItemKeyHashesMap = function(keyOf, keyExpr) {\r\n        if (!selectedItemKeyHashesMap) {\r\n            selectedItemKeyHashesMap = {};\r\n            const normalizedKeys = normalizeKeys(selectedItemKeys, keyOf, keyExpr);\r\n            for (let i = 0; i < normalizedKeys.length; i++) {\r\n                selectedItemKeyHashesMap[getKeyHash(normalizedKeys[i])] = true\r\n            }\r\n        }\r\n        return selectedItemKeyHashesMap\r\n    };\r\n    const normalizeKeys = function(keys, keyOf, keyExpr) {\r\n        return Array.isArray(keyExpr) ? keys.map((key => keyOf(key))) : keys\r\n    };\r\n\r\n    function functionFilter(equalKeys, keyOf, equalByReference, keyExpr, item) {\r\n        const key = keyOf(item);\r\n        let keyHash;\r\n        let i;\r\n        if (!equalByReference) {\r\n            keyHash = getKeyHash(key);\r\n            if (!isObject(keyHash)) {\r\n                const selectedKeyHashesMap = getSelectedItemKeyHashesMap(keyOf, keyExpr);\r\n                if (selectedKeyHashesMap[keyHash]) {\r\n                    return !isSelectAll\r\n                }\r\n                return !!isSelectAll\r\n            }\r\n        }\r\n        for (i = 0; i < selectedItemKeys.length; i++) {\r\n            if (equalKeys(selectedItemKeys[i], key)) {\r\n                return !isSelectAll\r\n            }\r\n        }\r\n        return !!isSelectAll\r\n    }\r\n\r\n    function getFilterForPlainKey(keyExpr, keyValue) {\r\n        if (void 0 === keyValue) {\r\n            return\r\n        }\r\n        return [keyExpr, isSelectAll ? \"<>\" : \"=\", keyValue]\r\n    }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}