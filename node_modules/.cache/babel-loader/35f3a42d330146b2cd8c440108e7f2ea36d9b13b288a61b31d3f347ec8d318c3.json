{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/ui/scroll_view/m_scrollable.native.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport eventsEngine from \"../../../common/core/events/core/events_engine\";\nimport { isDxMouseWheelEvent } from \"../../../common/core/events/utils/index\";\nimport Class from \"../../../core/class\";\nimport devices from \"../../../core/devices\";\nimport $ from \"../../../core/renderer\";\nimport { each } from \"../../../core/utils/iterator\";\nimport { getHeight, getWidth } from \"../../../core/utils/size\";\nimport Scrollbar from \"./m_scrollbar\";\nconst SCROLLABLE_NATIVE = \"dxNativeScrollable\";\nconst SCROLLABLE_NATIVE_CLASS = \"dx-scrollable-native\";\nconst SCROLLABLE_SCROLLBAR_SIMULATED = \"dx-scrollable-scrollbar-simulated\";\nconst SCROLLABLE_SCROLLBARS_HIDDEN = \"dx-scrollable-scrollbars-hidden\";\nconst VERTICAL = \"vertical\";\nconst HORIZONTAL = \"horizontal\";\nconst HIDE_SCROLLBAR_TIMEOUT = 500;\nclass NativeStrategy extends Class.inherit({}) {\n  ctor(scrollable) {\n    this._init(scrollable);\n  }\n  _init(scrollable) {\n    this._component = scrollable;\n    this._$element = scrollable.$element();\n    this._$container = $(scrollable.container());\n    this._$content = scrollable.$content();\n    const {\n      direction: direction,\n      useSimulatedScrollbar: useSimulatedScrollbar\n    } = scrollable.option();\n    this._direction = direction;\n    this._useSimulatedScrollbar = useSimulatedScrollbar;\n    this.option = scrollable.option.bind(scrollable);\n    this._createActionByOption = scrollable._createActionByOption.bind(scrollable);\n    this._isLocked = scrollable._isLocked.bind(scrollable);\n    this._isDirection = scrollable._isDirection.bind(scrollable);\n    this._allowedDirection = scrollable._allowedDirection.bind(scrollable);\n    this._getMaxOffset = scrollable._getMaxOffset.bind(scrollable);\n    this._isRtlNativeStrategy = scrollable._isRtlNativeStrategy.bind(scrollable);\n  }\n  render() {\n    const device = devices.real();\n    const deviceType = device.platform;\n    this._$element.addClass(\"dx-scrollable-native\").addClass(`dx-scrollable-native-${deviceType}`).toggleClass(SCROLLABLE_SCROLLBARS_HIDDEN, !this._isScrollbarVisible());\n    if (this._isScrollbarVisible() && this._useSimulatedScrollbar) {\n      this._renderScrollbars();\n    }\n  }\n  updateRtlPosition(isFirstRender) {\n    if (isFirstRender && this.option(\"rtlEnabled\")) {\n      if (this._isScrollbarVisible() && this._useSimulatedScrollbar) {\n        this._moveScrollbars();\n      }\n    }\n  }\n  _renderScrollbars() {\n    this._scrollbars = {};\n    this._hideScrollbarTimeout = 0;\n    this._$element.addClass(SCROLLABLE_SCROLLBAR_SIMULATED);\n    this._renderScrollbar(VERTICAL);\n    this._renderScrollbar(HORIZONTAL);\n  }\n  _renderScrollbar(direction) {\n    if (!this._isDirection(direction)) {\n      return;\n    }\n    this._scrollbars[direction] = new Scrollbar($(\"<div>\").appendTo(this._$element), {\n      direction: direction,\n      expandable: this._component.option(\"scrollByThumb\")\n    });\n  }\n  handleInit(e) {}\n  handleStart() {}\n  handleMove(e) {\n    if (this._isLocked()) {\n      e.cancel = true;\n      return;\n    }\n    if (this._allowedDirection()) {\n      e.originalEvent.isScrollingEvent = true;\n    }\n  }\n  handleEnd() {}\n  handleCancel() {}\n  handleStop() {}\n  _eachScrollbar(callback) {\n    callback = callback.bind(this);\n    each(this._scrollbars || {}, (direction, scrollbar) => {\n      callback(scrollbar, direction);\n    });\n  }\n  createActions() {\n    this._scrollAction = this._createActionByOption(\"onScroll\");\n    this._updateAction = this._createActionByOption(\"onUpdated\");\n  }\n  _createActionArgs() {\n    const {\n      left: left,\n      top: top\n    } = this.location();\n    return {\n      event: this._eventForUserAction,\n      scrollOffset: this._getScrollOffset(),\n      reachedLeft: this._isRtlNativeStrategy() ? this._isReachedRight(-left) : this._isReachedLeft(left),\n      reachedRight: this._isRtlNativeStrategy() ? this._isReachedLeft(-Math.abs(left)) : this._isReachedRight(left),\n      reachedTop: this._isDirection(VERTICAL) ? Math.round(top) >= 0 : void 0,\n      reachedBottom: this._isDirection(VERTICAL) ? Math.round(Math.abs(top) - this._getMaxOffset().top) >= 0 : void 0\n    };\n  }\n  _getScrollOffset() {\n    const {\n      top: top,\n      left: left\n    } = this.location();\n    return {\n      top: -top,\n      left: this._normalizeOffsetLeft(-left)\n    };\n  }\n  _normalizeOffsetLeft(scrollLeft) {\n    if (this._isRtlNativeStrategy()) {\n      return this._getMaxOffset().left + scrollLeft;\n    }\n    return scrollLeft;\n  }\n  _isReachedLeft(left) {\n    return this._isDirection(HORIZONTAL) ? Math.round(left) >= 0 : void 0;\n  }\n  _isReachedRight(left) {\n    return this._isDirection(HORIZONTAL) ? Math.round(Math.abs(left) - this._getMaxOffset().left) >= 0 : void 0;\n  }\n  _isScrollbarVisible() {\n    const {\n      showScrollbar: showScrollbar\n    } = this.option();\n    return \"never\" !== showScrollbar && false !== showScrollbar;\n  }\n  handleScroll(e) {\n    var _this$_scrollAction;\n    this._eventForUserAction = e;\n    this._moveScrollbars();\n    null === (_this$_scrollAction = this._scrollAction) || void 0 === _this$_scrollAction || _this$_scrollAction.call(this, this._createActionArgs());\n  }\n  _moveScrollbars() {\n    const {\n      top: top,\n      left: left\n    } = this._getScrollOffset();\n    this._eachScrollbar(scrollbar => {\n      scrollbar.moveTo({\n        top: -top,\n        left: -left\n      });\n      scrollbar.option(\"visible\", true);\n    });\n    this._hideScrollbars();\n  }\n  _hideScrollbars() {\n    clearTimeout(this._hideScrollbarTimeout);\n    this._hideScrollbarTimeout = setTimeout(() => {\n      this._eachScrollbar(scrollbar => {\n        scrollbar.option(\"visible\", false);\n      });\n    }, 500);\n  }\n  location() {\n    return {\n      left: -this._$container.scrollLeft(),\n      top: -this._$container.scrollTop()\n    };\n  }\n  disabledChanged() {}\n  update() {\n    this._update();\n    this._updateAction(this._createActionArgs());\n  }\n  _update() {\n    this._updateDimensions();\n    this._updateScrollbars();\n  }\n  _updateDimensions() {\n    this._containerSize = {\n      height: getHeight(this._$container),\n      width: getWidth(this._$container)\n    };\n    this._componentContentSize = {\n      height: getHeight(this._component.$content()),\n      width: getWidth(this._component.$content())\n    };\n    this._contentSize = {\n      height: getHeight(this._$content),\n      width: getWidth(this._$content)\n    };\n  }\n  _updateScrollbars() {\n    this._eachScrollbar(function (scrollbar, direction) {\n      const dimension = direction === VERTICAL ? \"height\" : \"width\";\n      scrollbar.option({\n        containerSize: this._containerSize[dimension],\n        contentSize: this._componentContentSize[dimension]\n      });\n      scrollbar.update();\n    });\n  }\n  _allowedDirections() {\n    return {\n      vertical: this._isDirection(VERTICAL) && this._contentSize.height > this._containerSize.height,\n      horizontal: this._isDirection(HORIZONTAL) && this._contentSize.width > this._containerSize.width\n    };\n  }\n  dispose() {\n    const {\n      className: className\n    } = this._$element.get(0);\n    const scrollableNativeRegexp = new RegExp(\"dx-scrollable-native\\\\S*\", \"g\");\n    if (scrollableNativeRegexp.test(className)) {\n      this._$element.removeClass(className.match(scrollableNativeRegexp).join(\" \"));\n    }\n    eventsEngine.off(this._$element, `.${SCROLLABLE_NATIVE}`);\n    eventsEngine.off(this._$container, `.${SCROLLABLE_NATIVE}`);\n    this._removeScrollbars();\n    clearTimeout(this._hideScrollbarTimeout);\n  }\n  _removeScrollbars() {\n    this._eachScrollbar(scrollbar => {\n      scrollbar.$element().remove();\n    });\n  }\n  scrollBy(distance) {\n    const location = this.location();\n    this._$container.scrollTop(Math.round(-location.top - distance.top));\n    this._$container.scrollLeft(Math.round(-location.left - distance.left));\n  }\n  validate(e) {\n    const {\n      disabled: disabled\n    } = this.option();\n    if (disabled) {\n      return false;\n    }\n    if (isDxMouseWheelEvent(e) && this._isScrolledInMaxDirection(e)) {\n      return false;\n    }\n    return !!this._allowedDirection();\n  }\n  _isScrolledInMaxDirection(e) {\n    const container = this._$container.get(0);\n    let result;\n    if (e.delta > 0) {\n      result = e.shiftKey ? !container.scrollLeft : !container.scrollTop;\n    } else if (e.shiftKey) {\n      result = container.scrollLeft >= this._getMaxOffset().left;\n    } else {\n      result = container.scrollTop >= this._getMaxOffset().top;\n    }\n    return result;\n  }\n  getDirection() {\n    return this._allowedDirection();\n  }\n}\nexport default NativeStrategy;","map":{"version":3,"names":["eventsEngine","isDxMouseWheelEvent","Class","devices","$","each","getHeight","getWidth","Scrollbar","SCROLLABLE_NATIVE","SCROLLABLE_NATIVE_CLASS","SCROLLABLE_SCROLLBAR_SIMULATED","SCROLLABLE_SCROLLBARS_HIDDEN","VERTICAL","HORIZONTAL","HIDE_SCROLLBAR_TIMEOUT","NativeStrategy","inherit","ctor","scrollable","_init","_component","_$element","$element","_$container","container","_$content","$content","direction","useSimulatedScrollbar","option","_direction","_useSimulatedScrollbar","bind","_createActionByOption","_isLocked","_isDirection","_allowedDirection","_getMaxOffset","_isRtlNativeStrategy","render","device","real","deviceType","platform","addClass","toggleClass","_isScrollbarVisible","_renderScrollbars","updateRtlPosition","isFirstRender","_moveScrollbars","_scrollbars","_hideScrollbarTimeout","_renderScrollbar","appendTo","expandable","handleInit","e","handleStart","handleMove","cancel","originalEvent","isScrollingEvent","handleEnd","handleCancel","handleStop","_eachScrollbar","callback","scrollbar","createActions","_scrollAction","_updateAction","_createActionArgs","left","top","location","event","_eventForUserAction","scrollOffset","_getScrollOffset","reachedLeft","_isReachedRight","_isReachedLeft","reachedRight","Math","abs","reachedTop","round","reachedBottom","_normalizeOffsetLeft","scrollLeft","showScrollbar","handleScroll","_this$_scrollAction","call","moveTo","_hideScrollbars","clearTimeout","setTimeout","scrollTop","disabledChanged","update","_update","_updateDimensions","_updateScrollbars","_containerSize","height","width","_componentContentSize","_contentSize","dimension","containerSize","contentSize","_allowedDirections","vertical","horizontal","dispose","className","get","scrollableNativeRegexp","RegExp","test","removeClass","match","join","off","_removeScrollbars","remove","scrollBy","distance","validate","disabled","_isScrolledInMaxDirection","result","delta","shiftKey","getDirection"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/ui/scroll_view/m_scrollable.native.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/ui/scroll_view/m_scrollable.native.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport eventsEngine from \"../../../common/core/events/core/events_engine\";\r\nimport {\r\n    isDxMouseWheelEvent\r\n} from \"../../../common/core/events/utils/index\";\r\nimport Class from \"../../../core/class\";\r\nimport devices from \"../../../core/devices\";\r\nimport $ from \"../../../core/renderer\";\r\nimport {\r\n    each\r\n} from \"../../../core/utils/iterator\";\r\nimport {\r\n    getHeight,\r\n    getWidth\r\n} from \"../../../core/utils/size\";\r\nimport Scrollbar from \"./m_scrollbar\";\r\nconst SCROLLABLE_NATIVE = \"dxNativeScrollable\";\r\nconst SCROLLABLE_NATIVE_CLASS = \"dx-scrollable-native\";\r\nconst SCROLLABLE_SCROLLBAR_SIMULATED = \"dx-scrollable-scrollbar-simulated\";\r\nconst SCROLLABLE_SCROLLBARS_HIDDEN = \"dx-scrollable-scrollbars-hidden\";\r\nconst VERTICAL = \"vertical\";\r\nconst HORIZONTAL = \"horizontal\";\r\nconst HIDE_SCROLLBAR_TIMEOUT = 500;\r\nclass NativeStrategy extends(Class.inherit({})) {\r\n    ctor(scrollable) {\r\n        this._init(scrollable)\r\n    }\r\n    _init(scrollable) {\r\n        this._component = scrollable;\r\n        this._$element = scrollable.$element();\r\n        this._$container = $(scrollable.container());\r\n        this._$content = scrollable.$content();\r\n        const {\r\n            direction: direction,\r\n            useSimulatedScrollbar: useSimulatedScrollbar\r\n        } = scrollable.option();\r\n        this._direction = direction;\r\n        this._useSimulatedScrollbar = useSimulatedScrollbar;\r\n        this.option = scrollable.option.bind(scrollable);\r\n        this._createActionByOption = scrollable._createActionByOption.bind(scrollable);\r\n        this._isLocked = scrollable._isLocked.bind(scrollable);\r\n        this._isDirection = scrollable._isDirection.bind(scrollable);\r\n        this._allowedDirection = scrollable._allowedDirection.bind(scrollable);\r\n        this._getMaxOffset = scrollable._getMaxOffset.bind(scrollable);\r\n        this._isRtlNativeStrategy = scrollable._isRtlNativeStrategy.bind(scrollable)\r\n    }\r\n    render() {\r\n        const device = devices.real();\r\n        const deviceType = device.platform;\r\n        this._$element.addClass(\"dx-scrollable-native\").addClass(`dx-scrollable-native-${deviceType}`).toggleClass(SCROLLABLE_SCROLLBARS_HIDDEN, !this._isScrollbarVisible());\r\n        if (this._isScrollbarVisible() && this._useSimulatedScrollbar) {\r\n            this._renderScrollbars()\r\n        }\r\n    }\r\n    updateRtlPosition(isFirstRender) {\r\n        if (isFirstRender && this.option(\"rtlEnabled\")) {\r\n            if (this._isScrollbarVisible() && this._useSimulatedScrollbar) {\r\n                this._moveScrollbars()\r\n            }\r\n        }\r\n    }\r\n    _renderScrollbars() {\r\n        this._scrollbars = {};\r\n        this._hideScrollbarTimeout = 0;\r\n        this._$element.addClass(SCROLLABLE_SCROLLBAR_SIMULATED);\r\n        this._renderScrollbar(VERTICAL);\r\n        this._renderScrollbar(HORIZONTAL)\r\n    }\r\n    _renderScrollbar(direction) {\r\n        if (!this._isDirection(direction)) {\r\n            return\r\n        }\r\n        this._scrollbars[direction] = new Scrollbar($(\"<div>\").appendTo(this._$element), {\r\n            direction: direction,\r\n            expandable: this._component.option(\"scrollByThumb\")\r\n        })\r\n    }\r\n    handleInit(e) {}\r\n    handleStart() {}\r\n    handleMove(e) {\r\n        if (this._isLocked()) {\r\n            e.cancel = true;\r\n            return\r\n        }\r\n        if (this._allowedDirection()) {\r\n            e.originalEvent.isScrollingEvent = true\r\n        }\r\n    }\r\n    handleEnd() {}\r\n    handleCancel() {}\r\n    handleStop() {}\r\n    _eachScrollbar(callback) {\r\n        callback = callback.bind(this);\r\n        each(this._scrollbars || {}, ((direction, scrollbar) => {\r\n            callback(scrollbar, direction)\r\n        }))\r\n    }\r\n    createActions() {\r\n        this._scrollAction = this._createActionByOption(\"onScroll\");\r\n        this._updateAction = this._createActionByOption(\"onUpdated\")\r\n    }\r\n    _createActionArgs() {\r\n        const {\r\n            left: left,\r\n            top: top\r\n        } = this.location();\r\n        return {\r\n            event: this._eventForUserAction,\r\n            scrollOffset: this._getScrollOffset(),\r\n            reachedLeft: this._isRtlNativeStrategy() ? this._isReachedRight(-left) : this._isReachedLeft(left),\r\n            reachedRight: this._isRtlNativeStrategy() ? this._isReachedLeft(-Math.abs(left)) : this._isReachedRight(left),\r\n            reachedTop: this._isDirection(VERTICAL) ? Math.round(top) >= 0 : void 0,\r\n            reachedBottom: this._isDirection(VERTICAL) ? Math.round(Math.abs(top) - this._getMaxOffset().top) >= 0 : void 0\r\n        }\r\n    }\r\n    _getScrollOffset() {\r\n        const {\r\n            top: top,\r\n            left: left\r\n        } = this.location();\r\n        return {\r\n            top: -top,\r\n            left: this._normalizeOffsetLeft(-left)\r\n        }\r\n    }\r\n    _normalizeOffsetLeft(scrollLeft) {\r\n        if (this._isRtlNativeStrategy()) {\r\n            return this._getMaxOffset().left + scrollLeft\r\n        }\r\n        return scrollLeft\r\n    }\r\n    _isReachedLeft(left) {\r\n        return this._isDirection(HORIZONTAL) ? Math.round(left) >= 0 : void 0\r\n    }\r\n    _isReachedRight(left) {\r\n        return this._isDirection(HORIZONTAL) ? Math.round(Math.abs(left) - this._getMaxOffset().left) >= 0 : void 0\r\n    }\r\n    _isScrollbarVisible() {\r\n        const {\r\n            showScrollbar: showScrollbar\r\n        } = this.option();\r\n        return \"never\" !== showScrollbar && false !== showScrollbar\r\n    }\r\n    handleScroll(e) {\r\n        var _this$_scrollAction;\r\n        this._eventForUserAction = e;\r\n        this._moveScrollbars();\r\n        null === (_this$_scrollAction = this._scrollAction) || void 0 === _this$_scrollAction || _this$_scrollAction.call(this, this._createActionArgs())\r\n    }\r\n    _moveScrollbars() {\r\n        const {\r\n            top: top,\r\n            left: left\r\n        } = this._getScrollOffset();\r\n        this._eachScrollbar((scrollbar => {\r\n            scrollbar.moveTo({\r\n                top: -top,\r\n                left: -left\r\n            });\r\n            scrollbar.option(\"visible\", true)\r\n        }));\r\n        this._hideScrollbars()\r\n    }\r\n    _hideScrollbars() {\r\n        clearTimeout(this._hideScrollbarTimeout);\r\n        this._hideScrollbarTimeout = setTimeout((() => {\r\n            this._eachScrollbar((scrollbar => {\r\n                scrollbar.option(\"visible\", false)\r\n            }))\r\n        }), 500)\r\n    }\r\n    location() {\r\n        return {\r\n            left: -this._$container.scrollLeft(),\r\n            top: -this._$container.scrollTop()\r\n        }\r\n    }\r\n    disabledChanged() {}\r\n    update() {\r\n        this._update();\r\n        this._updateAction(this._createActionArgs())\r\n    }\r\n    _update() {\r\n        this._updateDimensions();\r\n        this._updateScrollbars()\r\n    }\r\n    _updateDimensions() {\r\n        this._containerSize = {\r\n            height: getHeight(this._$container),\r\n            width: getWidth(this._$container)\r\n        };\r\n        this._componentContentSize = {\r\n            height: getHeight(this._component.$content()),\r\n            width: getWidth(this._component.$content())\r\n        };\r\n        this._contentSize = {\r\n            height: getHeight(this._$content),\r\n            width: getWidth(this._$content)\r\n        }\r\n    }\r\n    _updateScrollbars() {\r\n        this._eachScrollbar((function(scrollbar, direction) {\r\n            const dimension = direction === VERTICAL ? \"height\" : \"width\";\r\n            scrollbar.option({\r\n                containerSize: this._containerSize[dimension],\r\n                contentSize: this._componentContentSize[dimension]\r\n            });\r\n            scrollbar.update()\r\n        }))\r\n    }\r\n    _allowedDirections() {\r\n        return {\r\n            vertical: this._isDirection(VERTICAL) && this._contentSize.height > this._containerSize.height,\r\n            horizontal: this._isDirection(HORIZONTAL) && this._contentSize.width > this._containerSize.width\r\n        }\r\n    }\r\n    dispose() {\r\n        const {\r\n            className: className\r\n        } = this._$element.get(0);\r\n        const scrollableNativeRegexp = new RegExp(\"dx-scrollable-native\\\\S*\", \"g\");\r\n        if (scrollableNativeRegexp.test(className)) {\r\n            this._$element.removeClass(className.match(scrollableNativeRegexp).join(\" \"))\r\n        }\r\n        eventsEngine.off(this._$element, `.${SCROLLABLE_NATIVE}`);\r\n        eventsEngine.off(this._$container, `.${SCROLLABLE_NATIVE}`);\r\n        this._removeScrollbars();\r\n        clearTimeout(this._hideScrollbarTimeout)\r\n    }\r\n    _removeScrollbars() {\r\n        this._eachScrollbar((scrollbar => {\r\n            scrollbar.$element().remove()\r\n        }))\r\n    }\r\n    scrollBy(distance) {\r\n        const location = this.location();\r\n        this._$container.scrollTop(Math.round(-location.top - distance.top));\r\n        this._$container.scrollLeft(Math.round(-location.left - distance.left))\r\n    }\r\n    validate(e) {\r\n        const {\r\n            disabled: disabled\r\n        } = this.option();\r\n        if (disabled) {\r\n            return false\r\n        }\r\n        if (isDxMouseWheelEvent(e) && this._isScrolledInMaxDirection(e)) {\r\n            return false\r\n        }\r\n        return !!this._allowedDirection()\r\n    }\r\n    _isScrolledInMaxDirection(e) {\r\n        const container = this._$container.get(0);\r\n        let result;\r\n        if (e.delta > 0) {\r\n            result = e.shiftKey ? !container.scrollLeft : !container.scrollTop\r\n        } else if (e.shiftKey) {\r\n            result = container.scrollLeft >= this._getMaxOffset().left\r\n        } else {\r\n            result = container.scrollTop >= this._getMaxOffset().top\r\n        }\r\n        return result\r\n    }\r\n    getDirection() {\r\n        return this._allowedDirection()\r\n    }\r\n}\r\nexport default NativeStrategy;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}