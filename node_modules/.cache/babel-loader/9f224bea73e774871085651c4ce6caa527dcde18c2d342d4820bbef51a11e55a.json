{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/core/options/m_utils.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport devices from \"../../../core/devices\";\nimport { findBestMatches } from \"../../../core/utils/common\";\nimport { compileGetter } from \"../../../core/utils/data\";\nimport { extend } from \"../../../core/utils/extend\";\nimport { isEmptyObject, isFunction } from \"../../../core/utils/type\";\nconst cachedGetters = {};\nexport const convertRulesToOptions = rules => {\n  const currentDevice = devices.current();\n  return rules.reduce((options, _ref) => {\n    let {\n      device: device,\n      options: ruleOptions\n    } = _ref;\n    const deviceFilter = device || {};\n    const match = isFunction(deviceFilter) ? deviceFilter(currentDevice) : deviceMatch(currentDevice, deviceFilter);\n    if (match) {\n      extend(true, options, ruleOptions);\n    }\n    return options;\n  }, {});\n};\nexport const normalizeOptions = (options, value) => \"string\" !== typeof options ? options : {\n  [options]: value\n};\nexport const deviceMatch = (device, filter) => isEmptyObject(filter) || findBestMatches(device, [filter]).length > 0;\nexport const getFieldName = fullName => fullName.substr(fullName.lastIndexOf(\".\") + 1);\nexport const getParentName = fullName => fullName.substr(0, fullName.lastIndexOf(\".\"));\nexport const getNestedOptionValue = function (optionsObject, name) {\n  cachedGetters[name] = cachedGetters[name] || compileGetter(name);\n  return cachedGetters[name](optionsObject, {\n    functionsAsIs: true\n  });\n};\nexport const createDefaultOptionRules = function () {\n  let options = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];\n  return options;\n};","map":{"version":3,"names":["devices","findBestMatches","compileGetter","extend","isEmptyObject","isFunction","cachedGetters","convertRulesToOptions","rules","currentDevice","current","reduce","options","_ref","device","ruleOptions","deviceFilter","match","deviceMatch","normalizeOptions","value","filter","length","getFieldName","fullName","substr","lastIndexOf","getParentName","getNestedOptionValue","optionsObject","name","functionsAsIs","createDefaultOptionRules","arguments"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/core/options/m_utils.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/core/options/m_utils.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport devices from \"../../../core/devices\";\r\nimport {\r\n    findBestMatches\r\n} from \"../../../core/utils/common\";\r\nimport {\r\n    compileGetter\r\n} from \"../../../core/utils/data\";\r\nimport {\r\n    extend\r\n} from \"../../../core/utils/extend\";\r\nimport {\r\n    isEmptyObject,\r\n    isFunction\r\n} from \"../../../core/utils/type\";\r\nconst cachedGetters = {};\r\nexport const convertRulesToOptions = rules => {\r\n    const currentDevice = devices.current();\r\n    return rules.reduce(((options, _ref) => {\r\n        let {\r\n            device: device,\r\n            options: ruleOptions\r\n        } = _ref;\r\n        const deviceFilter = device || {};\r\n        const match = isFunction(deviceFilter) ? deviceFilter(currentDevice) : deviceMatch(currentDevice, deviceFilter);\r\n        if (match) {\r\n            extend(true, options, ruleOptions)\r\n        }\r\n        return options\r\n    }), {})\r\n};\r\nexport const normalizeOptions = (options, value) => \"string\" !== typeof options ? options : {\r\n    [options]: value\r\n};\r\nexport const deviceMatch = (device, filter) => isEmptyObject(filter) || findBestMatches(device, [filter]).length > 0;\r\nexport const getFieldName = fullName => fullName.substr(fullName.lastIndexOf(\".\") + 1);\r\nexport const getParentName = fullName => fullName.substr(0, fullName.lastIndexOf(\".\"));\r\nexport const getNestedOptionValue = function(optionsObject, name) {\r\n    cachedGetters[name] = cachedGetters[name] || compileGetter(name);\r\n    return cachedGetters[name](optionsObject, {\r\n        functionsAsIs: true\r\n    })\r\n};\r\nexport const createDefaultOptionRules = function() {\r\n    let options = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];\r\n    return options\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,OAAO,MAAM,uBAAuB;AAC3C,SACIC,eAAe,QACZ,4BAA4B;AACnC,SACIC,aAAa,QACV,0BAA0B;AACjC,SACIC,MAAM,QACH,4BAA4B;AACnC,SACIC,aAAa,EACbC,UAAU,QACP,0BAA0B;AACjC,MAAMC,aAAa,GAAG,CAAC,CAAC;AACxB,OAAO,MAAMC,qBAAqB,GAAGC,KAAK,IAAI;EAC1C,MAAMC,aAAa,GAAGT,OAAO,CAACU,OAAO,CAAC,CAAC;EACvC,OAAOF,KAAK,CAACG,MAAM,CAAE,CAACC,OAAO,EAAEC,IAAI,KAAK;IACpC,IAAI;MACAC,MAAM,EAAEA,MAAM;MACdF,OAAO,EAAEG;IACb,CAAC,GAAGF,IAAI;IACR,MAAMG,YAAY,GAAGF,MAAM,IAAI,CAAC,CAAC;IACjC,MAAMG,KAAK,GAAGZ,UAAU,CAACW,YAAY,CAAC,GAAGA,YAAY,CAACP,aAAa,CAAC,GAAGS,WAAW,CAACT,aAAa,EAAEO,YAAY,CAAC;IAC/G,IAAIC,KAAK,EAAE;MACPd,MAAM,CAAC,IAAI,EAAES,OAAO,EAAEG,WAAW,CAAC;IACtC;IACA,OAAOH,OAAO;EAClB,CAAC,EAAG,CAAC,CAAC,CAAC;AACX,CAAC;AACD,OAAO,MAAMO,gBAAgB,GAAGA,CAACP,OAAO,EAAEQ,KAAK,KAAK,QAAQ,KAAK,OAAOR,OAAO,GAAGA,OAAO,GAAG;EACxF,CAACA,OAAO,GAAGQ;AACf,CAAC;AACD,OAAO,MAAMF,WAAW,GAAGA,CAACJ,MAAM,EAAEO,MAAM,KAAKjB,aAAa,CAACiB,MAAM,CAAC,IAAIpB,eAAe,CAACa,MAAM,EAAE,CAACO,MAAM,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC;AACpH,OAAO,MAAMC,YAAY,GAAGC,QAAQ,IAAIA,QAAQ,CAACC,MAAM,CAACD,QAAQ,CAACE,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACtF,OAAO,MAAMC,aAAa,GAAGH,QAAQ,IAAIA,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAED,QAAQ,CAACE,WAAW,CAAC,GAAG,CAAC,CAAC;AACtF,OAAO,MAAME,oBAAoB,GAAG,SAAAA,CAASC,aAAa,EAAEC,IAAI,EAAE;EAC9DxB,aAAa,CAACwB,IAAI,CAAC,GAAGxB,aAAa,CAACwB,IAAI,CAAC,IAAI5B,aAAa,CAAC4B,IAAI,CAAC;EAChE,OAAOxB,aAAa,CAACwB,IAAI,CAAC,CAACD,aAAa,EAAE;IACtCE,aAAa,EAAE;EACnB,CAAC,CAAC;AACN,CAAC;AACD,OAAO,MAAMC,wBAAwB,GAAG,SAAAA,CAAA,EAAW;EAC/C,IAAIpB,OAAO,GAAGqB,SAAS,CAACX,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,KAAKW,SAAS,CAAC,CAAC,CAAC,GAAGA,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE;EACjF,OAAOrB,OAAO;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}