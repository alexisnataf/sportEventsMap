{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/ui/text_box/m_text_box.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { normalizeKeyName } from \"../../../common/core/events/utils/index\";\nimport registerComponent from \"../../../core/component_registrator\";\nimport $ from \"../../../core/renderer\";\nimport { getOuterWidth, getWidth } from \"../../../core/utils/size\";\nimport { getWindow } from \"../../../core/utils/window\";\nimport TextEditor from \"../../ui/text_box/m_text_editor.mask\";\nconst window = getWindow();\nconst ignoreKeys = [\"backspace\", \"tab\", \"enter\", \"pageUp\", \"pageDown\", \"end\", \"home\", \"leftArrow\", \"rightArrow\", \"downArrow\", \"upArrow\", \"del\"];\nconst TEXTBOX_CLASS = \"dx-textbox\";\nconst SEARCHBOX_CLASS = \"dx-searchbox\";\nconst ICON_CLASS = \"dx-icon\";\nconst SEARCH_ICON_CLASS = \"dx-icon-search\";\nclass TextBox extends TextEditor {\n  ctor(element, options) {\n    if (options) {\n      this._showClearButton = options.showClearButton;\n    }\n    super.ctor(element, options);\n  }\n  _getDefaultOptions() {\n    return _extends({}, super._getDefaultOptions(), {\n      value: \"\",\n      mode: \"text\",\n      maxLength: null\n    });\n  }\n  _initMarkup() {\n    this.$element().addClass(\"dx-textbox\");\n    super._initMarkup();\n    this.setAria(\"role\", \"textbox\");\n  }\n  _renderInputType() {\n    super._renderInputType();\n    this._renderSearchMode();\n  }\n  _useTemplates() {\n    return false;\n  }\n  _renderProps() {\n    super._renderProps();\n    this._toggleMaxLengthProp();\n  }\n  _toggleMaxLengthProp() {\n    const maxLength = this._getMaxLength();\n    if (maxLength && maxLength > 0) {\n      this._input().attr(\"maxLength\", maxLength);\n    } else {\n      this._input().removeAttr(\"maxLength\");\n    }\n  }\n  _renderSearchMode() {\n    const {\n      mode: mode\n    } = this.option();\n    if (\"search\" === mode) {\n      this.$element().addClass(\"dx-searchbox\");\n      this._renderSearchIcon();\n      if (void 0 === this._showClearButton) {\n        const {\n          showClearButton: showClearButton\n        } = this.option();\n        this._showClearButton = showClearButton;\n        this.option(\"showClearButton\", true);\n      }\n    } else {\n      this.$element().removeClass(\"dx-searchbox\");\n      if (this._$searchIcon) {\n        this._$searchIcon.remove();\n      }\n      this.option(\"showClearButton\", void 0 === this._showClearButton ? this.option(\"showClearButton\") : this._showClearButton);\n      delete this._showClearButton;\n    }\n  }\n  _renderSearchIcon() {\n    const $searchIcon = $(\"<div>\").addClass(\"dx-icon\").addClass(\"dx-icon-search\");\n    $searchIcon.prependTo(this._input().parent());\n    this._$searchIcon = $searchIcon;\n  }\n  _getLabelContainerWidth() {\n    if (this._$searchIcon) {\n      const $inputContainer = this._input().parent();\n      return getWidth($inputContainer) - this._getLabelBeforeWidth();\n    }\n    return super._getLabelContainerWidth();\n  }\n  _getLabelBeforeWidth() {\n    let labelBeforeWidth = super._getLabelBeforeWidth();\n    if (this._$searchIcon) {\n      labelBeforeWidth += getOuterWidth(this._$searchIcon);\n    }\n    return labelBeforeWidth;\n  }\n  _optionChanged(args) {\n    switch (args.name) {\n      case \"maxLength\":\n        this._toggleMaxLengthProp();\n        break;\n      case \"mode\":\n        super._optionChanged(args);\n        this._updateLabelWidth();\n        break;\n      case \"mask\":\n        super._optionChanged(args);\n        this._toggleMaxLengthProp();\n        break;\n      default:\n        super._optionChanged(args);\n    }\n  }\n  _onKeyDownCutOffHandler(e) {\n    const actualMaxLength = this._getMaxLength();\n    if (actualMaxLength && !e.ctrlKey && !this._hasSelection()) {\n      const $input = $(e.target);\n      const key = normalizeKeyName(e);\n      this._cutOffExtraChar($input);\n      return $input.val().length < actualMaxLength || ignoreKeys.includes(key) || \"\" !== window.getSelection().toString();\n    }\n    return true;\n  }\n  _onChangeCutOffHandler(e) {\n    const $input = $(e.target);\n    if (this.option(\"maxLength\")) {\n      this._cutOffExtraChar($input);\n    }\n  }\n  _cutOffExtraChar($input) {\n    const actualMaxLength = this._getMaxLength();\n    const textInput = $input.val();\n    if (actualMaxLength && textInput.length > actualMaxLength) {\n      $input.val(textInput.substr(0, actualMaxLength));\n    }\n  }\n  _getMaxLength() {\n    const {\n      mask: mask,\n      maxLength: maxLength\n    } = this.option();\n    const isMaskSpecified = !!mask;\n    return isMaskSpecified ? null : maxLength;\n  }\n}\nregisterComponent(\"dxTextBox\", TextBox);\nexport default TextBox;","map":{"version":3,"names":["_extends","normalizeKeyName","registerComponent","$","getOuterWidth","getWidth","getWindow","TextEditor","window","ignoreKeys","TEXTBOX_CLASS","SEARCHBOX_CLASS","ICON_CLASS","SEARCH_ICON_CLASS","TextBox","ctor","element","options","_showClearButton","showClearButton","_getDefaultOptions","value","mode","maxLength","_initMarkup","$element","addClass","setAria","_renderInputType","_renderSearchMode","_useTemplates","_renderProps","_toggleMaxLengthProp","_getMaxLength","_input","attr","removeAttr","option","_renderSearchIcon","removeClass","_$searchIcon","remove","$searchIcon","prependTo","parent","_getLabelContainerWidth","$inputContainer","_getLabelBeforeWidth","labelBeforeWidth","_optionChanged","args","name","_updateLabelWidth","_onKeyDownCutOffHandler","e","actualMaxLength","ctrlKey","_hasSelection","$input","target","key","_cutOffExtraChar","val","length","includes","getSelection","toString","_onChangeCutOffHandler","textInput","substr","mask","isMaskSpecified"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/ui/text_box/m_text_box.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/ui/text_box/m_text_box.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    normalizeKeyName\r\n} from \"../../../common/core/events/utils/index\";\r\nimport registerComponent from \"../../../core/component_registrator\";\r\nimport $ from \"../../../core/renderer\";\r\nimport {\r\n    getOuterWidth,\r\n    getWidth\r\n} from \"../../../core/utils/size\";\r\nimport {\r\n    getWindow\r\n} from \"../../../core/utils/window\";\r\nimport TextEditor from \"../../ui/text_box/m_text_editor.mask\";\r\nconst window = getWindow();\r\nconst ignoreKeys = [\"backspace\", \"tab\", \"enter\", \"pageUp\", \"pageDown\", \"end\", \"home\", \"leftArrow\", \"rightArrow\", \"downArrow\", \"upArrow\", \"del\"];\r\nconst TEXTBOX_CLASS = \"dx-textbox\";\r\nconst SEARCHBOX_CLASS = \"dx-searchbox\";\r\nconst ICON_CLASS = \"dx-icon\";\r\nconst SEARCH_ICON_CLASS = \"dx-icon-search\";\r\nclass TextBox extends TextEditor {\r\n    ctor(element, options) {\r\n        if (options) {\r\n            this._showClearButton = options.showClearButton\r\n        }\r\n        super.ctor(element, options)\r\n    }\r\n    _getDefaultOptions() {\r\n        return _extends({}, super._getDefaultOptions(), {\r\n            value: \"\",\r\n            mode: \"text\",\r\n            maxLength: null\r\n        })\r\n    }\r\n    _initMarkup() {\r\n        this.$element().addClass(\"dx-textbox\");\r\n        super._initMarkup();\r\n        this.setAria(\"role\", \"textbox\")\r\n    }\r\n    _renderInputType() {\r\n        super._renderInputType();\r\n        this._renderSearchMode()\r\n    }\r\n    _useTemplates() {\r\n        return false\r\n    }\r\n    _renderProps() {\r\n        super._renderProps();\r\n        this._toggleMaxLengthProp()\r\n    }\r\n    _toggleMaxLengthProp() {\r\n        const maxLength = this._getMaxLength();\r\n        if (maxLength && maxLength > 0) {\r\n            this._input().attr(\"maxLength\", maxLength)\r\n        } else {\r\n            this._input().removeAttr(\"maxLength\")\r\n        }\r\n    }\r\n    _renderSearchMode() {\r\n        const {\r\n            mode: mode\r\n        } = this.option();\r\n        if (\"search\" === mode) {\r\n            this.$element().addClass(\"dx-searchbox\");\r\n            this._renderSearchIcon();\r\n            if (void 0 === this._showClearButton) {\r\n                const {\r\n                    showClearButton: showClearButton\r\n                } = this.option();\r\n                this._showClearButton = showClearButton;\r\n                this.option(\"showClearButton\", true)\r\n            }\r\n        } else {\r\n            this.$element().removeClass(\"dx-searchbox\");\r\n            if (this._$searchIcon) {\r\n                this._$searchIcon.remove()\r\n            }\r\n            this.option(\"showClearButton\", void 0 === this._showClearButton ? this.option(\"showClearButton\") : this._showClearButton);\r\n            delete this._showClearButton\r\n        }\r\n    }\r\n    _renderSearchIcon() {\r\n        const $searchIcon = $(\"<div>\").addClass(\"dx-icon\").addClass(\"dx-icon-search\");\r\n        $searchIcon.prependTo(this._input().parent());\r\n        this._$searchIcon = $searchIcon\r\n    }\r\n    _getLabelContainerWidth() {\r\n        if (this._$searchIcon) {\r\n            const $inputContainer = this._input().parent();\r\n            return getWidth($inputContainer) - this._getLabelBeforeWidth()\r\n        }\r\n        return super._getLabelContainerWidth()\r\n    }\r\n    _getLabelBeforeWidth() {\r\n        let labelBeforeWidth = super._getLabelBeforeWidth();\r\n        if (this._$searchIcon) {\r\n            labelBeforeWidth += getOuterWidth(this._$searchIcon)\r\n        }\r\n        return labelBeforeWidth\r\n    }\r\n    _optionChanged(args) {\r\n        switch (args.name) {\r\n            case \"maxLength\":\r\n                this._toggleMaxLengthProp();\r\n                break;\r\n            case \"mode\":\r\n                super._optionChanged(args);\r\n                this._updateLabelWidth();\r\n                break;\r\n            case \"mask\":\r\n                super._optionChanged(args);\r\n                this._toggleMaxLengthProp();\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    _onKeyDownCutOffHandler(e) {\r\n        const actualMaxLength = this._getMaxLength();\r\n        if (actualMaxLength && !e.ctrlKey && !this._hasSelection()) {\r\n            const $input = $(e.target);\r\n            const key = normalizeKeyName(e);\r\n            this._cutOffExtraChar($input);\r\n            return $input.val().length < actualMaxLength || ignoreKeys.includes(key) || \"\" !== window.getSelection().toString()\r\n        }\r\n        return true\r\n    }\r\n    _onChangeCutOffHandler(e) {\r\n        const $input = $(e.target);\r\n        if (this.option(\"maxLength\")) {\r\n            this._cutOffExtraChar($input)\r\n        }\r\n    }\r\n    _cutOffExtraChar($input) {\r\n        const actualMaxLength = this._getMaxLength();\r\n        const textInput = $input.val();\r\n        if (actualMaxLength && textInput.length > actualMaxLength) {\r\n            $input.val(textInput.substr(0, actualMaxLength))\r\n        }\r\n    }\r\n    _getMaxLength() {\r\n        const {\r\n            mask: mask,\r\n            maxLength: maxLength\r\n        } = this.option();\r\n        const isMaskSpecified = !!mask;\r\n        return isMaskSpecified ? null : maxLength\r\n    }\r\n}\r\nregisterComponent(\"dxTextBox\", TextBox);\r\nexport default TextBox;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,SACIC,gBAAgB,QACb,yCAAyC;AAChD,OAAOC,iBAAiB,MAAM,qCAAqC;AACnE,OAAOC,CAAC,MAAM,wBAAwB;AACtC,SACIC,aAAa,EACbC,QAAQ,QACL,0BAA0B;AACjC,SACIC,SAAS,QACN,4BAA4B;AACnC,OAAOC,UAAU,MAAM,sCAAsC;AAC7D,MAAMC,MAAM,GAAGF,SAAS,CAAC,CAAC;AAC1B,MAAMG,UAAU,GAAG,CAAC,WAAW,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,KAAK,EAAE,MAAM,EAAE,WAAW,EAAE,YAAY,EAAE,WAAW,EAAE,SAAS,EAAE,KAAK,CAAC;AAC/I,MAAMC,aAAa,GAAG,YAAY;AAClC,MAAMC,eAAe,GAAG,cAAc;AACtC,MAAMC,UAAU,GAAG,SAAS;AAC5B,MAAMC,iBAAiB,GAAG,gBAAgB;AAC1C,MAAMC,OAAO,SAASP,UAAU,CAAC;EAC7BQ,IAAIA,CAACC,OAAO,EAAEC,OAAO,EAAE;IACnB,IAAIA,OAAO,EAAE;MACT,IAAI,CAACC,gBAAgB,GAAGD,OAAO,CAACE,eAAe;IACnD;IACA,KAAK,CAACJ,IAAI,CAACC,OAAO,EAAEC,OAAO,CAAC;EAChC;EACAG,kBAAkBA,CAAA,EAAG;IACjB,OAAOpB,QAAQ,CAAC,CAAC,CAAC,EAAE,KAAK,CAACoB,kBAAkB,CAAC,CAAC,EAAE;MAC5CC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,MAAM;MACZC,SAAS,EAAE;IACf,CAAC,CAAC;EACN;EACAC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,YAAY,CAAC;IACtC,KAAK,CAACF,WAAW,CAAC,CAAC;IACnB,IAAI,CAACG,OAAO,CAAC,MAAM,EAAE,SAAS,CAAC;EACnC;EACAC,gBAAgBA,CAAA,EAAG;IACf,KAAK,CAACA,gBAAgB,CAAC,CAAC;IACxB,IAAI,CAACC,iBAAiB,CAAC,CAAC;EAC5B;EACAC,aAAaA,CAAA,EAAG;IACZ,OAAO,KAAK;EAChB;EACAC,YAAYA,CAAA,EAAG;IACX,KAAK,CAACA,YAAY,CAAC,CAAC;IACpB,IAAI,CAACC,oBAAoB,CAAC,CAAC;EAC/B;EACAA,oBAAoBA,CAAA,EAAG;IACnB,MAAMT,SAAS,GAAG,IAAI,CAACU,aAAa,CAAC,CAAC;IACtC,IAAIV,SAAS,IAAIA,SAAS,GAAG,CAAC,EAAE;MAC5B,IAAI,CAACW,MAAM,CAAC,CAAC,CAACC,IAAI,CAAC,WAAW,EAAEZ,SAAS,CAAC;IAC9C,CAAC,MAAM;MACH,IAAI,CAACW,MAAM,CAAC,CAAC,CAACE,UAAU,CAAC,WAAW,CAAC;IACzC;EACJ;EACAP,iBAAiBA,CAAA,EAAG;IAChB,MAAM;MACFP,IAAI,EAAEA;IACV,CAAC,GAAG,IAAI,CAACe,MAAM,CAAC,CAAC;IACjB,IAAI,QAAQ,KAAKf,IAAI,EAAE;MACnB,IAAI,CAACG,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,cAAc,CAAC;MACxC,IAAI,CAACY,iBAAiB,CAAC,CAAC;MACxB,IAAI,KAAK,CAAC,KAAK,IAAI,CAACpB,gBAAgB,EAAE;QAClC,MAAM;UACFC,eAAe,EAAEA;QACrB,CAAC,GAAG,IAAI,CAACkB,MAAM,CAAC,CAAC;QACjB,IAAI,CAACnB,gBAAgB,GAAGC,eAAe;QACvC,IAAI,CAACkB,MAAM,CAAC,iBAAiB,EAAE,IAAI,CAAC;MACxC;IACJ,CAAC,MAAM;MACH,IAAI,CAACZ,QAAQ,CAAC,CAAC,CAACc,WAAW,CAAC,cAAc,CAAC;MAC3C,IAAI,IAAI,CAACC,YAAY,EAAE;QACnB,IAAI,CAACA,YAAY,CAACC,MAAM,CAAC,CAAC;MAC9B;MACA,IAAI,CAACJ,MAAM,CAAC,iBAAiB,EAAE,KAAK,CAAC,KAAK,IAAI,CAACnB,gBAAgB,GAAG,IAAI,CAACmB,MAAM,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAACnB,gBAAgB,CAAC;MACzH,OAAO,IAAI,CAACA,gBAAgB;IAChC;EACJ;EACAoB,iBAAiBA,CAAA,EAAG;IAChB,MAAMI,WAAW,GAAGvC,CAAC,CAAC,OAAO,CAAC,CAACuB,QAAQ,CAAC,SAAS,CAAC,CAACA,QAAQ,CAAC,gBAAgB,CAAC;IAC7EgB,WAAW,CAACC,SAAS,CAAC,IAAI,CAACT,MAAM,CAAC,CAAC,CAACU,MAAM,CAAC,CAAC,CAAC;IAC7C,IAAI,CAACJ,YAAY,GAAGE,WAAW;EACnC;EACAG,uBAAuBA,CAAA,EAAG;IACtB,IAAI,IAAI,CAACL,YAAY,EAAE;MACnB,MAAMM,eAAe,GAAG,IAAI,CAACZ,MAAM,CAAC,CAAC,CAACU,MAAM,CAAC,CAAC;MAC9C,OAAOvC,QAAQ,CAACyC,eAAe,CAAC,GAAG,IAAI,CAACC,oBAAoB,CAAC,CAAC;IAClE;IACA,OAAO,KAAK,CAACF,uBAAuB,CAAC,CAAC;EAC1C;EACAE,oBAAoBA,CAAA,EAAG;IACnB,IAAIC,gBAAgB,GAAG,KAAK,CAACD,oBAAoB,CAAC,CAAC;IACnD,IAAI,IAAI,CAACP,YAAY,EAAE;MACnBQ,gBAAgB,IAAI5C,aAAa,CAAC,IAAI,CAACoC,YAAY,CAAC;IACxD;IACA,OAAOQ,gBAAgB;EAC3B;EACAC,cAAcA,CAACC,IAAI,EAAE;IACjB,QAAQA,IAAI,CAACC,IAAI;MACb,KAAK,WAAW;QACZ,IAAI,CAACnB,oBAAoB,CAAC,CAAC;QAC3B;MACJ,KAAK,MAAM;QACP,KAAK,CAACiB,cAAc,CAACC,IAAI,CAAC;QAC1B,IAAI,CAACE,iBAAiB,CAAC,CAAC;QACxB;MACJ,KAAK,MAAM;QACP,KAAK,CAACH,cAAc,CAACC,IAAI,CAAC;QAC1B,IAAI,CAAClB,oBAAoB,CAAC,CAAC;QAC3B;MACJ;QACI,KAAK,CAACiB,cAAc,CAACC,IAAI,CAAC;IAClC;EACJ;EACAG,uBAAuBA,CAACC,CAAC,EAAE;IACvB,MAAMC,eAAe,GAAG,IAAI,CAACtB,aAAa,CAAC,CAAC;IAC5C,IAAIsB,eAAe,IAAI,CAACD,CAAC,CAACE,OAAO,IAAI,CAAC,IAAI,CAACC,aAAa,CAAC,CAAC,EAAE;MACxD,MAAMC,MAAM,GAAGvD,CAAC,CAACmD,CAAC,CAACK,MAAM,CAAC;MAC1B,MAAMC,GAAG,GAAG3D,gBAAgB,CAACqD,CAAC,CAAC;MAC/B,IAAI,CAACO,gBAAgB,CAACH,MAAM,CAAC;MAC7B,OAAOA,MAAM,CAACI,GAAG,CAAC,CAAC,CAACC,MAAM,GAAGR,eAAe,IAAI9C,UAAU,CAACuD,QAAQ,CAACJ,GAAG,CAAC,IAAI,EAAE,KAAKpD,MAAM,CAACyD,YAAY,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;IACvH;IACA,OAAO,IAAI;EACf;EACAC,sBAAsBA,CAACb,CAAC,EAAE;IACtB,MAAMI,MAAM,GAAGvD,CAAC,CAACmD,CAAC,CAACK,MAAM,CAAC;IAC1B,IAAI,IAAI,CAACtB,MAAM,CAAC,WAAW,CAAC,EAAE;MAC1B,IAAI,CAACwB,gBAAgB,CAACH,MAAM,CAAC;IACjC;EACJ;EACAG,gBAAgBA,CAACH,MAAM,EAAE;IACrB,MAAMH,eAAe,GAAG,IAAI,CAACtB,aAAa,CAAC,CAAC;IAC5C,MAAMmC,SAAS,GAAGV,MAAM,CAACI,GAAG,CAAC,CAAC;IAC9B,IAAIP,eAAe,IAAIa,SAAS,CAACL,MAAM,GAAGR,eAAe,EAAE;MACvDG,MAAM,CAACI,GAAG,CAACM,SAAS,CAACC,MAAM,CAAC,CAAC,EAAEd,eAAe,CAAC,CAAC;IACpD;EACJ;EACAtB,aAAaA,CAAA,EAAG;IACZ,MAAM;MACFqC,IAAI,EAAEA,IAAI;MACV/C,SAAS,EAAEA;IACf,CAAC,GAAG,IAAI,CAACc,MAAM,CAAC,CAAC;IACjB,MAAMkC,eAAe,GAAG,CAAC,CAACD,IAAI;IAC9B,OAAOC,eAAe,GAAG,IAAI,GAAGhD,SAAS;EAC7C;AACJ;AACArB,iBAAiB,CAAC,WAAW,EAAEY,OAAO,CAAC;AACvC,eAAeA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}