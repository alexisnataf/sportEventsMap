{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/core/widget/dom_component.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { resize as resizeEvent, visibility as visibilityEvents } from \"../../../common/core/events/short\";\nimport config from \"../../../core/config\";\nimport { getPublicElement } from \"../../../core/element\";\nimport { cleanDataRecursive } from \"../../../core/element_data\";\nimport errors from \"../../../core/errors\";\nimport $ from \"../../../core/renderer\";\nimport { grep, noop } from \"../../../core/utils/common\";\nimport { extend } from \"../../../core/utils/extend\";\nimport { each } from \"../../../core/utils/iterator\";\nimport { attachInstanceToElement, getInstanceByElement } from \"../../../core/utils/public_component\";\nimport windowResizeCallbacks from \"../../../core/utils/resize_callbacks\";\nimport { addShadowDomStyles } from \"../../../core/utils/shadow_dom\";\nimport { isDefined, isFunction, isString } from \"../../../core/utils/type\";\nimport { hasWindow } from \"../../../core/utils/window\";\nimport license, { peekValidationPerformed } from \"../../core/license/license_validation\";\nimport TemplateManagerModule from \"../../core/m_template_manager\";\nimport { uiLayerInitialized } from \"../../core/utils/m_common\";\nimport { Component } from \"./component\";\nclass DOMComponent extends Component {\n  static getInstance(element) {\n    return getInstanceByElement($(element), this);\n  }\n  static defaultOptions(rule) {\n    this._classCustomRules = Object.hasOwnProperty.bind(this)(\"_classCustomRules\") && this._classCustomRules ? this._classCustomRules : [];\n    this._classCustomRules.push(rule);\n  }\n  _getDefaultOptions() {\n    return extend(super._getDefaultOptions(), {\n      width: void 0,\n      height: void 0,\n      rtlEnabled: config().rtlEnabled,\n      elementAttr: {},\n      disabled: false,\n      integrationOptions: {}\n    }, this._useTemplates() ? TemplateManagerModule.TemplateManager.createDefaultOptions() : {});\n  }\n  ctor(element, options) {\n    this._customClass = null;\n    this._createElement(element);\n    attachInstanceToElement(this._$element, this, this._dispose);\n    super.ctor(options);\n    const validationAlreadyPerformed = peekValidationPerformed();\n    license.validateLicense(config().licenseKey);\n    if (!validationAlreadyPerformed && peekValidationPerformed()) {\n      config({\n        licenseKey: \"\"\n      });\n    }\n    uiLayerInitialized.resolve();\n  }\n  _createElement(element) {\n    this._$element = $(element);\n  }\n  _getSynchronizableOptionsForCreateComponent() {\n    return [\"rtlEnabled\", \"disabled\", \"templatesRenderAsynchronously\"];\n  }\n  _checkFunctionValueDeprecation(optionNames) {\n    if (!this.option(\"_ignoreFunctionValueDeprecation\")) {\n      optionNames.forEach(optionName => {\n        if (isFunction(this.option(optionName))) {\n          errors.log(\"W0017\", optionName);\n        }\n      });\n    }\n  }\n  _visibilityChanged(value) {}\n  _dimensionChanged() {}\n  _init() {\n    super._init();\n    this._checkFunctionValueDeprecation([\"width\", \"height\", \"maxHeight\", \"maxWidth\", \"minHeight\", \"minWidth\", \"popupHeight\", \"popupWidth\"]);\n    this._attachWindowResizeCallback();\n    this._initTemplateManager();\n  }\n  _setOptionsByDevice(instanceCustomRules) {\n    super._setOptionsByDevice([].concat(this.constructor._classCustomRules || [], instanceCustomRules || []));\n  }\n  _isInitialOptionValue(name) {\n    const isCustomOption = this.constructor._classCustomRules && Object.prototype.hasOwnProperty.call(this._convertRulesToOptions(this.constructor._classCustomRules), name);\n    return !isCustomOption && super._isInitialOptionValue(name);\n  }\n  _attachWindowResizeCallback() {\n    if (this._isDimensionChangeSupported()) {\n      const windowResizeCallBack = this._windowResizeCallBack = this._dimensionChanged.bind(this);\n      windowResizeCallbacks.add(windowResizeCallBack);\n    }\n  }\n  _isDimensionChangeSupported() {\n    return this._dimensionChanged !== DOMComponent.prototype._dimensionChanged;\n  }\n  _renderComponent() {\n    addShadowDomStyles(this.$element());\n    this._initMarkup();\n    hasWindow() && this._render();\n  }\n  _initMarkup() {\n    const {\n      rtlEnabled: rtlEnabled\n    } = this.option() || {};\n    this._renderElementAttributes();\n    this._toggleRTLDirection(rtlEnabled);\n    this._renderVisibilityChange();\n    this._renderDimensions();\n  }\n  _render() {\n    this._attachVisibilityChangeHandlers();\n  }\n  _renderElementAttributes() {\n    const {\n      elementAttr: elementAttr\n    } = this.option() || {};\n    const attributes = extend({}, elementAttr);\n    const classNames = attributes.class;\n    delete attributes.class;\n    this.$element().attr(attributes).removeClass(this._customClass).addClass(classNames);\n    this._customClass = classNames;\n  }\n  _renderVisibilityChange() {\n    if (this._isDimensionChangeSupported()) {\n      this._attachDimensionChangeHandlers();\n    }\n    if (this._isVisibilityChangeSupported()) {\n      const $element = this.$element();\n      $element.addClass(\"dx-visibility-change-handler\");\n    }\n  }\n  _renderDimensions() {\n    const $element = this.$element();\n    const element = $element.get(0);\n    const width = this._getOptionValue(\"width\", element);\n    const height = this._getOptionValue(\"height\", element);\n    if (this._isCssUpdateRequired(element, height, width)) {\n      $element.css({\n        width: null === width ? \"\" : width,\n        height: null === height ? \"\" : height\n      });\n    }\n  }\n  _isCssUpdateRequired(element, height, width) {\n    return !!(isDefined(width) || isDefined(height) || element.style.width || element.style.height);\n  }\n  _attachDimensionChangeHandlers() {\n    const $el = this.$element();\n    const namespace = `${this.NAME}VisibilityChange`;\n    resizeEvent.off($el, {\n      namespace: namespace\n    });\n    resizeEvent.on($el, () => this._dimensionChanged(), {\n      namespace: namespace\n    });\n  }\n  _attachVisibilityChangeHandlers() {\n    if (this._isVisibilityChangeSupported()) {\n      const $el = this.$element();\n      const namespace = `${this.NAME}VisibilityChange`;\n      this._isHidden = !this._isVisible();\n      visibilityEvents.off($el, {\n        namespace: namespace\n      });\n      visibilityEvents.on($el, () => this._checkVisibilityChanged(\"shown\"), () => this._checkVisibilityChanged(\"hiding\"), {\n        namespace: namespace\n      });\n    }\n  }\n  _isVisible() {\n    const $element = this.$element();\n    return $element.is(\":visible\");\n  }\n  _checkVisibilityChanged(action) {\n    const isVisible = this._isVisible();\n    if (isVisible) {\n      if (\"hiding\" === action && !this._isHidden) {\n        this._visibilityChanged(false);\n        this._isHidden = true;\n      } else if (\"shown\" === action && this._isHidden) {\n        this._isHidden = false;\n        this._visibilityChanged(true);\n      }\n    }\n  }\n  _isVisibilityChangeSupported() {\n    return this._visibilityChanged !== DOMComponent.prototype._visibilityChanged && hasWindow();\n  }\n  _clean() {}\n  _modelByElement(element) {\n    const {\n      modelByElement: modelByElement\n    } = this.option();\n    const $element = this.$element();\n    return modelByElement ? modelByElement($element) : void 0;\n  }\n  _invalidate() {\n    if (this._isUpdateAllowed()) {\n      throw errors.Error(\"E0007\");\n    }\n    this._requireRefresh = true;\n  }\n  _refresh() {\n    this._clean();\n    this._renderComponent();\n  }\n  _dispose() {\n    this._templateManager && this._templateManager.dispose();\n    super._dispose();\n    this._clean();\n    this._detachWindowResizeCallback();\n  }\n  _detachWindowResizeCallback() {\n    if (this._isDimensionChangeSupported()) {\n      windowResizeCallbacks.remove(this._windowResizeCallBack);\n    }\n  }\n  _toggleRTLDirection(rtl) {\n    const $element = this.$element();\n    $element.toggleClass(\"dx-rtl\", rtl);\n  }\n  _createComponent(element, component, componentConfiguration) {\n    const configuration = componentConfiguration ?? {};\n    const synchronizableOptions = grep(this._getSynchronizableOptionsForCreateComponent(), value => !(value in configuration));\n    const {\n      integrationOptions: integrationOptions\n    } = this.option();\n    let {\n      nestedComponentOptions: nestedComponentOptions\n    } = this.option();\n    nestedComponentOptions = nestedComponentOptions ?? noop;\n    const nestedComponentConfig = extend({\n      integrationOptions: integrationOptions\n    }, nestedComponentOptions(this));\n    synchronizableOptions.forEach(optionName => nestedComponentConfig[optionName] = this.option(optionName));\n    this._extendConfig(configuration, nestedComponentConfig);\n    let instance;\n    if (isString(component)) {\n      const $element = $(element)[component](configuration);\n      instance = $element[component](\"instance\");\n    } else if (element) {\n      instance = component.getInstance(element);\n      if (instance) {\n        instance.option(configuration);\n      } else {\n        instance = new component(element, configuration);\n      }\n    }\n    if (instance) {\n      const optionChangedHandler = _ref => {\n        let {\n          name: name,\n          value: value\n        } = _ref;\n        if (synchronizableOptions.includes(name)) {\n          instance.option(name, value);\n        }\n      };\n      this.on(\"optionChanged\", optionChangedHandler);\n      instance.on(\"disposing\", () => this.off(\"optionChanged\", optionChangedHandler));\n    }\n    return instance;\n  }\n  _extendConfig(configuration, extendConfig) {\n    each(extendConfig, (key, value) => {\n      !Object.prototype.hasOwnProperty.call(configuration, key) && (configuration[key] = value);\n    });\n  }\n  _defaultActionConfig() {\n    const $element = this.$element();\n    const context = this._modelByElement($element);\n    return extend(super._defaultActionConfig(), {\n      context: context\n    });\n  }\n  _defaultActionArgs() {\n    const $element = this.$element();\n    const model = this._modelByElement($element);\n    const element = this.element();\n    return extend(super._defaultActionArgs(), {\n      element: element,\n      model: model\n    });\n  }\n  _optionChanged(args) {\n    const {\n      name: name\n    } = args;\n    switch (name) {\n      case \"width\":\n      case \"height\":\n        this._renderDimensions();\n        break;\n      case \"rtlEnabled\":\n        this._invalidate();\n        break;\n      case \"elementAttr\":\n        this._renderElementAttributes();\n        break;\n      case \"disabled\":\n      case \"integrationOptions\":\n        break;\n      default:\n        super._optionChanged(args);\n    }\n  }\n  _removeAttributes(element) {\n    const attrs = element.attributes;\n    for (let i = attrs.length - 1; i >= 0; i--) {\n      const attr = attrs[i];\n      if (attr) {\n        const {\n          name: name\n        } = attr;\n        if (!name.indexOf(\"aria-\") || -1 !== name.indexOf(\"dx-\") || \"role\" === name || \"style\" === name || \"tabindex\" === name) {\n          element.removeAttribute(name);\n        }\n      }\n    }\n  }\n  _removeClasses(element) {\n    element.className = element.className.split(\" \").filter(cssClass => 0 !== cssClass.lastIndexOf(\"dx-\", 0)).join(\" \");\n  }\n  _updateDOMComponent(renderRequired) {\n    if (renderRequired) {\n      this._renderComponent();\n    } else if (this._requireRefresh) {\n      this._requireRefresh = false;\n      this._refresh();\n    }\n  }\n  endUpdate() {\n    const renderRequired = this._isInitializingRequired();\n    super.endUpdate();\n    this._isUpdateAllowed() && this._updateDOMComponent(renderRequired);\n  }\n  $element() {\n    return this._$element;\n  }\n  element() {\n    const $element = this.$element();\n    return getPublicElement($element);\n  }\n  dispose() {\n    const element = this.$element().get(0);\n    cleanDataRecursive(element, true);\n    element.textContent = \"\";\n    this._removeAttributes(element);\n    this._removeClasses(element);\n  }\n  resetOption(optionName) {\n    super.resetOption(optionName);\n    if (\"width\" === optionName || \"height\" === optionName) {\n      const initialOption = this.initialOption(optionName);\n      !isDefined(initialOption) && this.$element().css(optionName, \"\");\n    }\n  }\n  _getAnonymousTemplateName() {\n    return;\n  }\n  _initTemplateManager() {\n    if (this._templateManager || !this._useTemplates()) {\n      return;\n    }\n    const {\n      integrationOptions = {}\n    } = this.option();\n    const {\n      createTemplate: createTemplate\n    } = integrationOptions;\n    this._templateManager = new TemplateManagerModule.TemplateManager(createTemplate, this._getAnonymousTemplateName());\n    this._initTemplates();\n    return;\n  }\n  _initTemplates() {\n    const {\n      templates: templates,\n      anonymousTemplateMeta: anonymousTemplateMeta\n    } = this._templateManager.extractTemplates(this.$element());\n    const anonymousTemplate = this.option(`integrationOptions.templates.${anonymousTemplateMeta.name}`);\n    templates.forEach(_ref2 => {\n      let {\n        name: name,\n        template: template\n      } = _ref2;\n      this._options.silent(`integrationOptions.templates.${name}`, template);\n    });\n    if (anonymousTemplateMeta.name && !anonymousTemplate) {\n      this._options.silent(`integrationOptions.templates.${anonymousTemplateMeta.name}`, anonymousTemplateMeta.template);\n      this._options.silent(\"_hasAnonymousTemplateContent\", true);\n    }\n  }\n  _getTemplateByOption(optionName) {\n    return this._getTemplate(this.option(optionName));\n  }\n  _getTemplate(templateSource) {\n    const templates = this.option(\"integrationOptions.templates\");\n    const isAsyncTemplate = this.option(\"templatesRenderAsynchronously\");\n    const skipTemplates = this.option(\"integrationOptions.skipTemplates\");\n    return this._templateManager.getTemplate(templateSource, templates, {\n      isAsyncTemplate: isAsyncTemplate,\n      skipTemplates: skipTemplates\n    }, this);\n  }\n  _saveTemplate(name, template) {\n    this._setOptionWithoutOptionChange(`integrationOptions.templates.${name}`, this._templateManager._createTemplate(template));\n  }\n  _useTemplates() {\n    return true;\n  }\n}\nexport default DOMComponent;","map":{"version":3,"names":["resize","resizeEvent","visibility","visibilityEvents","config","getPublicElement","cleanDataRecursive","errors","$","grep","noop","extend","each","attachInstanceToElement","getInstanceByElement","windowResizeCallbacks","addShadowDomStyles","isDefined","isFunction","isString","hasWindow","license","peekValidationPerformed","TemplateManagerModule","uiLayerInitialized","Component","DOMComponent","getInstance","element","defaultOptions","rule","_classCustomRules","Object","hasOwnProperty","bind","push","_getDefaultOptions","width","height","rtlEnabled","elementAttr","disabled","integrationOptions","_useTemplates","TemplateManager","createDefaultOptions","ctor","options","_customClass","_createElement","_$element","_dispose","validationAlreadyPerformed","validateLicense","licenseKey","resolve","_getSynchronizableOptionsForCreateComponent","_checkFunctionValueDeprecation","optionNames","option","forEach","optionName","log","_visibilityChanged","value","_dimensionChanged","_init","_attachWindowResizeCallback","_initTemplateManager","_setOptionsByDevice","instanceCustomRules","concat","constructor","_isInitialOptionValue","name","isCustomOption","prototype","call","_convertRulesToOptions","_isDimensionChangeSupported","windowResizeCallBack","_windowResizeCallBack","add","_renderComponent","$element","_initMarkup","_render","_renderElementAttributes","_toggleRTLDirection","_renderVisibilityChange","_renderDimensions","_attachVisibilityChangeHandlers","attributes","classNames","class","attr","removeClass","addClass","_attachDimensionChangeHandlers","_isVisibilityChangeSupported","get","_getOptionValue","_isCssUpdateRequired","css","style","$el","namespace","NAME","off","on","_isHidden","_isVisible","_checkVisibilityChanged","is","action","isVisible","_clean","_modelByElement","modelByElement","_invalidate","_isUpdateAllowed","Error","_requireRefresh","_refresh","_templateManager","dispose","_detachWindowResizeCallback","remove","rtl","toggleClass","_createComponent","component","componentConfiguration","configuration","synchronizableOptions","nestedComponentOptions","nestedComponentConfig","_extendConfig","instance","optionChangedHandler","_ref","includes","extendConfig","key","_defaultActionConfig","context","_defaultActionArgs","model","_optionChanged","args","_removeAttributes","attrs","i","length","indexOf","removeAttribute","_removeClasses","className","split","filter","cssClass","lastIndexOf","join","_updateDOMComponent","renderRequired","endUpdate","_isInitializingRequired","textContent","resetOption","initialOption","_getAnonymousTemplateName","createTemplate","_initTemplates","templates","anonymousTemplateMeta","extractTemplates","anonymousTemplate","_ref2","template","_options","silent","_getTemplateByOption","_getTemplate","templateSource","isAsyncTemplate","skipTemplates","getTemplate","_saveTemplate","_setOptionWithoutOptionChange","_createTemplate"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/core/widget/dom_component.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/core/widget/dom_component.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    resize as resizeEvent,\r\n    visibility as visibilityEvents\r\n} from \"../../../common/core/events/short\";\r\nimport config from \"../../../core/config\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../../core/element\";\r\nimport {\r\n    cleanDataRecursive\r\n} from \"../../../core/element_data\";\r\nimport errors from \"../../../core/errors\";\r\nimport $ from \"../../../core/renderer\";\r\nimport {\r\n    grep,\r\n    noop\r\n} from \"../../../core/utils/common\";\r\nimport {\r\n    extend\r\n} from \"../../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../../core/utils/iterator\";\r\nimport {\r\n    attachInstanceToElement,\r\n    getInstanceByElement\r\n} from \"../../../core/utils/public_component\";\r\nimport windowResizeCallbacks from \"../../../core/utils/resize_callbacks\";\r\nimport {\r\n    addShadowDomStyles\r\n} from \"../../../core/utils/shadow_dom\";\r\nimport {\r\n    isDefined,\r\n    isFunction,\r\n    isString\r\n} from \"../../../core/utils/type\";\r\nimport {\r\n    hasWindow\r\n} from \"../../../core/utils/window\";\r\nimport license, {\r\n    peekValidationPerformed\r\n} from \"../../core/license/license_validation\";\r\nimport TemplateManagerModule from \"../../core/m_template_manager\";\r\nimport {\r\n    uiLayerInitialized\r\n} from \"../../core/utils/m_common\";\r\nimport {\r\n    Component\r\n} from \"./component\";\r\nclass DOMComponent extends Component {\r\n    static getInstance(element) {\r\n        return getInstanceByElement($(element), this)\r\n    }\r\n    static defaultOptions(rule) {\r\n        this._classCustomRules = Object.hasOwnProperty.bind(this)(\"_classCustomRules\") && this._classCustomRules ? this._classCustomRules : [];\r\n        this._classCustomRules.push(rule)\r\n    }\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            width: void 0,\r\n            height: void 0,\r\n            rtlEnabled: config().rtlEnabled,\r\n            elementAttr: {},\r\n            disabled: false,\r\n            integrationOptions: {}\r\n        }, this._useTemplates() ? TemplateManagerModule.TemplateManager.createDefaultOptions() : {})\r\n    }\r\n    ctor(element, options) {\r\n        this._customClass = null;\r\n        this._createElement(element);\r\n        attachInstanceToElement(this._$element, this, this._dispose);\r\n        super.ctor(options);\r\n        const validationAlreadyPerformed = peekValidationPerformed();\r\n        license.validateLicense(config().licenseKey);\r\n        if (!validationAlreadyPerformed && peekValidationPerformed()) {\r\n            config({\r\n                licenseKey: \"\"\r\n            })\r\n        }\r\n        uiLayerInitialized.resolve()\r\n    }\r\n    _createElement(element) {\r\n        this._$element = $(element)\r\n    }\r\n    _getSynchronizableOptionsForCreateComponent() {\r\n        return [\"rtlEnabled\", \"disabled\", \"templatesRenderAsynchronously\"]\r\n    }\r\n    _checkFunctionValueDeprecation(optionNames) {\r\n        if (!this.option(\"_ignoreFunctionValueDeprecation\")) {\r\n            optionNames.forEach((optionName => {\r\n                if (isFunction(this.option(optionName))) {\r\n                    errors.log(\"W0017\", optionName)\r\n                }\r\n            }))\r\n        }\r\n    }\r\n    _visibilityChanged(value) {}\r\n    _dimensionChanged() {}\r\n    _init() {\r\n        super._init();\r\n        this._checkFunctionValueDeprecation([\"width\", \"height\", \"maxHeight\", \"maxWidth\", \"minHeight\", \"minWidth\", \"popupHeight\", \"popupWidth\"]);\r\n        this._attachWindowResizeCallback();\r\n        this._initTemplateManager()\r\n    }\r\n    _setOptionsByDevice(instanceCustomRules) {\r\n        super._setOptionsByDevice([].concat(this.constructor._classCustomRules || [], instanceCustomRules || []))\r\n    }\r\n    _isInitialOptionValue(name) {\r\n        const isCustomOption = this.constructor._classCustomRules && Object.prototype.hasOwnProperty.call(this._convertRulesToOptions(this.constructor._classCustomRules), name);\r\n        return !isCustomOption && super._isInitialOptionValue(name)\r\n    }\r\n    _attachWindowResizeCallback() {\r\n        if (this._isDimensionChangeSupported()) {\r\n            const windowResizeCallBack = this._windowResizeCallBack = this._dimensionChanged.bind(this);\r\n            windowResizeCallbacks.add(windowResizeCallBack)\r\n        }\r\n    }\r\n    _isDimensionChangeSupported() {\r\n        return this._dimensionChanged !== DOMComponent.prototype._dimensionChanged\r\n    }\r\n    _renderComponent() {\r\n        addShadowDomStyles(this.$element());\r\n        this._initMarkup();\r\n        hasWindow() && this._render()\r\n    }\r\n    _initMarkup() {\r\n        const {\r\n            rtlEnabled: rtlEnabled\r\n        } = this.option() || {};\r\n        this._renderElementAttributes();\r\n        this._toggleRTLDirection(rtlEnabled);\r\n        this._renderVisibilityChange();\r\n        this._renderDimensions()\r\n    }\r\n    _render() {\r\n        this._attachVisibilityChangeHandlers()\r\n    }\r\n    _renderElementAttributes() {\r\n        const {\r\n            elementAttr: elementAttr\r\n        } = this.option() || {};\r\n        const attributes = extend({}, elementAttr);\r\n        const classNames = attributes.class;\r\n        delete attributes.class;\r\n        this.$element().attr(attributes).removeClass(this._customClass).addClass(classNames);\r\n        this._customClass = classNames\r\n    }\r\n    _renderVisibilityChange() {\r\n        if (this._isDimensionChangeSupported()) {\r\n            this._attachDimensionChangeHandlers()\r\n        }\r\n        if (this._isVisibilityChangeSupported()) {\r\n            const $element = this.$element();\r\n            $element.addClass(\"dx-visibility-change-handler\")\r\n        }\r\n    }\r\n    _renderDimensions() {\r\n        const $element = this.$element();\r\n        const element = $element.get(0);\r\n        const width = this._getOptionValue(\"width\", element);\r\n        const height = this._getOptionValue(\"height\", element);\r\n        if (this._isCssUpdateRequired(element, height, width)) {\r\n            $element.css({\r\n                width: null === width ? \"\" : width,\r\n                height: null === height ? \"\" : height\r\n            })\r\n        }\r\n    }\r\n    _isCssUpdateRequired(element, height, width) {\r\n        return !!(isDefined(width) || isDefined(height) || element.style.width || element.style.height)\r\n    }\r\n    _attachDimensionChangeHandlers() {\r\n        const $el = this.$element();\r\n        const namespace = `${this.NAME}VisibilityChange`;\r\n        resizeEvent.off($el, {\r\n            namespace: namespace\r\n        });\r\n        resizeEvent.on($el, (() => this._dimensionChanged()), {\r\n            namespace: namespace\r\n        })\r\n    }\r\n    _attachVisibilityChangeHandlers() {\r\n        if (this._isVisibilityChangeSupported()) {\r\n            const $el = this.$element();\r\n            const namespace = `${this.NAME}VisibilityChange`;\r\n            this._isHidden = !this._isVisible();\r\n            visibilityEvents.off($el, {\r\n                namespace: namespace\r\n            });\r\n            visibilityEvents.on($el, (() => this._checkVisibilityChanged(\"shown\")), (() => this._checkVisibilityChanged(\"hiding\")), {\r\n                namespace: namespace\r\n            })\r\n        }\r\n    }\r\n    _isVisible() {\r\n        const $element = this.$element();\r\n        return $element.is(\":visible\")\r\n    }\r\n    _checkVisibilityChanged(action) {\r\n        const isVisible = this._isVisible();\r\n        if (isVisible) {\r\n            if (\"hiding\" === action && !this._isHidden) {\r\n                this._visibilityChanged(false);\r\n                this._isHidden = true\r\n            } else if (\"shown\" === action && this._isHidden) {\r\n                this._isHidden = false;\r\n                this._visibilityChanged(true)\r\n            }\r\n        }\r\n    }\r\n    _isVisibilityChangeSupported() {\r\n        return this._visibilityChanged !== DOMComponent.prototype._visibilityChanged && hasWindow()\r\n    }\r\n    _clean() {}\r\n    _modelByElement(element) {\r\n        const {\r\n            modelByElement: modelByElement\r\n        } = this.option();\r\n        const $element = this.$element();\r\n        return modelByElement ? modelByElement($element) : void 0\r\n    }\r\n    _invalidate() {\r\n        if (this._isUpdateAllowed()) {\r\n            throw errors.Error(\"E0007\")\r\n        }\r\n        this._requireRefresh = true\r\n    }\r\n    _refresh() {\r\n        this._clean();\r\n        this._renderComponent()\r\n    }\r\n    _dispose() {\r\n        this._templateManager && this._templateManager.dispose();\r\n        super._dispose();\r\n        this._clean();\r\n        this._detachWindowResizeCallback()\r\n    }\r\n    _detachWindowResizeCallback() {\r\n        if (this._isDimensionChangeSupported()) {\r\n            windowResizeCallbacks.remove(this._windowResizeCallBack)\r\n        }\r\n    }\r\n    _toggleRTLDirection(rtl) {\r\n        const $element = this.$element();\r\n        $element.toggleClass(\"dx-rtl\", rtl)\r\n    }\r\n    _createComponent(element, component, componentConfiguration) {\r\n        const configuration = componentConfiguration ?? {};\r\n        const synchronizableOptions = grep(this._getSynchronizableOptionsForCreateComponent(), (value => !(value in configuration)));\r\n        const {\r\n            integrationOptions: integrationOptions\r\n        } = this.option();\r\n        let {\r\n            nestedComponentOptions: nestedComponentOptions\r\n        } = this.option();\r\n        nestedComponentOptions = nestedComponentOptions ?? noop;\r\n        const nestedComponentConfig = extend({\r\n            integrationOptions: integrationOptions\r\n        }, nestedComponentOptions(this));\r\n        synchronizableOptions.forEach((optionName => nestedComponentConfig[optionName] = this.option(optionName)));\r\n        this._extendConfig(configuration, nestedComponentConfig);\r\n        let instance;\r\n        if (isString(component)) {\r\n            const $element = $(element)[component](configuration);\r\n            instance = $element[component](\"instance\")\r\n        } else if (element) {\r\n            instance = component.getInstance(element);\r\n            if (instance) {\r\n                instance.option(configuration)\r\n            } else {\r\n                instance = new component(element, configuration)\r\n            }\r\n        }\r\n        if (instance) {\r\n            const optionChangedHandler = _ref => {\r\n                let {\r\n                    name: name,\r\n                    value: value\r\n                } = _ref;\r\n                if (synchronizableOptions.includes(name)) {\r\n                    instance.option(name, value)\r\n                }\r\n            };\r\n            this.on(\"optionChanged\", optionChangedHandler);\r\n            instance.on(\"disposing\", (() => this.off(\"optionChanged\", optionChangedHandler)))\r\n        }\r\n        return instance\r\n    }\r\n    _extendConfig(configuration, extendConfig) {\r\n        each(extendConfig, ((key, value) => {\r\n            !Object.prototype.hasOwnProperty.call(configuration, key) && (configuration[key] = value)\r\n        }))\r\n    }\r\n    _defaultActionConfig() {\r\n        const $element = this.$element();\r\n        const context = this._modelByElement($element);\r\n        return extend(super._defaultActionConfig(), {\r\n            context: context\r\n        })\r\n    }\r\n    _defaultActionArgs() {\r\n        const $element = this.$element();\r\n        const model = this._modelByElement($element);\r\n        const element = this.element();\r\n        return extend(super._defaultActionArgs(), {\r\n            element: element,\r\n            model: model\r\n        })\r\n    }\r\n    _optionChanged(args) {\r\n        const {\r\n            name: name\r\n        } = args;\r\n        switch (name) {\r\n            case \"width\":\r\n            case \"height\":\r\n                this._renderDimensions();\r\n                break;\r\n            case \"rtlEnabled\":\r\n                this._invalidate();\r\n                break;\r\n            case \"elementAttr\":\r\n                this._renderElementAttributes();\r\n                break;\r\n            case \"disabled\":\r\n            case \"integrationOptions\":\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    _removeAttributes(element) {\r\n        const attrs = element.attributes;\r\n        for (let i = attrs.length - 1; i >= 0; i--) {\r\n            const attr = attrs[i];\r\n            if (attr) {\r\n                const {\r\n                    name: name\r\n                } = attr;\r\n                if (!name.indexOf(\"aria-\") || -1 !== name.indexOf(\"dx-\") || \"role\" === name || \"style\" === name || \"tabindex\" === name) {\r\n                    element.removeAttribute(name)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _removeClasses(element) {\r\n        element.className = element.className.split(\" \").filter((cssClass => 0 !== cssClass.lastIndexOf(\"dx-\", 0))).join(\" \")\r\n    }\r\n    _updateDOMComponent(renderRequired) {\r\n        if (renderRequired) {\r\n            this._renderComponent()\r\n        } else if (this._requireRefresh) {\r\n            this._requireRefresh = false;\r\n            this._refresh()\r\n        }\r\n    }\r\n    endUpdate() {\r\n        const renderRequired = this._isInitializingRequired();\r\n        super.endUpdate();\r\n        this._isUpdateAllowed() && this._updateDOMComponent(renderRequired)\r\n    }\r\n    $element() {\r\n        return this._$element\r\n    }\r\n    element() {\r\n        const $element = this.$element();\r\n        return getPublicElement($element)\r\n    }\r\n    dispose() {\r\n        const element = this.$element().get(0);\r\n        cleanDataRecursive(element, true);\r\n        element.textContent = \"\";\r\n        this._removeAttributes(element);\r\n        this._removeClasses(element)\r\n    }\r\n    resetOption(optionName) {\r\n        super.resetOption(optionName);\r\n        if (\"width\" === optionName || \"height\" === optionName) {\r\n            const initialOption = this.initialOption(optionName);\r\n            !isDefined(initialOption) && this.$element().css(optionName, \"\")\r\n        }\r\n    }\r\n    _getAnonymousTemplateName() {\r\n        return\r\n    }\r\n    _initTemplateManager() {\r\n        if (this._templateManager || !this._useTemplates()) {\r\n            return\r\n        }\r\n        const {\r\n            integrationOptions: integrationOptions = {}\r\n        } = this.option();\r\n        const {\r\n            createTemplate: createTemplate\r\n        } = integrationOptions;\r\n        this._templateManager = new TemplateManagerModule.TemplateManager(createTemplate, this._getAnonymousTemplateName());\r\n        this._initTemplates();\r\n        return\r\n    }\r\n    _initTemplates() {\r\n        const {\r\n            templates: templates,\r\n            anonymousTemplateMeta: anonymousTemplateMeta\r\n        } = this._templateManager.extractTemplates(this.$element());\r\n        const anonymousTemplate = this.option(`integrationOptions.templates.${anonymousTemplateMeta.name}`);\r\n        templates.forEach((_ref2 => {\r\n            let {\r\n                name: name,\r\n                template: template\r\n            } = _ref2;\r\n            this._options.silent(`integrationOptions.templates.${name}`, template)\r\n        }));\r\n        if (anonymousTemplateMeta.name && !anonymousTemplate) {\r\n            this._options.silent(`integrationOptions.templates.${anonymousTemplateMeta.name}`, anonymousTemplateMeta.template);\r\n            this._options.silent(\"_hasAnonymousTemplateContent\", true)\r\n        }\r\n    }\r\n    _getTemplateByOption(optionName) {\r\n        return this._getTemplate(this.option(optionName))\r\n    }\r\n    _getTemplate(templateSource) {\r\n        const templates = this.option(\"integrationOptions.templates\");\r\n        const isAsyncTemplate = this.option(\"templatesRenderAsynchronously\");\r\n        const skipTemplates = this.option(\"integrationOptions.skipTemplates\");\r\n        return this._templateManager.getTemplate(templateSource, templates, {\r\n            isAsyncTemplate: isAsyncTemplate,\r\n            skipTemplates: skipTemplates\r\n        }, this)\r\n    }\r\n    _saveTemplate(name, template) {\r\n        this._setOptionWithoutOptionChange(`integrationOptions.templates.${name}`, this._templateManager._createTemplate(template))\r\n    }\r\n    _useTemplates() {\r\n        return true\r\n    }\r\n}\r\nexport default DOMComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}