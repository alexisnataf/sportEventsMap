{"ast":null,"code":"/*!\n * devextreme-react\n * Version: 24.2.7\n * Build date: Mon Apr 28 2025\n *\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\nimport { buildNodeFullName } from './config-node';\nimport { mergeNameParts, parseOptionName } from './utils';\nfunction buildTemplates(node, optionsAccum, templatesAccum) {\n  const fullName = buildNodeFullName(node);\n  node.templates.forEach(template => {\n    if (template.isAnonymous) {\n      const templateName = mergeNameParts(fullName, template.optionName);\n      optionsAccum[template.optionName] = templateName;\n      templatesAccum[templateName] = template;\n    } else {\n      templatesAccum[template.optionName] = template;\n    }\n  });\n}\nfunction buildNode(node, templatesAccum, ignoreInitialValues) {\n  const result = {};\n  Object.keys(node.predefinedOptions).forEach(key => {\n    result[key] = node.predefinedOptions[key];\n  });\n  Object.keys(node.configs).forEach(key => {\n    result[key] = buildNode(node.configs[key], templatesAccum, ignoreInitialValues);\n  });\n  Object.keys(node.configCollections).forEach(key => {\n    result[key] = node.configCollections[key].map(item => buildNode(item, templatesAccum, ignoreInitialValues));\n  });\n  if (!ignoreInitialValues) {\n    Object.keys(node.initialOptions).forEach(key => {\n      result[key] = node.initialOptions[key];\n    });\n  }\n  Object.keys(node.options).forEach(key => {\n    result[key] = node.options[key];\n  });\n  buildTemplates(node, result, templatesAccum);\n  return result;\n}\nfunction buildConfig(root, ignoreInitialValues) {\n  const templatesAccum = {};\n  const options = buildNode(root, templatesAccum, ignoreInitialValues);\n  return {\n    templates: templatesAccum,\n    options\n  };\n}\nvar ValueType;\n(function (ValueType) {\n  ValueType[ValueType[\"Simple\"] = 0] = \"Simple\";\n  ValueType[ValueType[\"Complex\"] = 1] = \"Complex\";\n  ValueType[ValueType[\"Array\"] = 2] = \"Array\";\n})(ValueType || (ValueType = {}));\nfunction findValueInObject(obj, path) {\n  const key = path.shift();\n  if (!key) {\n    return {\n      value: obj,\n      type: ValueType.Simple\n    };\n  }\n  if (obj instanceof Object && Object.keys(obj).includes(key)) {\n    return findValueInObject(obj[key], path);\n  }\n  return undefined;\n}\nfunction findValue(node, path) {\n  const name = path.shift();\n  if (!name) {\n    return {\n      value: buildConfig(node, true).options,\n      type: ValueType.Complex\n    };\n  }\n  const optionInfo = parseOptionName(name);\n  if (optionInfo.name in node.options) {\n    const options = optionInfo.isCollectionItem ? node.options[optionInfo.name][optionInfo.index] : node.options[optionInfo.name];\n    return findValueInObject(options, path);\n  }\n  if (optionInfo.isCollectionItem) {\n    const collection = node.configCollections[optionInfo.name];\n    if (!collection) {\n      return undefined;\n    }\n    const item = collection[optionInfo.index];\n    if (!item) {\n      return undefined;\n    }\n    return findValue(item, path);\n  }\n  const child = node.configs[optionInfo.name];\n  if (child) {\n    return findValue(child, path);\n  }\n  const childCollection = node.configCollections[optionInfo.name];\n  if (childCollection) {\n    if (path.length !== 0) {\n      return undefined;\n    }\n    return {\n      value: childCollection.map(item => buildNode(item, {}, true)),\n      type: ValueType.Array\n    };\n  }\n  return undefined;\n}\nexport { ValueType, buildConfig, buildNode, buildTemplates, findValue, findValueInObject };","map":{"version":3,"names":["buildNodeFullName","mergeNameParts","parseOptionName","buildTemplates","node","optionsAccum","templatesAccum","fullName","templates","forEach","template","isAnonymous","templateName","optionName","buildNode","ignoreInitialValues","result","Object","keys","predefinedOptions","key","configs","configCollections","map","item","initialOptions","options","buildConfig","root","ValueType","findValueInObject","obj","path","shift","value","type","Simple","includes","undefined","findValue","name","Complex","optionInfo","isCollectionItem","index","collection","child","childCollection","length","Array"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme-react/esm/core/configuration/tree.js"],"sourcesContent":["/*!\n * devextreme-react\n * Version: 24.2.7\n * Build date: Mon Apr 28 2025\n *\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\nimport { buildNodeFullName } from './config-node';\nimport { mergeNameParts, parseOptionName } from './utils';\nfunction buildTemplates(node, optionsAccum, templatesAccum) {\n    const fullName = buildNodeFullName(node);\n    node.templates.forEach((template) => {\n        if (template.isAnonymous) {\n            const templateName = mergeNameParts(fullName, template.optionName);\n            optionsAccum[template.optionName] = templateName;\n            templatesAccum[templateName] = template;\n        }\n        else {\n            templatesAccum[template.optionName] = template;\n        }\n    });\n}\nfunction buildNode(node, templatesAccum, ignoreInitialValues) {\n    const result = {};\n    Object.keys(node.predefinedOptions).forEach((key) => {\n        result[key] = node.predefinedOptions[key];\n    });\n    Object.keys(node.configs).forEach((key) => {\n        result[key] = buildNode(node.configs[key], templatesAccum, ignoreInitialValues);\n    });\n    Object.keys(node.configCollections).forEach((key) => {\n        result[key] = node.configCollections[key].map((item) => buildNode(item, templatesAccum, ignoreInitialValues));\n    });\n    if (!ignoreInitialValues) {\n        Object.keys(node.initialOptions).forEach((key) => {\n            result[key] = node.initialOptions[key];\n        });\n    }\n    Object.keys(node.options).forEach((key) => {\n        result[key] = node.options[key];\n    });\n    buildTemplates(node, result, templatesAccum);\n    return result;\n}\nfunction buildConfig(root, ignoreInitialValues) {\n    const templatesAccum = {};\n    const options = buildNode(root, templatesAccum, ignoreInitialValues);\n    return {\n        templates: templatesAccum,\n        options,\n    };\n}\nvar ValueType;\n(function (ValueType) {\n    ValueType[ValueType[\"Simple\"] = 0] = \"Simple\";\n    ValueType[ValueType[\"Complex\"] = 1] = \"Complex\";\n    ValueType[ValueType[\"Array\"] = 2] = \"Array\";\n})(ValueType || (ValueType = {}));\nfunction findValueInObject(obj, path) {\n    const key = path.shift();\n    if (!key) {\n        return {\n            value: obj,\n            type: ValueType.Simple,\n        };\n    }\n    if (obj instanceof Object && Object.keys(obj).includes(key)) {\n        return findValueInObject(obj[key], path);\n    }\n    return undefined;\n}\nfunction findValue(node, path) {\n    const name = path.shift();\n    if (!name) {\n        return {\n            value: buildConfig(node, true).options,\n            type: ValueType.Complex,\n        };\n    }\n    const optionInfo = parseOptionName(name);\n    if (optionInfo.name in node.options) {\n        const options = optionInfo.isCollectionItem\n            ? node.options[optionInfo.name][optionInfo.index]\n            : node.options[optionInfo.name];\n        return findValueInObject(options, path);\n    }\n    if (optionInfo.isCollectionItem) {\n        const collection = node.configCollections[optionInfo.name];\n        if (!collection) {\n            return undefined;\n        }\n        const item = collection[optionInfo.index];\n        if (!item) {\n            return undefined;\n        }\n        return findValue(item, path);\n    }\n    const child = node.configs[optionInfo.name];\n    if (child) {\n        return findValue(child, path);\n    }\n    const childCollection = node.configCollections[optionInfo.name];\n    if (childCollection) {\n        if (path.length !== 0) {\n            return undefined;\n        }\n        return {\n            value: childCollection.map((item) => buildNode(item, {}, true)),\n            type: ValueType.Array,\n        };\n    }\n    return undefined;\n}\nexport { ValueType, buildConfig, buildNode, buildTemplates, findValue, findValueInObject, };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}