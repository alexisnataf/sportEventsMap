{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/ui/scroll_view/m_scrollable.simulated.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { locate, move, resetPosition } from \"../../../common/core/animation/translator\";\nimport eventsEngine from \"../../../common/core/events/core/events_engine\";\nimport { addNamespace as addEventNamespace, isCommandKeyPressed, isDxMouseWheelEvent, normalizeKeyName } from \"../../../common/core/events/utils/index\";\nimport Class from \"../../../core/class\";\nimport domAdapter from \"../../../core/dom_adapter\";\nimport $ from \"../../../core/renderer\";\nimport { deferRender, deferRenderer, deferUpdate, deferUpdater } from \"../../../core/utils/common\";\nimport { Deferred, when } from \"../../../core/utils/deferred\";\nimport { extend } from \"../../../core/utils/extend\";\nimport { titleize } from \"../../../core/utils/inflector\";\nimport { each, map } from \"../../../core/utils/iterator\";\nimport { getBoundingRect } from \"../../../core/utils/position\";\nimport { getHeight, getWidth } from \"../../../core/utils/size\";\nimport { isDefined } from \"../../../core/utils/type\";\nimport { getWindow, hasWindow } from \"../../../core/utils/window\";\nimport Animator from \"./m_animator\";\nimport Scrollbar from \"./m_scrollbar\";\nconst SCROLLABLE_SIMULATED = \"dxSimulatedScrollable\";\nconst SCROLLABLE_STRATEGY = \"dxScrollableStrategy\";\nconst SCROLLABLE_SIMULATED_CURSOR = `${SCROLLABLE_SIMULATED}Cursor`;\nconst SCROLLABLE_SIMULATED_KEYBOARD = `${SCROLLABLE_SIMULATED}Keyboard`;\nconst SCROLLABLE_SIMULATED_CLASS = \"dx-scrollable-simulated\";\nconst SCROLLABLE_SCROLLBARS_ALWAYSVISIBLE = \"dx-scrollable-scrollbars-alwaysvisible\";\nconst SCROLLABLE_SCROLLBAR_CLASS = \"dx-scrollable-scrollbar\";\nconst VERTICAL = \"vertical\";\nconst HORIZONTAL = \"horizontal\";\nconst ACCELERATION = .92;\nconst OUT_BOUNDS_ACCELERATION = .5;\nconst MIN_VELOCITY_LIMIT = 1;\nconst FRAME_DURATION = Math.round(1e3 / 60);\nconst SCROLL_LINE_HEIGHT = 40;\nconst VALIDATE_WHEEL_TIMEOUT = 500;\nconst BOUNCE_MIN_VELOCITY_LIMIT = .2;\nconst BOUNCE_DURATION = 400;\nconst BOUNCE_FRAMES = 400 / FRAME_DURATION;\nconst BOUNCE_ACCELERATION_SUM = (1 - .92 ** BOUNCE_FRAMES) / (1 - .92);\nconst KEY_CODES = {\n  PAGE_UP: \"pageUp\",\n  PAGE_DOWN: \"pageDown\",\n  END: \"end\",\n  HOME: \"home\",\n  LEFT: \"leftArrow\",\n  UP: \"upArrow\",\n  RIGHT: \"rightArrow\",\n  DOWN: \"downArrow\",\n  TAB: \"tab\"\n};\nclass InertiaAnimator extends Animator {\n  constructor() {\n    super(...arguments);\n    this.VELOCITY_LIMIT = 1;\n  }\n  ctor(scroller) {\n    super.ctor();\n    this.scroller = scroller;\n  }\n  _isFinished() {\n    return Math.abs(this.scroller._velocity) <= this.VELOCITY_LIMIT;\n  }\n  _step() {\n    this.scroller._scrollStep(this.scroller._velocity);\n    this.scroller._velocity *= this._acceleration();\n  }\n  _acceleration() {\n    return this.scroller._inBounds() ? .92 : .5;\n  }\n  _complete() {\n    this.scroller._scrollComplete();\n  }\n}\nclass BounceAnimator extends InertiaAnimator {\n  constructor() {\n    super(...arguments);\n    this.VELOCITY_LIMIT = .2;\n  }\n  _isFinished() {\n    return this.scroller._crossBoundOnNextStep() || super._isFinished();\n  }\n  _acceleration() {\n    return .92;\n  }\n  _complete() {\n    this.scroller._move(this.scroller._bounceLocation);\n    super._complete();\n  }\n}\nexport class Scroller extends Class.inherit({}) {\n  ctor(options) {\n    this._initOptions(options);\n    this._initAnimators();\n    this._initScrollbar();\n  }\n  _initOptions(options) {\n    this._location = 0;\n    this._topReached = false;\n    this._bottomReached = false;\n    this._axis = options.direction === HORIZONTAL ? \"x\" : \"y\";\n    this._prop = options.direction === HORIZONTAL ? \"left\" : \"top\";\n    this._dimension = options.direction === HORIZONTAL ? \"width\" : \"height\";\n    this._scrollProp = options.direction === HORIZONTAL ? \"scrollLeft\" : \"scrollTop\";\n    each(options, (optionName, optionValue) => {\n      this[`_${optionName}`] = optionValue;\n    });\n  }\n  _initAnimators() {\n    this._inertiaAnimator = new InertiaAnimator(this);\n    this._bounceAnimator = new BounceAnimator(this);\n  }\n  _initScrollbar() {\n    this._scrollbar = new Scrollbar($(\"<div>\").appendTo(this._$container), {\n      direction: this._direction,\n      visible: this._scrollByThumb,\n      visibilityMode: this._visibilityModeNormalize(this._scrollbarVisible),\n      expandable: this._scrollByThumb\n    });\n    this._$scrollbar = this._scrollbar.$element();\n  }\n  _visibilityModeNormalize(mode) {\n    return true === mode ? \"onScroll\" : false === mode ? \"never\" : mode;\n  }\n  _scrollStep(delta) {\n    const prevLocation = this._location;\n    this._location += delta;\n    this._suppressBounce();\n    this._move();\n    if (Math.abs(prevLocation - this._location) < 1) {\n      return;\n    }\n    eventsEngine.triggerHandler(this._$container, {\n      type: \"scroll\"\n    });\n  }\n  _suppressBounce() {\n    if (this._bounceEnabled || this._inBounds(this._location)) {\n      return;\n    }\n    this._velocity = 0;\n    this._location = this._boundLocation();\n  }\n  _boundLocation(location) {\n    location = void 0 !== location ? location : this._location;\n    return Math.max(Math.min(location, this._maxOffset), this._minOffset);\n  }\n  _move(location) {\n    this._location = void 0 !== location ? location * this._getScaleRatio() : this._location;\n    this._moveContent();\n    this._moveScrollbar();\n  }\n  _moveContent() {\n    const location = this._location;\n    this._$container[this._scrollProp](-location / this._getScaleRatio());\n    this._moveContentByTranslator(location);\n  }\n  _getScaleRatio() {\n    if (hasWindow() && !this._scaleRatio) {\n      const element = this._$element.get(0);\n      const realDimension = this._getRealDimension(element, this._dimension);\n      const baseDimension = this._getBaseDimension(element, this._dimension);\n      this._scaleRatio = Math.round(realDimension / baseDimension * 100) / 100;\n    }\n    return this._scaleRatio || 1;\n  }\n  _getRealDimension(element, dimension) {\n    return Math.round(getBoundingRect(element)[dimension]);\n  }\n  _getBaseDimension(element, dimension) {\n    const dimensionName = `offset${titleize(dimension)}`;\n    return element[dimensionName];\n  }\n  _moveContentByTranslator(location) {\n    let translateOffset;\n    const minOffset = -this._maxScrollPropValue;\n    if (location > 0) {\n      translateOffset = location;\n    }\n    if (location <= minOffset) {\n      translateOffset = location - minOffset;\n    }\n    if (this._translateOffset === translateOffset) {\n      return;\n    }\n    const targetLocation = {};\n    targetLocation[this._prop] = translateOffset;\n    this._translateOffset = translateOffset;\n    if (!translateOffset) {\n      resetPosition(this._$content);\n      return;\n    }\n    move(this._$content, targetLocation);\n  }\n  _moveScrollbar() {\n    this._scrollbar.moveTo(this._location);\n  }\n  _scrollComplete() {\n    if (this._inBounds()) {\n      this._hideScrollbar();\n      if (this._completeDeferred) {\n        this._completeDeferred.resolve();\n      }\n    }\n    this._scrollToBounds();\n  }\n  _scrollToBounds() {\n    var _this$_bounceAction;\n    if (this._inBounds()) {\n      return;\n    }\n    null === (_this$_bounceAction = this._bounceAction) || void 0 === _this$_bounceAction || _this$_bounceAction.call(this);\n    this._setupBounce();\n    this._bounceAnimator.start();\n  }\n  _setupBounce() {\n    const boundLocation = this._bounceLocation = this._boundLocation();\n    const bounceDistance = boundLocation - this._location;\n    this._velocity = bounceDistance / BOUNCE_ACCELERATION_SUM;\n  }\n  _inBounds(location) {\n    location = void 0 !== location ? location : this._location;\n    return this._boundLocation(location) === location;\n  }\n  _crossBoundOnNextStep() {\n    const location = this._location;\n    const nextLocation = location + this._velocity;\n    return location < this._minOffset && nextLocation >= this._minOffset || location > this._maxOffset && nextLocation <= this._maxOffset;\n  }\n  _initHandler(e) {\n    this._stopScrolling();\n    this._prepareThumbScrolling(e);\n  }\n  _stopScrolling() {\n    deferRenderer(() => {\n      this._hideScrollbar();\n      this._inertiaAnimator.stop();\n      this._bounceAnimator.stop();\n    })();\n  }\n  _prepareThumbScrolling(e) {\n    if (isDxMouseWheelEvent(e.originalEvent)) {\n      return;\n    }\n    const $target = $(e.originalEvent.target);\n    const scrollbarClicked = this._isScrollbar($target);\n    if (scrollbarClicked) {\n      this._moveToMouseLocation(e);\n    }\n    this._thumbScrolling = scrollbarClicked || this._isThumb($target);\n    this._crossThumbScrolling = !this._thumbScrolling && this._isAnyThumbScrolling($target);\n    if (this._thumbScrolling) {\n      this._scrollbar.feedbackOn();\n    }\n  }\n  _isThumbScrollingHandler($target) {\n    return this._isThumb($target);\n  }\n  _moveToMouseLocation(e) {\n    const mouseLocation = e[`page${this._axis.toUpperCase()}`] - this._$element.offset()[this._prop];\n    const location = this._location + mouseLocation / this._containerToContentRatio() - getHeight(this._$container) / 2;\n    this._scrollStep(-Math.round(location));\n  }\n  _startHandler() {\n    this._showScrollbar();\n  }\n  _moveHandler(delta) {\n    if (this._crossThumbScrolling) {\n      return;\n    }\n    if (this._thumbScrolling) {\n      delta[this._axis] = -Math.round(delta[this._axis] / this._containerToContentRatio());\n    }\n    this._scrollBy(delta);\n  }\n  _scrollBy(delta) {\n    delta = delta[this._axis];\n    if (!this._inBounds()) {\n      delta *= .5;\n    }\n    this._scrollStep(delta);\n  }\n  _scrollByHandler(delta) {\n    if (!delta.x && !delta.y) {\n      return;\n    }\n    this._scrollBy(delta);\n    this._scrollComplete();\n  }\n  _containerToContentRatio() {\n    return this._scrollbar.containerToContentRatio();\n  }\n  _endHandler(velocity) {\n    this._completeDeferred = Deferred();\n    this._velocity = velocity[this._axis];\n    this._inertiaHandler();\n    this._resetThumbScrolling();\n    return this._completeDeferred.promise();\n  }\n  _inertiaHandler() {\n    this._suppressInertia();\n    this._inertiaAnimator.start();\n  }\n  _suppressInertia() {\n    if (!this._inertiaEnabled || this._thumbScrolling) {\n      this._velocity = 0;\n    }\n  }\n  _resetThumbScrolling() {\n    this._thumbScrolling = false;\n    this._crossThumbScrolling = false;\n  }\n  _stopHandler() {\n    if (this._thumbScrolling) {\n      this._scrollComplete();\n    }\n    this._resetThumbScrolling();\n    this._scrollToBounds();\n  }\n  _disposeHandler() {\n    this._stopScrolling();\n    this._$scrollbar.remove();\n  }\n  _updateHandler() {\n    this._update();\n    this._moveToBounds();\n  }\n  _update() {\n    this._stopScrolling();\n    return deferUpdate(() => {\n      this._resetScaleRatio();\n      this._updateLocation();\n      this._updateBounds();\n      this._updateScrollbar();\n      deferRender(() => {\n        this._moveScrollbar();\n        this._scrollbar.update();\n      });\n    });\n  }\n  _resetScaleRatio() {\n    this._scaleRatio = null;\n  }\n  _updateLocation() {\n    this._location = (locate(this._$content)[this._prop] - this._$container[this._scrollProp]()) * this._getScaleRatio();\n  }\n  _updateBounds() {\n    this._maxOffset = this._getMaxOffset();\n    this._minOffset = this._getMinOffset();\n  }\n  _getMaxOffset() {\n    return 0;\n  }\n  _getMinOffset() {\n    this._maxScrollPropValue = Math.max(this._contentSize() - this._containerSize(), 0);\n    return -this._maxScrollPropValue;\n  }\n  _updateScrollbar() {\n    deferUpdater(() => {\n      const containerSize = this._containerSize();\n      const contentSize = this._contentSize();\n      const baseContainerSize = this._getBaseDimension(this._$container.get(0), this._dimension);\n      const baseContentSize = this._getBaseDimension(this._$content.get(0), this._dimension);\n      deferRender(() => {\n        this._scrollbar.option({\n          containerSize: containerSize,\n          contentSize: contentSize,\n          baseContainerSize: baseContainerSize,\n          baseContentSize: baseContentSize,\n          scaleRatio: this._getScaleRatio()\n        });\n      });\n    })();\n  }\n  _moveToBounds() {\n    deferRenderer(deferUpdater(deferRenderer(() => {\n      const location = this._boundLocation();\n      const locationChanged = location !== this._location;\n      this._location = location;\n      this._move();\n      if (locationChanged) {\n        var _this$_scrollAction;\n        null === (_this$_scrollAction = this._scrollAction) || void 0 === _this$_scrollAction || _this$_scrollAction.call(this);\n      }\n    })))();\n  }\n  _createActionsHandler(actions) {\n    this._scrollAction = actions.scroll;\n    this._bounceAction = actions.bounce;\n  }\n  _showScrollbar() {\n    this._scrollbar.option(\"visible\", true);\n  }\n  _hideScrollbar() {\n    this._scrollbar.option(\"visible\", false);\n  }\n  _containerSize() {\n    return this._getRealDimension(this._$container.get(0), this._dimension);\n  }\n  _contentSize() {\n    const isOverflowHidden = \"hidden\" === this._$content.css(`overflow${this._axis.toUpperCase()}`);\n    let contentSize = this._getRealDimension(this._$content.get(0), this._dimension);\n    if (!isOverflowHidden) {\n      const containerScrollSize = this._$content[0][`scroll${titleize(this._dimension)}`] * this._getScaleRatio();\n      contentSize = Math.max(containerScrollSize, contentSize);\n    }\n    return contentSize;\n  }\n  _validateEvent(e) {\n    const $target = $(e.originalEvent.target);\n    return this._isThumb($target) || this._isScrollbar($target);\n  }\n  _isThumb($element) {\n    return this._scrollByThumb && this._scrollbar.isThumb($element);\n  }\n  _isScrollbar($element) {\n    return this._scrollByThumb && (null === $element || void 0 === $element ? void 0 : $element.is(this._$scrollbar));\n  }\n  _reachedMin() {\n    return Math.round(this._location - this._minOffset) <= 0;\n  }\n  _reachedMax() {\n    return Math.round(this._location - this._maxOffset) >= 0;\n  }\n  _cursorEnterHandler() {\n    this._resetScaleRatio();\n    this._updateScrollbar();\n    this._scrollbar.cursorEnter();\n  }\n  _cursorLeaveHandler() {\n    this._scrollbar.cursorLeave();\n  }\n  dispose() {}\n}\nlet hoveredScrollable;\nlet activeScrollable;\nexport class SimulatedStrategy extends Class.inherit({}) {\n  ctor(scrollable) {\n    this._init(scrollable);\n  }\n  _init(scrollable) {\n    this._component = scrollable;\n    this._$element = scrollable.$element();\n    this._$container = $(scrollable.container());\n    this._$wrapper = scrollable._$wrapper;\n    this._$content = scrollable.$content();\n    this.option = scrollable.option.bind(scrollable);\n    this._createActionByOption = scrollable._createActionByOption.bind(scrollable);\n    this._isLocked = scrollable._isLocked.bind(scrollable);\n    this._isDirection = scrollable._isDirection.bind(scrollable);\n    this._allowedDirection = scrollable._allowedDirection.bind(scrollable);\n    this._getMaxOffset = scrollable._getMaxOffset.bind(scrollable);\n  }\n  render() {\n    this._$element.addClass(\"dx-scrollable-simulated\");\n    this._createScrollers();\n    if (this.option(\"useKeyboard\")) {\n      this._$container.prop(\"tabIndex\", 0);\n    }\n    this._attachKeyboardHandler();\n    this._attachCursorHandlers();\n  }\n  _createScrollers() {\n    this._scrollers = {};\n    if (this._isDirection(HORIZONTAL)) {\n      this._createScroller(HORIZONTAL);\n    }\n    if (this._isDirection(VERTICAL)) {\n      this._createScroller(VERTICAL);\n    }\n    this._$element.toggleClass(SCROLLABLE_SCROLLBARS_ALWAYSVISIBLE, \"always\" === this.option(\"showScrollbar\"));\n  }\n  _createScroller(direction) {\n    this._scrollers[direction] = new Scroller(this._scrollerOptions(direction));\n  }\n  _scrollerOptions(direction) {\n    return {\n      direction: direction,\n      $content: this._$content,\n      $container: this._$container,\n      $wrapper: this._$wrapper,\n      $element: this._$element,\n      scrollByThumb: this.option(\"scrollByThumb\"),\n      scrollbarVisible: this.option(\"showScrollbar\"),\n      bounceEnabled: this.option(\"bounceEnabled\"),\n      inertiaEnabled: this.option(\"inertiaEnabled\"),\n      isAnyThumbScrolling: this._isAnyThumbScrolling.bind(this)\n    };\n  }\n  _applyScaleRatio(targetLocation) {\n    for (const direction in this._scrollers) {\n      const prop = this._getPropByDirection(direction);\n      if (isDefined(targetLocation[prop])) {\n        const scroller = this._scrollers[direction];\n        targetLocation[prop] *= scroller._getScaleRatio();\n      }\n    }\n    return targetLocation;\n  }\n  _isAnyThumbScrolling($target) {\n    let result = false;\n    this._eventHandler(\"isThumbScrolling\", $target).done((isThumbScrollingVertical, isThumbScrollingHorizontal) => {\n      result = isThumbScrollingVertical || isThumbScrollingHorizontal;\n    });\n    return result;\n  }\n  handleInit(e) {\n    this._suppressDirections(e);\n    this._eventForUserAction = e;\n    this._eventHandler(\"init\", e);\n  }\n  _suppressDirections(e) {\n    if (isDxMouseWheelEvent(e.originalEvent)) {\n      this._prepareDirections(true);\n      return;\n    }\n    this._prepareDirections();\n    this._eachScroller(function (scroller, direction) {\n      const $target = $(e.originalEvent.target);\n      const isValid = scroller._validateEvent(e) || this.option(\"scrollByContent\") && this._isContent($target);\n      this._validDirections[direction] = isValid;\n    });\n  }\n  _isContent($element) {\n    return !!$element.closest(this._$element).length;\n  }\n  _prepareDirections(value) {\n    value = value || false;\n    this._validDirections = {};\n    this._validDirections[HORIZONTAL] = value;\n    this._validDirections[VERTICAL] = value;\n  }\n  _eachScroller(callback) {\n    callback = callback.bind(this);\n    each(this._scrollers, (direction, scroller) => {\n      callback(scroller, direction);\n    });\n  }\n  handleStart(e) {\n    this._eventForUserAction = e;\n    this._eventHandler(\"start\").done(this._startAction);\n  }\n  _saveActive() {\n    activeScrollable = this;\n  }\n  _resetActive() {\n    if (activeScrollable === this) {\n      activeScrollable = null;\n    }\n  }\n  handleMove(e) {\n    var _e$preventDefault;\n    if (this._isLocked()) {\n      e.cancel = true;\n      this._resetActive();\n      return;\n    }\n    this._saveActive();\n    null === (_e$preventDefault = e.preventDefault) || void 0 === _e$preventDefault || _e$preventDefault.call(e);\n    this._adjustDistance(e, e.delta);\n    this._eventForUserAction = e;\n    this._eventHandler(\"move\", e.delta);\n  }\n  _adjustDistance(e, distance) {\n    distance.x *= this._validDirections[HORIZONTAL];\n    distance.y *= this._validDirections[VERTICAL];\n    const devicePixelRatio = this._tryGetDevicePixelRatio();\n    if (devicePixelRatio && isDxMouseWheelEvent(e.originalEvent)) {\n      distance.x = Math.round(distance.x / devicePixelRatio * 100) / 100;\n      distance.y = Math.round(distance.y / devicePixelRatio * 100) / 100;\n    }\n  }\n  _tryGetDevicePixelRatio() {\n    if (hasWindow()) {\n      return getWindow().devicePixelRatio;\n    }\n  }\n  handleEnd(e) {\n    var _e$originalEvent;\n    this._resetActive();\n    this._refreshCursorState(null === (_e$originalEvent = e.originalEvent) || void 0 === _e$originalEvent ? void 0 : _e$originalEvent.target);\n    this._adjustDistance(e, e.velocity);\n    this._eventForUserAction = e;\n    return this._eventHandler(\"end\", e.velocity).done(this._endAction);\n  }\n  handleCancel(e) {\n    this._resetActive();\n    this._eventForUserAction = e;\n    return this._eventHandler(\"end\", {\n      x: 0,\n      y: 0\n    });\n  }\n  handleStop() {\n    this._resetActive();\n    this._eventHandler(\"stop\");\n  }\n  handleScroll() {\n    var _this$_scrollAction2;\n    this._updateRtlConfig();\n    null === (_this$_scrollAction2 = this._scrollAction) || void 0 === _this$_scrollAction2 || _this$_scrollAction2.call(this);\n  }\n  _attachKeyboardHandler() {\n    eventsEngine.off(this._$element, `.${SCROLLABLE_SIMULATED_KEYBOARD}`);\n    if (!this.option(\"disabled\") && this.option(\"useKeyboard\")) {\n      eventsEngine.on(this._$element, addEventNamespace(\"keydown\", SCROLLABLE_SIMULATED_KEYBOARD), this._keyDownHandler.bind(this));\n    }\n  }\n  _keyDownHandler(e) {\n    clearTimeout(this._updateHandlerTimeout);\n    this._updateHandlerTimeout = setTimeout(() => {\n      if (normalizeKeyName(e) === KEY_CODES.TAB) {\n        this._eachScroller(scroller => {\n          scroller._updateHandler();\n        });\n      }\n    });\n    if (!this._$container.is(domAdapter.getActiveElement(this._$container.get(0)))) {\n      return;\n    }\n    let handled = true;\n    switch (normalizeKeyName(e)) {\n      case KEY_CODES.DOWN:\n        this._scrollByLine({\n          y: 1\n        });\n        break;\n      case KEY_CODES.UP:\n        this._scrollByLine({\n          y: -1\n        });\n        break;\n      case KEY_CODES.RIGHT:\n        this._scrollByLine({\n          x: 1\n        });\n        break;\n      case KEY_CODES.LEFT:\n        this._scrollByLine({\n          x: -1\n        });\n        break;\n      case KEY_CODES.PAGE_DOWN:\n        this._scrollByPage(1);\n        break;\n      case KEY_CODES.PAGE_UP:\n        this._scrollByPage(-1);\n        break;\n      case KEY_CODES.HOME:\n        this._scrollToHome();\n        break;\n      case KEY_CODES.END:\n        this._scrollToEnd();\n        break;\n      default:\n        handled = false;\n    }\n    if (handled) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  }\n  _scrollByLine(lines) {\n    const devicePixelRatio = this._tryGetDevicePixelRatio();\n    let scrollOffset = 40;\n    if (devicePixelRatio) {\n      scrollOffset = Math.abs(scrollOffset / devicePixelRatio * 100) / 100;\n    }\n    this.scrollBy({\n      top: (lines.y || 0) * -scrollOffset,\n      left: (lines.x || 0) * -scrollOffset\n    });\n  }\n  _scrollByPage(page) {\n    const prop = this._wheelProp();\n    const dimension = this._dimensionByProp(prop);\n    const distance = {};\n    const getter = \"width\" === dimension ? getWidth : getHeight;\n    distance[prop] = page * -getter(this._$container);\n    this.scrollBy(distance);\n  }\n  _dimensionByProp(prop) {\n    return \"left\" === prop ? \"width\" : \"height\";\n  }\n  _getPropByDirection(direction) {\n    return direction === HORIZONTAL ? \"left\" : \"top\";\n  }\n  _scrollToHome() {\n    const prop = this._wheelProp();\n    const distance = {};\n    distance[prop] = 0;\n    this._component.scrollTo(distance);\n  }\n  _scrollToEnd() {\n    const prop = this._wheelProp();\n    const dimension = this._dimensionByProp(prop);\n    const distance = {};\n    const getter = \"width\" === dimension ? getWidth : getHeight;\n    distance[prop] = getter(this._$content) - getter(this._$container);\n    this._component.scrollTo(distance);\n  }\n  createActions() {\n    this._startAction = this._createActionHandler(\"onStart\");\n    this._endAction = this._createActionHandler(\"onEnd\");\n    this._updateAction = this._createActionHandler(\"onUpdated\");\n    this._createScrollerActions();\n  }\n  _createScrollerActions() {\n    this._scrollAction = this._createActionHandler(\"onScroll\");\n    this._bounceAction = this._createActionHandler(\"onBounce\");\n    this._eventHandler(\"createActions\", {\n      scroll: this._scrollAction,\n      bounce: this._bounceAction\n    });\n  }\n  _createActionHandler(optionName) {\n    const actionHandler = this._createActionByOption(optionName);\n    return () => {\n      actionHandler(extend(this._createActionArgs(), arguments));\n    };\n  }\n  _createActionArgs() {\n    const {\n      horizontal: scrollerX,\n      vertical: scrollerY\n    } = this._scrollers;\n    const offset = this._getScrollOffset();\n    this._scrollOffset = {\n      top: scrollerY && offset.top,\n      left: scrollerX && offset.left\n    };\n    return {\n      event: this._eventForUserAction,\n      scrollOffset: this._scrollOffset,\n      reachedLeft: null === scrollerX || void 0 === scrollerX ? void 0 : scrollerX._reachedMax(),\n      reachedRight: null === scrollerX || void 0 === scrollerX ? void 0 : scrollerX._reachedMin(),\n      reachedTop: null === scrollerY || void 0 === scrollerY ? void 0 : scrollerY._reachedMax(),\n      reachedBottom: null === scrollerY || void 0 === scrollerY ? void 0 : scrollerY._reachedMin()\n    };\n  }\n  _getScrollOffset() {\n    return {\n      top: -this.location().top,\n      left: -this.location().left\n    };\n  }\n  _eventHandler(eventName, location) {\n    const args = [].slice.call(arguments).slice(1);\n    const deferreds = map(this._scrollers, scroller => scroller[`_${eventName}Handler`].apply(scroller, args));\n    return when.apply($, deferreds).promise();\n  }\n  location() {\n    const location = locate(this._$content);\n    location.top -= this._$container.scrollTop();\n    location.left -= this._$container.scrollLeft();\n    return location;\n  }\n  disabledChanged() {\n    this._attachCursorHandlers();\n  }\n  _attachCursorHandlers() {\n    eventsEngine.off(this._$element, `.${SCROLLABLE_SIMULATED_CURSOR}`);\n    if (!this.option(\"disabled\") && this._isHoverMode()) {\n      eventsEngine.on(this._$element, addEventNamespace(\"mouseenter\", SCROLLABLE_SIMULATED_CURSOR), this._cursorEnterHandler.bind(this));\n      eventsEngine.on(this._$element, addEventNamespace(\"mouseleave\", SCROLLABLE_SIMULATED_CURSOR), this._cursorLeaveHandler.bind(this));\n    }\n  }\n  _isHoverMode() {\n    return \"onHover\" === this.option(\"showScrollbar\");\n  }\n  _cursorEnterHandler(e) {\n    e = e || {};\n    e.originalEvent = e.originalEvent || {};\n    if (activeScrollable || e.originalEvent._hoverHandled) {\n      return;\n    }\n    if (hoveredScrollable) {\n      hoveredScrollable._cursorLeaveHandler();\n    }\n    hoveredScrollable = this;\n    this._eventHandler(\"cursorEnter\");\n    e.originalEvent._hoverHandled = true;\n  }\n  _cursorLeaveHandler(e) {\n    if (hoveredScrollable !== this || activeScrollable === hoveredScrollable) {\n      return;\n    }\n    this._eventHandler(\"cursorLeave\");\n    hoveredScrollable = null;\n    this._refreshCursorState(null === e || void 0 === e ? void 0 : e.relatedTarget);\n  }\n  _refreshCursorState(target) {\n    if (!this._isHoverMode() && (!target || activeScrollable)) {\n      return;\n    }\n    const $target = $(target);\n    const $scrollable = $target.closest(\".dx-scrollable-simulated:not(.dx-state-disabled)\");\n    const targetScrollable = $scrollable.length && $scrollable.data(SCROLLABLE_STRATEGY);\n    if (hoveredScrollable && hoveredScrollable !== targetScrollable) {\n      hoveredScrollable._cursorLeaveHandler();\n    }\n    if (targetScrollable) {\n      targetScrollable._cursorEnterHandler();\n    }\n  }\n  update() {\n    const result = this._eventHandler(\"update\").done(this._updateAction);\n    return when(result, deferUpdate(() => {\n      const allowedDirections = this._allowedDirections();\n      deferRender(() => {\n        let touchDirection = allowedDirections.vertical ? \"pan-x\" : \"\";\n        touchDirection = allowedDirections.horizontal ? \"pan-y\" : touchDirection;\n        touchDirection = allowedDirections.vertical && allowedDirections.horizontal ? \"none\" : touchDirection;\n        this._$container.css(\"touchAction\", touchDirection);\n      });\n      return when().promise();\n    }));\n  }\n  _allowedDirections() {\n    const bounceEnabled = this.option(\"bounceEnabled\");\n    const verticalScroller = this._scrollers[VERTICAL];\n    const horizontalScroller = this._scrollers[HORIZONTAL];\n    return {\n      vertical: verticalScroller && (verticalScroller._minOffset < 0 || bounceEnabled),\n      horizontal: horizontalScroller && (horizontalScroller._minOffset < 0 || bounceEnabled)\n    };\n  }\n  _updateBounds() {\n    var _this$_scrollers$HORI;\n    null === (_this$_scrollers$HORI = this._scrollers[HORIZONTAL]) || void 0 === _this$_scrollers$HORI || _this$_scrollers$HORI._updateBounds();\n  }\n  _isHorizontalAndRtlEnabled() {\n    return this.option(\"rtlEnabled\") && this.option(\"direction\") !== VERTICAL;\n  }\n  updateRtlPosition(needInitializeRtlConfig) {\n    if (needInitializeRtlConfig) {\n      this._rtlConfig = {\n        scrollRight: 0,\n        clientWidth: this._$container.get(0).clientWidth,\n        windowPixelRatio: this._getWindowDevicePixelRatio()\n      };\n    }\n    this._updateBounds();\n    if (this._isHorizontalAndRtlEnabled()) {\n      let scrollLeft = this._getMaxOffset().left - this._rtlConfig.scrollRight;\n      if (scrollLeft <= 0) {\n        scrollLeft = 0;\n        this._rtlConfig.scrollRight = this._getMaxOffset().left;\n      }\n      if (this._getScrollOffset().left !== scrollLeft) {\n        this._rtlConfig.skipUpdating = true;\n        this._component.scrollTo({\n          left: scrollLeft\n        });\n        this._rtlConfig.skipUpdating = false;\n      }\n    }\n  }\n  _updateRtlConfig() {\n    if (this._isHorizontalAndRtlEnabled() && !this._rtlConfig.skipUpdating) {\n      const {\n        clientWidth: clientWidth,\n        scrollLeft: scrollLeft\n      } = this._$container.get(0);\n      const windowPixelRatio = this._getWindowDevicePixelRatio();\n      if (this._rtlConfig.windowPixelRatio === windowPixelRatio && this._rtlConfig.clientWidth === clientWidth) {\n        this._rtlConfig.scrollRight = this._getMaxOffset().left - scrollLeft;\n      }\n      this._rtlConfig.clientWidth = clientWidth;\n      this._rtlConfig.windowPixelRatio = windowPixelRatio;\n    }\n  }\n  _getWindowDevicePixelRatio() {\n    return hasWindow() ? getWindow().devicePixelRatio : 1;\n  }\n  scrollBy(distance) {\n    var _this$_startAction, _this$_endAction;\n    const verticalScroller = this._scrollers[VERTICAL];\n    const horizontalScroller = this._scrollers[HORIZONTAL];\n    if (verticalScroller) {\n      distance.top = verticalScroller._boundLocation(distance.top + verticalScroller._location) - verticalScroller._location;\n    }\n    if (horizontalScroller) {\n      distance.left = horizontalScroller._boundLocation(distance.left + horizontalScroller._location) - horizontalScroller._location;\n    }\n    this._prepareDirections(true);\n    null === (_this$_startAction = this._startAction) || void 0 === _this$_startAction || _this$_startAction.call(this);\n    this._eventHandler(\"scrollBy\", {\n      x: distance.left,\n      y: distance.top\n    });\n    null === (_this$_endAction = this._endAction) || void 0 === _this$_endAction || _this$_endAction.call(this);\n    this._updateRtlConfig();\n  }\n  validate(e) {\n    if (isDxMouseWheelEvent(e) && isCommandKeyPressed(e)) {\n      return false;\n    }\n    if (this.option(\"disabled\")) {\n      return false;\n    }\n    if (this.option(\"bounceEnabled\")) {\n      return true;\n    }\n    return isDxMouseWheelEvent(e) ? this._validateWheel(e) : this._validateMove(e);\n  }\n  _validateWheel(e) {\n    const scroller = this._scrollers[this._wheelDirection(e)];\n    const reachedMin = scroller._reachedMin();\n    const reachedMax = scroller._reachedMax();\n    const contentGreaterThanContainer = !reachedMin || !reachedMax;\n    const locatedNotAtBound = !reachedMin && !reachedMax;\n    const scrollFromMin = reachedMin && e.delta > 0;\n    const scrollFromMax = reachedMax && e.delta < 0;\n    let validated = contentGreaterThanContainer && (locatedNotAtBound || scrollFromMin || scrollFromMax);\n    validated = validated || void 0 !== this._validateWheelTimer;\n    if (validated) {\n      clearTimeout(this._validateWheelTimer);\n      this._validateWheelTimer = setTimeout(() => {\n        this._validateWheelTimer = void 0;\n      }, 500);\n    }\n    return validated;\n  }\n  _validateMove(e) {\n    if (!this.option(\"scrollByContent\") && !$(e.target).closest(\".dx-scrollable-scrollbar\").length) {\n      return false;\n    }\n    return this._allowedDirection();\n  }\n  getDirection(e) {\n    return isDxMouseWheelEvent(e) ? this._wheelDirection(e) : this._allowedDirection();\n  }\n  _wheelProp() {\n    return this._wheelDirection() === HORIZONTAL ? \"left\" : \"top\";\n  }\n  _wheelDirection(e) {\n    switch (this.option(\"direction\")) {\n      case HORIZONTAL:\n        return HORIZONTAL;\n      case VERTICAL:\n        return VERTICAL;\n      default:\n        return null !== e && void 0 !== e && e.shiftKey ? HORIZONTAL : VERTICAL;\n    }\n  }\n  dispose() {\n    this._resetActive();\n    if (hoveredScrollable === this) {\n      hoveredScrollable = null;\n    }\n    this._eventHandler(\"dispose\");\n    this._detachEventHandlers();\n    this._$element.removeClass(\"dx-scrollable-simulated\");\n    this._eventForUserAction = null;\n    clearTimeout(this._validateWheelTimer);\n    clearTimeout(this._updateHandlerTimeout);\n  }\n  _detachEventHandlers() {\n    eventsEngine.off(this._$element, `.${SCROLLABLE_SIMULATED_CURSOR}`);\n    eventsEngine.off(this._$container, `.${SCROLLABLE_SIMULATED_KEYBOARD}`);\n  }\n}","map":{"version":3,"names":["locate","move","resetPosition","eventsEngine","addNamespace","addEventNamespace","isCommandKeyPressed","isDxMouseWheelEvent","normalizeKeyName","Class","domAdapter","$","deferRender","deferRenderer","deferUpdate","deferUpdater","Deferred","when","extend","titleize","each","map","getBoundingRect","getHeight","getWidth","isDefined","getWindow","hasWindow","Animator","Scrollbar","SCROLLABLE_SIMULATED","SCROLLABLE_STRATEGY","SCROLLABLE_SIMULATED_CURSOR","SCROLLABLE_SIMULATED_KEYBOARD","SCROLLABLE_SIMULATED_CLASS","SCROLLABLE_SCROLLBARS_ALWAYSVISIBLE","SCROLLABLE_SCROLLBAR_CLASS","VERTICAL","HORIZONTAL","ACCELERATION","OUT_BOUNDS_ACCELERATION","MIN_VELOCITY_LIMIT","FRAME_DURATION","Math","round","SCROLL_LINE_HEIGHT","VALIDATE_WHEEL_TIMEOUT","BOUNCE_MIN_VELOCITY_LIMIT","BOUNCE_DURATION","BOUNCE_FRAMES","BOUNCE_ACCELERATION_SUM","KEY_CODES","PAGE_UP","PAGE_DOWN","END","HOME","LEFT","UP","RIGHT","DOWN","TAB","InertiaAnimator","constructor","arguments","VELOCITY_LIMIT","ctor","scroller","_isFinished","abs","_velocity","_step","_scrollStep","_acceleration","_inBounds","_complete","_scrollComplete","BounceAnimator","_crossBoundOnNextStep","_move","_bounceLocation","Scroller","inherit","options","_initOptions","_initAnimators","_initScrollbar","_location","_topReached","_bottomReached","_axis","direction","_prop","_dimension","_scrollProp","optionName","optionValue","_inertiaAnimator","_bounceAnimator","_scrollbar","appendTo","_$container","_direction","visible","_scrollByThumb","visibilityMode","_visibilityModeNormalize","_scrollbarVisible","expandable","_$scrollbar","$element","mode","delta","prevLocation","_suppressBounce","triggerHandler","type","_bounceEnabled","_boundLocation","location","max","min","_maxOffset","_minOffset","_getScaleRatio","_moveContent","_moveScrollbar","_moveContentByTranslator","_scaleRatio","element","_$element","get","realDimension","_getRealDimension","baseDimension","_getBaseDimension","dimension","dimensionName","translateOffset","minOffset","_maxScrollPropValue","_translateOffset","targetLocation","_$content","moveTo","_hideScrollbar","_completeDeferred","resolve","_scrollToBounds","_this$_bounceAction","_bounceAction","call","_setupBounce","start","boundLocation","bounceDistance","nextLocation","_initHandler","e","_stopScrolling","_prepareThumbScrolling","stop","originalEvent","$target","target","scrollbarClicked","_isScrollbar","_moveToMouseLocation","_thumbScrolling","_isThumb","_crossThumbScrolling","_isAnyThumbScrolling","feedbackOn","_isThumbScrollingHandler","mouseLocation","toUpperCase","offset","_containerToContentRatio","_startHandler","_showScrollbar","_moveHandler","_scrollBy","_scrollByHandler","x","y","containerToContentRatio","_endHandler","velocity","_inertiaHandler","_resetThumbScrolling","promise","_suppressInertia","_inertiaEnabled","_stopHandler","_disposeHandler","remove","_updateHandler","_update","_moveToBounds","_resetScaleRatio","_updateLocation","_updateBounds","_updateScrollbar","update","_getMaxOffset","_getMinOffset","_contentSize","_containerSize","containerSize","contentSize","baseContainerSize","baseContentSize","option","scaleRatio","locationChanged","_this$_scrollAction","_scrollAction","_createActionsHandler","actions","scroll","bounce","isOverflowHidden","css","containerScrollSize","_validateEvent","isThumb","is","_reachedMin","_reachedMax","_cursorEnterHandler","cursorEnter","_cursorLeaveHandler","cursorLeave","dispose","hoveredScrollable","activeScrollable","SimulatedStrategy","scrollable","_init","_component","container","_$wrapper","$content","bind","_createActionByOption","_isLocked","_isDirection","_allowedDirection","render","addClass","_createScrollers","prop","_attachKeyboardHandler","_attachCursorHandlers","_scrollers","_createScroller","toggleClass","_scrollerOptions","$container","$wrapper","scrollByThumb","scrollbarVisible","bounceEnabled","inertiaEnabled","isAnyThumbScrolling","_applyScaleRatio","_getPropByDirection","result","_eventHandler","done","isThumbScrollingVertical","isThumbScrollingHorizontal","handleInit","_suppressDirections","_eventForUserAction","_prepareDirections","_eachScroller","isValid","_isContent","_validDirections","closest","length","value","callback","handleStart","_startAction","_saveActive","_resetActive","handleMove","_e$preventDefault","cancel","preventDefault","_adjustDistance","distance","devicePixelRatio","_tryGetDevicePixelRatio","handleEnd","_e$originalEvent","_refreshCursorState","_endAction","handleCancel","handleStop","handleScroll","_this$_scrollAction2","_updateRtlConfig","off","on","_keyDownHandler","clearTimeout","_updateHandlerTimeout","setTimeout","getActiveElement","handled","_scrollByLine","_scrollByPage","_scrollToHome","_scrollToEnd","stopPropagation","lines","scrollOffset","scrollBy","top","left","page","_wheelProp","_dimensionByProp","getter","scrollTo","createActions","_createActionHandler","_updateAction","_createScrollerActions","actionHandler","_createActionArgs","horizontal","scrollerX","vertical","scrollerY","_getScrollOffset","_scrollOffset","event","reachedLeft","reachedRight","reachedTop","reachedBottom","eventName","args","slice","deferreds","apply","scrollTop","scrollLeft","disabledChanged","_isHoverMode","_hoverHandled","relatedTarget","$scrollable","targetScrollable","data","allowedDirections","_allowedDirections","touchDirection","verticalScroller","horizontalScroller","_this$_scrollers$HORI","_isHorizontalAndRtlEnabled","updateRtlPosition","needInitializeRtlConfig","_rtlConfig","scrollRight","clientWidth","windowPixelRatio","_getWindowDevicePixelRatio","skipUpdating","_this$_startAction","_this$_endAction","validate","_validateWheel","_validateMove","_wheelDirection","reachedMin","reachedMax","contentGreaterThanContainer","locatedNotAtBound","scrollFromMin","scrollFromMax","validated","_validateWheelTimer","getDirection","shiftKey","_detachEventHandlers","removeClass"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/ui/scroll_view/m_scrollable.simulated.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/ui/scroll_view/m_scrollable.simulated.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    locate,\r\n    move,\r\n    resetPosition\r\n} from \"../../../common/core/animation/translator\";\r\nimport eventsEngine from \"../../../common/core/events/core/events_engine\";\r\nimport {\r\n    addNamespace as addEventNamespace,\r\n    isCommandKeyPressed,\r\n    isDxMouseWheelEvent,\r\n    normalizeKeyName\r\n} from \"../../../common/core/events/utils/index\";\r\nimport Class from \"../../../core/class\";\r\nimport domAdapter from \"../../../core/dom_adapter\";\r\nimport $ from \"../../../core/renderer\";\r\nimport {\r\n    deferRender,\r\n    deferRenderer,\r\n    deferUpdate,\r\n    deferUpdater\r\n} from \"../../../core/utils/common\";\r\nimport {\r\n    Deferred,\r\n    when\r\n} from \"../../../core/utils/deferred\";\r\nimport {\r\n    extend\r\n} from \"../../../core/utils/extend\";\r\nimport {\r\n    titleize\r\n} from \"../../../core/utils/inflector\";\r\nimport {\r\n    each,\r\n    map\r\n} from \"../../../core/utils/iterator\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../../core/utils/position\";\r\nimport {\r\n    getHeight,\r\n    getWidth\r\n} from \"../../../core/utils/size\";\r\nimport {\r\n    isDefined\r\n} from \"../../../core/utils/type\";\r\nimport {\r\n    getWindow,\r\n    hasWindow\r\n} from \"../../../core/utils/window\";\r\nimport Animator from \"./m_animator\";\r\nimport Scrollbar from \"./m_scrollbar\";\r\nconst SCROLLABLE_SIMULATED = \"dxSimulatedScrollable\";\r\nconst SCROLLABLE_STRATEGY = \"dxScrollableStrategy\";\r\nconst SCROLLABLE_SIMULATED_CURSOR = `${SCROLLABLE_SIMULATED}Cursor`;\r\nconst SCROLLABLE_SIMULATED_KEYBOARD = `${SCROLLABLE_SIMULATED}Keyboard`;\r\nconst SCROLLABLE_SIMULATED_CLASS = \"dx-scrollable-simulated\";\r\nconst SCROLLABLE_SCROLLBARS_ALWAYSVISIBLE = \"dx-scrollable-scrollbars-alwaysvisible\";\r\nconst SCROLLABLE_SCROLLBAR_CLASS = \"dx-scrollable-scrollbar\";\r\nconst VERTICAL = \"vertical\";\r\nconst HORIZONTAL = \"horizontal\";\r\nconst ACCELERATION = .92;\r\nconst OUT_BOUNDS_ACCELERATION = .5;\r\nconst MIN_VELOCITY_LIMIT = 1;\r\nconst FRAME_DURATION = Math.round(1e3 / 60);\r\nconst SCROLL_LINE_HEIGHT = 40;\r\nconst VALIDATE_WHEEL_TIMEOUT = 500;\r\nconst BOUNCE_MIN_VELOCITY_LIMIT = .2;\r\nconst BOUNCE_DURATION = 400;\r\nconst BOUNCE_FRAMES = 400 / FRAME_DURATION;\r\nconst BOUNCE_ACCELERATION_SUM = (1 - .92 ** BOUNCE_FRAMES) / (1 - .92);\r\nconst KEY_CODES = {\r\n    PAGE_UP: \"pageUp\",\r\n    PAGE_DOWN: \"pageDown\",\r\n    END: \"end\",\r\n    HOME: \"home\",\r\n    LEFT: \"leftArrow\",\r\n    UP: \"upArrow\",\r\n    RIGHT: \"rightArrow\",\r\n    DOWN: \"downArrow\",\r\n    TAB: \"tab\"\r\n};\r\nclass InertiaAnimator extends Animator {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.VELOCITY_LIMIT = 1\r\n    }\r\n    ctor(scroller) {\r\n        super.ctor();\r\n        this.scroller = scroller\r\n    }\r\n    _isFinished() {\r\n        return Math.abs(this.scroller._velocity) <= this.VELOCITY_LIMIT\r\n    }\r\n    _step() {\r\n        this.scroller._scrollStep(this.scroller._velocity);\r\n        this.scroller._velocity *= this._acceleration()\r\n    }\r\n    _acceleration() {\r\n        return this.scroller._inBounds() ? .92 : .5\r\n    }\r\n    _complete() {\r\n        this.scroller._scrollComplete()\r\n    }\r\n}\r\nclass BounceAnimator extends InertiaAnimator {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.VELOCITY_LIMIT = .2\r\n    }\r\n    _isFinished() {\r\n        return this.scroller._crossBoundOnNextStep() || super._isFinished()\r\n    }\r\n    _acceleration() {\r\n        return .92\r\n    }\r\n    _complete() {\r\n        this.scroller._move(this.scroller._bounceLocation);\r\n        super._complete()\r\n    }\r\n}\r\nexport class Scroller extends(Class.inherit({})) {\r\n    ctor(options) {\r\n        this._initOptions(options);\r\n        this._initAnimators();\r\n        this._initScrollbar()\r\n    }\r\n    _initOptions(options) {\r\n        this._location = 0;\r\n        this._topReached = false;\r\n        this._bottomReached = false;\r\n        this._axis = options.direction === HORIZONTAL ? \"x\" : \"y\";\r\n        this._prop = options.direction === HORIZONTAL ? \"left\" : \"top\";\r\n        this._dimension = options.direction === HORIZONTAL ? \"width\" : \"height\";\r\n        this._scrollProp = options.direction === HORIZONTAL ? \"scrollLeft\" : \"scrollTop\";\r\n        each(options, ((optionName, optionValue) => {\r\n            this[`_${optionName}`] = optionValue\r\n        }))\r\n    }\r\n    _initAnimators() {\r\n        this._inertiaAnimator = new InertiaAnimator(this);\r\n        this._bounceAnimator = new BounceAnimator(this)\r\n    }\r\n    _initScrollbar() {\r\n        this._scrollbar = new Scrollbar($(\"<div>\").appendTo(this._$container), {\r\n            direction: this._direction,\r\n            visible: this._scrollByThumb,\r\n            visibilityMode: this._visibilityModeNormalize(this._scrollbarVisible),\r\n            expandable: this._scrollByThumb\r\n        });\r\n        this._$scrollbar = this._scrollbar.$element()\r\n    }\r\n    _visibilityModeNormalize(mode) {\r\n        return true === mode ? \"onScroll\" : false === mode ? \"never\" : mode\r\n    }\r\n    _scrollStep(delta) {\r\n        const prevLocation = this._location;\r\n        this._location += delta;\r\n        this._suppressBounce();\r\n        this._move();\r\n        if (Math.abs(prevLocation - this._location) < 1) {\r\n            return\r\n        }\r\n        eventsEngine.triggerHandler(this._$container, {\r\n            type: \"scroll\"\r\n        })\r\n    }\r\n    _suppressBounce() {\r\n        if (this._bounceEnabled || this._inBounds(this._location)) {\r\n            return\r\n        }\r\n        this._velocity = 0;\r\n        this._location = this._boundLocation()\r\n    }\r\n    _boundLocation(location) {\r\n        location = void 0 !== location ? location : this._location;\r\n        return Math.max(Math.min(location, this._maxOffset), this._minOffset)\r\n    }\r\n    _move(location) {\r\n        this._location = void 0 !== location ? location * this._getScaleRatio() : this._location;\r\n        this._moveContent();\r\n        this._moveScrollbar()\r\n    }\r\n    _moveContent() {\r\n        const location = this._location;\r\n        this._$container[this._scrollProp](-location / this._getScaleRatio());\r\n        this._moveContentByTranslator(location)\r\n    }\r\n    _getScaleRatio() {\r\n        if (hasWindow() && !this._scaleRatio) {\r\n            const element = this._$element.get(0);\r\n            const realDimension = this._getRealDimension(element, this._dimension);\r\n            const baseDimension = this._getBaseDimension(element, this._dimension);\r\n            this._scaleRatio = Math.round(realDimension / baseDimension * 100) / 100\r\n        }\r\n        return this._scaleRatio || 1\r\n    }\r\n    _getRealDimension(element, dimension) {\r\n        return Math.round(getBoundingRect(element)[dimension])\r\n    }\r\n    _getBaseDimension(element, dimension) {\r\n        const dimensionName = `offset${titleize(dimension)}`;\r\n        return element[dimensionName]\r\n    }\r\n    _moveContentByTranslator(location) {\r\n        let translateOffset;\r\n        const minOffset = -this._maxScrollPropValue;\r\n        if (location > 0) {\r\n            translateOffset = location\r\n        }\r\n        if (location <= minOffset) {\r\n            translateOffset = location - minOffset\r\n        }\r\n        if (this._translateOffset === translateOffset) {\r\n            return\r\n        }\r\n        const targetLocation = {};\r\n        targetLocation[this._prop] = translateOffset;\r\n        this._translateOffset = translateOffset;\r\n        if (!translateOffset) {\r\n            resetPosition(this._$content);\r\n            return\r\n        }\r\n        move(this._$content, targetLocation)\r\n    }\r\n    _moveScrollbar() {\r\n        this._scrollbar.moveTo(this._location)\r\n    }\r\n    _scrollComplete() {\r\n        if (this._inBounds()) {\r\n            this._hideScrollbar();\r\n            if (this._completeDeferred) {\r\n                this._completeDeferred.resolve()\r\n            }\r\n        }\r\n        this._scrollToBounds()\r\n    }\r\n    _scrollToBounds() {\r\n        var _this$_bounceAction;\r\n        if (this._inBounds()) {\r\n            return\r\n        }\r\n        null === (_this$_bounceAction = this._bounceAction) || void 0 === _this$_bounceAction || _this$_bounceAction.call(this);\r\n        this._setupBounce();\r\n        this._bounceAnimator.start()\r\n    }\r\n    _setupBounce() {\r\n        const boundLocation = this._bounceLocation = this._boundLocation();\r\n        const bounceDistance = boundLocation - this._location;\r\n        this._velocity = bounceDistance / BOUNCE_ACCELERATION_SUM\r\n    }\r\n    _inBounds(location) {\r\n        location = void 0 !== location ? location : this._location;\r\n        return this._boundLocation(location) === location\r\n    }\r\n    _crossBoundOnNextStep() {\r\n        const location = this._location;\r\n        const nextLocation = location + this._velocity;\r\n        return location < this._minOffset && nextLocation >= this._minOffset || location > this._maxOffset && nextLocation <= this._maxOffset\r\n    }\r\n    _initHandler(e) {\r\n        this._stopScrolling();\r\n        this._prepareThumbScrolling(e)\r\n    }\r\n    _stopScrolling() {\r\n        deferRenderer((() => {\r\n            this._hideScrollbar();\r\n            this._inertiaAnimator.stop();\r\n            this._bounceAnimator.stop()\r\n        }))()\r\n    }\r\n    _prepareThumbScrolling(e) {\r\n        if (isDxMouseWheelEvent(e.originalEvent)) {\r\n            return\r\n        }\r\n        const $target = $(e.originalEvent.target);\r\n        const scrollbarClicked = this._isScrollbar($target);\r\n        if (scrollbarClicked) {\r\n            this._moveToMouseLocation(e)\r\n        }\r\n        this._thumbScrolling = scrollbarClicked || this._isThumb($target);\r\n        this._crossThumbScrolling = !this._thumbScrolling && this._isAnyThumbScrolling($target);\r\n        if (this._thumbScrolling) {\r\n            this._scrollbar.feedbackOn()\r\n        }\r\n    }\r\n    _isThumbScrollingHandler($target) {\r\n        return this._isThumb($target)\r\n    }\r\n    _moveToMouseLocation(e) {\r\n        const mouseLocation = e[`page${this._axis.toUpperCase()}`] - this._$element.offset()[this._prop];\r\n        const location = this._location + mouseLocation / this._containerToContentRatio() - getHeight(this._$container) / 2;\r\n        this._scrollStep(-Math.round(location))\r\n    }\r\n    _startHandler() {\r\n        this._showScrollbar()\r\n    }\r\n    _moveHandler(delta) {\r\n        if (this._crossThumbScrolling) {\r\n            return\r\n        }\r\n        if (this._thumbScrolling) {\r\n            delta[this._axis] = -Math.round(delta[this._axis] / this._containerToContentRatio())\r\n        }\r\n        this._scrollBy(delta)\r\n    }\r\n    _scrollBy(delta) {\r\n        delta = delta[this._axis];\r\n        if (!this._inBounds()) {\r\n            delta *= .5\r\n        }\r\n        this._scrollStep(delta)\r\n    }\r\n    _scrollByHandler(delta) {\r\n        if (!delta.x && !delta.y) {\r\n            return\r\n        }\r\n        this._scrollBy(delta);\r\n        this._scrollComplete()\r\n    }\r\n    _containerToContentRatio() {\r\n        return this._scrollbar.containerToContentRatio()\r\n    }\r\n    _endHandler(velocity) {\r\n        this._completeDeferred = Deferred();\r\n        this._velocity = velocity[this._axis];\r\n        this._inertiaHandler();\r\n        this._resetThumbScrolling();\r\n        return this._completeDeferred.promise()\r\n    }\r\n    _inertiaHandler() {\r\n        this._suppressInertia();\r\n        this._inertiaAnimator.start()\r\n    }\r\n    _suppressInertia() {\r\n        if (!this._inertiaEnabled || this._thumbScrolling) {\r\n            this._velocity = 0\r\n        }\r\n    }\r\n    _resetThumbScrolling() {\r\n        this._thumbScrolling = false;\r\n        this._crossThumbScrolling = false\r\n    }\r\n    _stopHandler() {\r\n        if (this._thumbScrolling) {\r\n            this._scrollComplete()\r\n        }\r\n        this._resetThumbScrolling();\r\n        this._scrollToBounds()\r\n    }\r\n    _disposeHandler() {\r\n        this._stopScrolling();\r\n        this._$scrollbar.remove()\r\n    }\r\n    _updateHandler() {\r\n        this._update();\r\n        this._moveToBounds()\r\n    }\r\n    _update() {\r\n        this._stopScrolling();\r\n        return deferUpdate((() => {\r\n            this._resetScaleRatio();\r\n            this._updateLocation();\r\n            this._updateBounds();\r\n            this._updateScrollbar();\r\n            deferRender((() => {\r\n                this._moveScrollbar();\r\n                this._scrollbar.update()\r\n            }))\r\n        }))\r\n    }\r\n    _resetScaleRatio() {\r\n        this._scaleRatio = null\r\n    }\r\n    _updateLocation() {\r\n        this._location = (locate(this._$content)[this._prop] - this._$container[this._scrollProp]()) * this._getScaleRatio()\r\n    }\r\n    _updateBounds() {\r\n        this._maxOffset = this._getMaxOffset();\r\n        this._minOffset = this._getMinOffset()\r\n    }\r\n    _getMaxOffset() {\r\n        return 0\r\n    }\r\n    _getMinOffset() {\r\n        this._maxScrollPropValue = Math.max(this._contentSize() - this._containerSize(), 0);\r\n        return -this._maxScrollPropValue\r\n    }\r\n    _updateScrollbar() {\r\n        deferUpdater((() => {\r\n            const containerSize = this._containerSize();\r\n            const contentSize = this._contentSize();\r\n            const baseContainerSize = this._getBaseDimension(this._$container.get(0), this._dimension);\r\n            const baseContentSize = this._getBaseDimension(this._$content.get(0), this._dimension);\r\n            deferRender((() => {\r\n                this._scrollbar.option({\r\n                    containerSize: containerSize,\r\n                    contentSize: contentSize,\r\n                    baseContainerSize: baseContainerSize,\r\n                    baseContentSize: baseContentSize,\r\n                    scaleRatio: this._getScaleRatio()\r\n                })\r\n            }))\r\n        }))()\r\n    }\r\n    _moveToBounds() {\r\n        deferRenderer(deferUpdater(deferRenderer((() => {\r\n            const location = this._boundLocation();\r\n            const locationChanged = location !== this._location;\r\n            this._location = location;\r\n            this._move();\r\n            if (locationChanged) {\r\n                var _this$_scrollAction;\r\n                null === (_this$_scrollAction = this._scrollAction) || void 0 === _this$_scrollAction || _this$_scrollAction.call(this)\r\n            }\r\n        }))))()\r\n    }\r\n    _createActionsHandler(actions) {\r\n        this._scrollAction = actions.scroll;\r\n        this._bounceAction = actions.bounce\r\n    }\r\n    _showScrollbar() {\r\n        this._scrollbar.option(\"visible\", true)\r\n    }\r\n    _hideScrollbar() {\r\n        this._scrollbar.option(\"visible\", false)\r\n    }\r\n    _containerSize() {\r\n        return this._getRealDimension(this._$container.get(0), this._dimension)\r\n    }\r\n    _contentSize() {\r\n        const isOverflowHidden = \"hidden\" === this._$content.css(`overflow${this._axis.toUpperCase()}`);\r\n        let contentSize = this._getRealDimension(this._$content.get(0), this._dimension);\r\n        if (!isOverflowHidden) {\r\n            const containerScrollSize = this._$content[0][`scroll${titleize(this._dimension)}`] * this._getScaleRatio();\r\n            contentSize = Math.max(containerScrollSize, contentSize)\r\n        }\r\n        return contentSize\r\n    }\r\n    _validateEvent(e) {\r\n        const $target = $(e.originalEvent.target);\r\n        return this._isThumb($target) || this._isScrollbar($target)\r\n    }\r\n    _isThumb($element) {\r\n        return this._scrollByThumb && this._scrollbar.isThumb($element)\r\n    }\r\n    _isScrollbar($element) {\r\n        return this._scrollByThumb && (null === $element || void 0 === $element ? void 0 : $element.is(this._$scrollbar))\r\n    }\r\n    _reachedMin() {\r\n        return Math.round(this._location - this._minOffset) <= 0\r\n    }\r\n    _reachedMax() {\r\n        return Math.round(this._location - this._maxOffset) >= 0\r\n    }\r\n    _cursorEnterHandler() {\r\n        this._resetScaleRatio();\r\n        this._updateScrollbar();\r\n        this._scrollbar.cursorEnter()\r\n    }\r\n    _cursorLeaveHandler() {\r\n        this._scrollbar.cursorLeave()\r\n    }\r\n    dispose() {}\r\n}\r\nlet hoveredScrollable;\r\nlet activeScrollable;\r\nexport class SimulatedStrategy extends(Class.inherit({})) {\r\n    ctor(scrollable) {\r\n        this._init(scrollable)\r\n    }\r\n    _init(scrollable) {\r\n        this._component = scrollable;\r\n        this._$element = scrollable.$element();\r\n        this._$container = $(scrollable.container());\r\n        this._$wrapper = scrollable._$wrapper;\r\n        this._$content = scrollable.$content();\r\n        this.option = scrollable.option.bind(scrollable);\r\n        this._createActionByOption = scrollable._createActionByOption.bind(scrollable);\r\n        this._isLocked = scrollable._isLocked.bind(scrollable);\r\n        this._isDirection = scrollable._isDirection.bind(scrollable);\r\n        this._allowedDirection = scrollable._allowedDirection.bind(scrollable);\r\n        this._getMaxOffset = scrollable._getMaxOffset.bind(scrollable)\r\n    }\r\n    render() {\r\n        this._$element.addClass(\"dx-scrollable-simulated\");\r\n        this._createScrollers();\r\n        if (this.option(\"useKeyboard\")) {\r\n            this._$container.prop(\"tabIndex\", 0)\r\n        }\r\n        this._attachKeyboardHandler();\r\n        this._attachCursorHandlers()\r\n    }\r\n    _createScrollers() {\r\n        this._scrollers = {};\r\n        if (this._isDirection(HORIZONTAL)) {\r\n            this._createScroller(HORIZONTAL)\r\n        }\r\n        if (this._isDirection(VERTICAL)) {\r\n            this._createScroller(VERTICAL)\r\n        }\r\n        this._$element.toggleClass(SCROLLABLE_SCROLLBARS_ALWAYSVISIBLE, \"always\" === this.option(\"showScrollbar\"))\r\n    }\r\n    _createScroller(direction) {\r\n        this._scrollers[direction] = new Scroller(this._scrollerOptions(direction))\r\n    }\r\n    _scrollerOptions(direction) {\r\n        return {\r\n            direction: direction,\r\n            $content: this._$content,\r\n            $container: this._$container,\r\n            $wrapper: this._$wrapper,\r\n            $element: this._$element,\r\n            scrollByThumb: this.option(\"scrollByThumb\"),\r\n            scrollbarVisible: this.option(\"showScrollbar\"),\r\n            bounceEnabled: this.option(\"bounceEnabled\"),\r\n            inertiaEnabled: this.option(\"inertiaEnabled\"),\r\n            isAnyThumbScrolling: this._isAnyThumbScrolling.bind(this)\r\n        }\r\n    }\r\n    _applyScaleRatio(targetLocation) {\r\n        for (const direction in this._scrollers) {\r\n            const prop = this._getPropByDirection(direction);\r\n            if (isDefined(targetLocation[prop])) {\r\n                const scroller = this._scrollers[direction];\r\n                targetLocation[prop] *= scroller._getScaleRatio()\r\n            }\r\n        }\r\n        return targetLocation\r\n    }\r\n    _isAnyThumbScrolling($target) {\r\n        let result = false;\r\n        this._eventHandler(\"isThumbScrolling\", $target).done(((isThumbScrollingVertical, isThumbScrollingHorizontal) => {\r\n            result = isThumbScrollingVertical || isThumbScrollingHorizontal\r\n        }));\r\n        return result\r\n    }\r\n    handleInit(e) {\r\n        this._suppressDirections(e);\r\n        this._eventForUserAction = e;\r\n        this._eventHandler(\"init\", e)\r\n    }\r\n    _suppressDirections(e) {\r\n        if (isDxMouseWheelEvent(e.originalEvent)) {\r\n            this._prepareDirections(true);\r\n            return\r\n        }\r\n        this._prepareDirections();\r\n        this._eachScroller((function(scroller, direction) {\r\n            const $target = $(e.originalEvent.target);\r\n            const isValid = scroller._validateEvent(e) || this.option(\"scrollByContent\") && this._isContent($target);\r\n            this._validDirections[direction] = isValid\r\n        }))\r\n    }\r\n    _isContent($element) {\r\n        return !!$element.closest(this._$element).length\r\n    }\r\n    _prepareDirections(value) {\r\n        value = value || false;\r\n        this._validDirections = {};\r\n        this._validDirections[HORIZONTAL] = value;\r\n        this._validDirections[VERTICAL] = value\r\n    }\r\n    _eachScroller(callback) {\r\n        callback = callback.bind(this);\r\n        each(this._scrollers, ((direction, scroller) => {\r\n            callback(scroller, direction)\r\n        }))\r\n    }\r\n    handleStart(e) {\r\n        this._eventForUserAction = e;\r\n        this._eventHandler(\"start\").done(this._startAction)\r\n    }\r\n    _saveActive() {\r\n        activeScrollable = this\r\n    }\r\n    _resetActive() {\r\n        if (activeScrollable === this) {\r\n            activeScrollable = null\r\n        }\r\n    }\r\n    handleMove(e) {\r\n        var _e$preventDefault;\r\n        if (this._isLocked()) {\r\n            e.cancel = true;\r\n            this._resetActive();\r\n            return\r\n        }\r\n        this._saveActive();\r\n        null === (_e$preventDefault = e.preventDefault) || void 0 === _e$preventDefault || _e$preventDefault.call(e);\r\n        this._adjustDistance(e, e.delta);\r\n        this._eventForUserAction = e;\r\n        this._eventHandler(\"move\", e.delta)\r\n    }\r\n    _adjustDistance(e, distance) {\r\n        distance.x *= this._validDirections[HORIZONTAL];\r\n        distance.y *= this._validDirections[VERTICAL];\r\n        const devicePixelRatio = this._tryGetDevicePixelRatio();\r\n        if (devicePixelRatio && isDxMouseWheelEvent(e.originalEvent)) {\r\n            distance.x = Math.round(distance.x / devicePixelRatio * 100) / 100;\r\n            distance.y = Math.round(distance.y / devicePixelRatio * 100) / 100\r\n        }\r\n    }\r\n    _tryGetDevicePixelRatio() {\r\n        if (hasWindow()) {\r\n            return getWindow().devicePixelRatio\r\n        }\r\n    }\r\n    handleEnd(e) {\r\n        var _e$originalEvent;\r\n        this._resetActive();\r\n        this._refreshCursorState(null === (_e$originalEvent = e.originalEvent) || void 0 === _e$originalEvent ? void 0 : _e$originalEvent.target);\r\n        this._adjustDistance(e, e.velocity);\r\n        this._eventForUserAction = e;\r\n        return this._eventHandler(\"end\", e.velocity).done(this._endAction)\r\n    }\r\n    handleCancel(e) {\r\n        this._resetActive();\r\n        this._eventForUserAction = e;\r\n        return this._eventHandler(\"end\", {\r\n            x: 0,\r\n            y: 0\r\n        })\r\n    }\r\n    handleStop() {\r\n        this._resetActive();\r\n        this._eventHandler(\"stop\")\r\n    }\r\n    handleScroll() {\r\n        var _this$_scrollAction2;\r\n        this._updateRtlConfig();\r\n        null === (_this$_scrollAction2 = this._scrollAction) || void 0 === _this$_scrollAction2 || _this$_scrollAction2.call(this)\r\n    }\r\n    _attachKeyboardHandler() {\r\n        eventsEngine.off(this._$element, `.${SCROLLABLE_SIMULATED_KEYBOARD}`);\r\n        if (!this.option(\"disabled\") && this.option(\"useKeyboard\")) {\r\n            eventsEngine.on(this._$element, addEventNamespace(\"keydown\", SCROLLABLE_SIMULATED_KEYBOARD), this._keyDownHandler.bind(this))\r\n        }\r\n    }\r\n    _keyDownHandler(e) {\r\n        clearTimeout(this._updateHandlerTimeout);\r\n        this._updateHandlerTimeout = setTimeout((() => {\r\n            if (normalizeKeyName(e) === KEY_CODES.TAB) {\r\n                this._eachScroller((scroller => {\r\n                    scroller._updateHandler()\r\n                }))\r\n            }\r\n        }));\r\n        if (!this._$container.is(domAdapter.getActiveElement(this._$container.get(0)))) {\r\n            return\r\n        }\r\n        let handled = true;\r\n        switch (normalizeKeyName(e)) {\r\n            case KEY_CODES.DOWN:\r\n                this._scrollByLine({\r\n                    y: 1\r\n                });\r\n                break;\r\n            case KEY_CODES.UP:\r\n                this._scrollByLine({\r\n                    y: -1\r\n                });\r\n                break;\r\n            case KEY_CODES.RIGHT:\r\n                this._scrollByLine({\r\n                    x: 1\r\n                });\r\n                break;\r\n            case KEY_CODES.LEFT:\r\n                this._scrollByLine({\r\n                    x: -1\r\n                });\r\n                break;\r\n            case KEY_CODES.PAGE_DOWN:\r\n                this._scrollByPage(1);\r\n                break;\r\n            case KEY_CODES.PAGE_UP:\r\n                this._scrollByPage(-1);\r\n                break;\r\n            case KEY_CODES.HOME:\r\n                this._scrollToHome();\r\n                break;\r\n            case KEY_CODES.END:\r\n                this._scrollToEnd();\r\n                break;\r\n            default:\r\n                handled = false\r\n        }\r\n        if (handled) {\r\n            e.stopPropagation();\r\n            e.preventDefault()\r\n        }\r\n    }\r\n    _scrollByLine(lines) {\r\n        const devicePixelRatio = this._tryGetDevicePixelRatio();\r\n        let scrollOffset = 40;\r\n        if (devicePixelRatio) {\r\n            scrollOffset = Math.abs(scrollOffset / devicePixelRatio * 100) / 100\r\n        }\r\n        this.scrollBy({\r\n            top: (lines.y || 0) * -scrollOffset,\r\n            left: (lines.x || 0) * -scrollOffset\r\n        })\r\n    }\r\n    _scrollByPage(page) {\r\n        const prop = this._wheelProp();\r\n        const dimension = this._dimensionByProp(prop);\r\n        const distance = {};\r\n        const getter = \"width\" === dimension ? getWidth : getHeight;\r\n        distance[prop] = page * -getter(this._$container);\r\n        this.scrollBy(distance)\r\n    }\r\n    _dimensionByProp(prop) {\r\n        return \"left\" === prop ? \"width\" : \"height\"\r\n    }\r\n    _getPropByDirection(direction) {\r\n        return direction === HORIZONTAL ? \"left\" : \"top\"\r\n    }\r\n    _scrollToHome() {\r\n        const prop = this._wheelProp();\r\n        const distance = {};\r\n        distance[prop] = 0;\r\n        this._component.scrollTo(distance)\r\n    }\r\n    _scrollToEnd() {\r\n        const prop = this._wheelProp();\r\n        const dimension = this._dimensionByProp(prop);\r\n        const distance = {};\r\n        const getter = \"width\" === dimension ? getWidth : getHeight;\r\n        distance[prop] = getter(this._$content) - getter(this._$container);\r\n        this._component.scrollTo(distance)\r\n    }\r\n    createActions() {\r\n        this._startAction = this._createActionHandler(\"onStart\");\r\n        this._endAction = this._createActionHandler(\"onEnd\");\r\n        this._updateAction = this._createActionHandler(\"onUpdated\");\r\n        this._createScrollerActions()\r\n    }\r\n    _createScrollerActions() {\r\n        this._scrollAction = this._createActionHandler(\"onScroll\");\r\n        this._bounceAction = this._createActionHandler(\"onBounce\");\r\n        this._eventHandler(\"createActions\", {\r\n            scroll: this._scrollAction,\r\n            bounce: this._bounceAction\r\n        })\r\n    }\r\n    _createActionHandler(optionName) {\r\n        const actionHandler = this._createActionByOption(optionName);\r\n        return () => {\r\n            actionHandler(extend(this._createActionArgs(), arguments))\r\n        }\r\n    }\r\n    _createActionArgs() {\r\n        const {\r\n            horizontal: scrollerX,\r\n            vertical: scrollerY\r\n        } = this._scrollers;\r\n        const offset = this._getScrollOffset();\r\n        this._scrollOffset = {\r\n            top: scrollerY && offset.top,\r\n            left: scrollerX && offset.left\r\n        };\r\n        return {\r\n            event: this._eventForUserAction,\r\n            scrollOffset: this._scrollOffset,\r\n            reachedLeft: null === scrollerX || void 0 === scrollerX ? void 0 : scrollerX._reachedMax(),\r\n            reachedRight: null === scrollerX || void 0 === scrollerX ? void 0 : scrollerX._reachedMin(),\r\n            reachedTop: null === scrollerY || void 0 === scrollerY ? void 0 : scrollerY._reachedMax(),\r\n            reachedBottom: null === scrollerY || void 0 === scrollerY ? void 0 : scrollerY._reachedMin()\r\n        }\r\n    }\r\n    _getScrollOffset() {\r\n        return {\r\n            top: -this.location().top,\r\n            left: -this.location().left\r\n        }\r\n    }\r\n    _eventHandler(eventName, location) {\r\n        const args = [].slice.call(arguments).slice(1);\r\n        const deferreds = map(this._scrollers, (scroller => scroller[`_${eventName}Handler`].apply(scroller, args)));\r\n        return when.apply($, deferreds).promise()\r\n    }\r\n    location() {\r\n        const location = locate(this._$content);\r\n        location.top -= this._$container.scrollTop();\r\n        location.left -= this._$container.scrollLeft();\r\n        return location\r\n    }\r\n    disabledChanged() {\r\n        this._attachCursorHandlers()\r\n    }\r\n    _attachCursorHandlers() {\r\n        eventsEngine.off(this._$element, `.${SCROLLABLE_SIMULATED_CURSOR}`);\r\n        if (!this.option(\"disabled\") && this._isHoverMode()) {\r\n            eventsEngine.on(this._$element, addEventNamespace(\"mouseenter\", SCROLLABLE_SIMULATED_CURSOR), this._cursorEnterHandler.bind(this));\r\n            eventsEngine.on(this._$element, addEventNamespace(\"mouseleave\", SCROLLABLE_SIMULATED_CURSOR), this._cursorLeaveHandler.bind(this))\r\n        }\r\n    }\r\n    _isHoverMode() {\r\n        return \"onHover\" === this.option(\"showScrollbar\")\r\n    }\r\n    _cursorEnterHandler(e) {\r\n        e = e || {};\r\n        e.originalEvent = e.originalEvent || {};\r\n        if (activeScrollable || e.originalEvent._hoverHandled) {\r\n            return\r\n        }\r\n        if (hoveredScrollable) {\r\n            hoveredScrollable._cursorLeaveHandler()\r\n        }\r\n        hoveredScrollable = this;\r\n        this._eventHandler(\"cursorEnter\");\r\n        e.originalEvent._hoverHandled = true\r\n    }\r\n    _cursorLeaveHandler(e) {\r\n        if (hoveredScrollable !== this || activeScrollable === hoveredScrollable) {\r\n            return\r\n        }\r\n        this._eventHandler(\"cursorLeave\");\r\n        hoveredScrollable = null;\r\n        this._refreshCursorState(null === e || void 0 === e ? void 0 : e.relatedTarget)\r\n    }\r\n    _refreshCursorState(target) {\r\n        if (!this._isHoverMode() && (!target || activeScrollable)) {\r\n            return\r\n        }\r\n        const $target = $(target);\r\n        const $scrollable = $target.closest(\".dx-scrollable-simulated:not(.dx-state-disabled)\");\r\n        const targetScrollable = $scrollable.length && $scrollable.data(SCROLLABLE_STRATEGY);\r\n        if (hoveredScrollable && hoveredScrollable !== targetScrollable) {\r\n            hoveredScrollable._cursorLeaveHandler()\r\n        }\r\n        if (targetScrollable) {\r\n            targetScrollable._cursorEnterHandler()\r\n        }\r\n    }\r\n    update() {\r\n        const result = this._eventHandler(\"update\").done(this._updateAction);\r\n        return when(result, deferUpdate((() => {\r\n            const allowedDirections = this._allowedDirections();\r\n            deferRender((() => {\r\n                let touchDirection = allowedDirections.vertical ? \"pan-x\" : \"\";\r\n                touchDirection = allowedDirections.horizontal ? \"pan-y\" : touchDirection;\r\n                touchDirection = allowedDirections.vertical && allowedDirections.horizontal ? \"none\" : touchDirection;\r\n                this._$container.css(\"touchAction\", touchDirection)\r\n            }));\r\n            return when().promise()\r\n        })))\r\n    }\r\n    _allowedDirections() {\r\n        const bounceEnabled = this.option(\"bounceEnabled\");\r\n        const verticalScroller = this._scrollers[VERTICAL];\r\n        const horizontalScroller = this._scrollers[HORIZONTAL];\r\n        return {\r\n            vertical: verticalScroller && (verticalScroller._minOffset < 0 || bounceEnabled),\r\n            horizontal: horizontalScroller && (horizontalScroller._minOffset < 0 || bounceEnabled)\r\n        }\r\n    }\r\n    _updateBounds() {\r\n        var _this$_scrollers$HORI;\r\n        null === (_this$_scrollers$HORI = this._scrollers[HORIZONTAL]) || void 0 === _this$_scrollers$HORI || _this$_scrollers$HORI._updateBounds()\r\n    }\r\n    _isHorizontalAndRtlEnabled() {\r\n        return this.option(\"rtlEnabled\") && this.option(\"direction\") !== VERTICAL\r\n    }\r\n    updateRtlPosition(needInitializeRtlConfig) {\r\n        if (needInitializeRtlConfig) {\r\n            this._rtlConfig = {\r\n                scrollRight: 0,\r\n                clientWidth: this._$container.get(0).clientWidth,\r\n                windowPixelRatio: this._getWindowDevicePixelRatio()\r\n            }\r\n        }\r\n        this._updateBounds();\r\n        if (this._isHorizontalAndRtlEnabled()) {\r\n            let scrollLeft = this._getMaxOffset().left - this._rtlConfig.scrollRight;\r\n            if (scrollLeft <= 0) {\r\n                scrollLeft = 0;\r\n                this._rtlConfig.scrollRight = this._getMaxOffset().left\r\n            }\r\n            if (this._getScrollOffset().left !== scrollLeft) {\r\n                this._rtlConfig.skipUpdating = true;\r\n                this._component.scrollTo({\r\n                    left: scrollLeft\r\n                });\r\n                this._rtlConfig.skipUpdating = false\r\n            }\r\n        }\r\n    }\r\n    _updateRtlConfig() {\r\n        if (this._isHorizontalAndRtlEnabled() && !this._rtlConfig.skipUpdating) {\r\n            const {\r\n                clientWidth: clientWidth,\r\n                scrollLeft: scrollLeft\r\n            } = this._$container.get(0);\r\n            const windowPixelRatio = this._getWindowDevicePixelRatio();\r\n            if (this._rtlConfig.windowPixelRatio === windowPixelRatio && this._rtlConfig.clientWidth === clientWidth) {\r\n                this._rtlConfig.scrollRight = this._getMaxOffset().left - scrollLeft\r\n            }\r\n            this._rtlConfig.clientWidth = clientWidth;\r\n            this._rtlConfig.windowPixelRatio = windowPixelRatio\r\n        }\r\n    }\r\n    _getWindowDevicePixelRatio() {\r\n        return hasWindow() ? getWindow().devicePixelRatio : 1\r\n    }\r\n    scrollBy(distance) {\r\n        var _this$_startAction, _this$_endAction;\r\n        const verticalScroller = this._scrollers[VERTICAL];\r\n        const horizontalScroller = this._scrollers[HORIZONTAL];\r\n        if (verticalScroller) {\r\n            distance.top = verticalScroller._boundLocation(distance.top + verticalScroller._location) - verticalScroller._location\r\n        }\r\n        if (horizontalScroller) {\r\n            distance.left = horizontalScroller._boundLocation(distance.left + horizontalScroller._location) - horizontalScroller._location\r\n        }\r\n        this._prepareDirections(true);\r\n        null === (_this$_startAction = this._startAction) || void 0 === _this$_startAction || _this$_startAction.call(this);\r\n        this._eventHandler(\"scrollBy\", {\r\n            x: distance.left,\r\n            y: distance.top\r\n        });\r\n        null === (_this$_endAction = this._endAction) || void 0 === _this$_endAction || _this$_endAction.call(this);\r\n        this._updateRtlConfig()\r\n    }\r\n    validate(e) {\r\n        if (isDxMouseWheelEvent(e) && isCommandKeyPressed(e)) {\r\n            return false\r\n        }\r\n        if (this.option(\"disabled\")) {\r\n            return false\r\n        }\r\n        if (this.option(\"bounceEnabled\")) {\r\n            return true\r\n        }\r\n        return isDxMouseWheelEvent(e) ? this._validateWheel(e) : this._validateMove(e)\r\n    }\r\n    _validateWheel(e) {\r\n        const scroller = this._scrollers[this._wheelDirection(e)];\r\n        const reachedMin = scroller._reachedMin();\r\n        const reachedMax = scroller._reachedMax();\r\n        const contentGreaterThanContainer = !reachedMin || !reachedMax;\r\n        const locatedNotAtBound = !reachedMin && !reachedMax;\r\n        const scrollFromMin = reachedMin && e.delta > 0;\r\n        const scrollFromMax = reachedMax && e.delta < 0;\r\n        let validated = contentGreaterThanContainer && (locatedNotAtBound || scrollFromMin || scrollFromMax);\r\n        validated = validated || void 0 !== this._validateWheelTimer;\r\n        if (validated) {\r\n            clearTimeout(this._validateWheelTimer);\r\n            this._validateWheelTimer = setTimeout((() => {\r\n                this._validateWheelTimer = void 0\r\n            }), 500)\r\n        }\r\n        return validated\r\n    }\r\n    _validateMove(e) {\r\n        if (!this.option(\"scrollByContent\") && !$(e.target).closest(\".dx-scrollable-scrollbar\").length) {\r\n            return false\r\n        }\r\n        return this._allowedDirection()\r\n    }\r\n    getDirection(e) {\r\n        return isDxMouseWheelEvent(e) ? this._wheelDirection(e) : this._allowedDirection()\r\n    }\r\n    _wheelProp() {\r\n        return this._wheelDirection() === HORIZONTAL ? \"left\" : \"top\"\r\n    }\r\n    _wheelDirection(e) {\r\n        switch (this.option(\"direction\")) {\r\n            case HORIZONTAL:\r\n                return HORIZONTAL;\r\n            case VERTICAL:\r\n                return VERTICAL;\r\n            default:\r\n                return null !== e && void 0 !== e && e.shiftKey ? HORIZONTAL : VERTICAL\r\n        }\r\n    }\r\n    dispose() {\r\n        this._resetActive();\r\n        if (hoveredScrollable === this) {\r\n            hoveredScrollable = null\r\n        }\r\n        this._eventHandler(\"dispose\");\r\n        this._detachEventHandlers();\r\n        this._$element.removeClass(\"dx-scrollable-simulated\");\r\n        this._eventForUserAction = null;\r\n        clearTimeout(this._validateWheelTimer);\r\n        clearTimeout(this._updateHandlerTimeout)\r\n    }\r\n    _detachEventHandlers() {\r\n        eventsEngine.off(this._$element, `.${SCROLLABLE_SIMULATED_CURSOR}`);\r\n        eventsEngine.off(this._$container, `.${SCROLLABLE_SIMULATED_KEYBOARD}`)\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}