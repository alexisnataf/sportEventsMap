{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/ui/selection/m_selection.strategy.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport dataQuery from \"../../../common/data/query\";\nimport { equalByValue, getKeyHash, noop } from \"../../../core/utils/common\";\nimport { Deferred } from \"../../../core/utils/deferred\";\nimport { isObject, isPlainObject, isPromise } from \"../../../core/utils/type\";\nexport default class SelectionStrategy {\n  constructor(options) {\n    this._lastSelectAllPageDeferred = Deferred().reject();\n    this.options = options;\n    this._setOption(\"disabledItemKeys\", []);\n    this._clearItemKeys();\n  }\n  _clearItemKeys() {\n    this._setOption(\"addedItemKeys\", []);\n    this._setOption(\"removedItemKeys\", []);\n    this._setOption(\"removedItems\", []);\n    this._setOption(\"addedItems\", []);\n  }\n  validate() {}\n  _setOption(name, value) {\n    this.options[name] = value;\n  }\n  onSelectionChanging() {\n    const {\n      selectedItems: selectedItems,\n      selectedItemKeys: selectedItemKeys,\n      addedItemKeys: addedItemKeys,\n      removedItemKeys: removedItemKeys,\n      addedItems: addedItems,\n      removedItems: removedItems,\n      onSelectionChanging = noop\n    } = this.options;\n    const selectionChangingArgs = {\n      selectedItems: selectedItems,\n      selectedItemKeys: selectedItemKeys,\n      addedItemKeys: addedItemKeys,\n      removedItemKeys: removedItemKeys,\n      addedItems: addedItems,\n      removedItems: removedItems,\n      cancel: false\n    };\n    onSelectionChanging(selectionChangingArgs);\n    return selectionChangingArgs.cancel;\n  }\n  _callCallbackIfNotCanceled(callback, cancelCallback) {\n    const cancelResult = this.onSelectionChanging();\n    if (isPromise(cancelResult)) {\n      cancelResult.then(cancel => {\n        if (!cancel) {\n          callback();\n        } else {\n          cancelCallback();\n        }\n      }).catch(() => {\n        callback();\n      });\n    } else if (!cancelResult) {\n      callback();\n    } else {\n      cancelCallback();\n    }\n  }\n  onSelectionChanged() {\n    const {\n      selectedItems: selectedItems,\n      selectedItemKeys: selectedItemKeys,\n      addedItemKeys: addedItemKeys,\n      removedItemKeys: removedItemKeys,\n      addedItems: addedItems,\n      removedItems: removedItems,\n      onSelectionChanged = noop\n    } = this.options;\n    this._clearItemKeys();\n    onSelectionChanged({\n      selectedItems: selectedItems,\n      selectedItemKeys: selectedItemKeys,\n      addedItemKeys: addedItemKeys,\n      removedItemKeys: removedItemKeys,\n      addedItems: addedItems,\n      removedItems: removedItems\n    });\n  }\n  equalKeys(key1, key2) {\n    if (this.options.equalByReference) {\n      if (isObject(key1) && isObject(key2)) {\n        return key1 === key2;\n      }\n    }\n    return equalByValue(key1, key2);\n  }\n  getSelectableItems(items) {\n    return items.filter(item => !(null !== item && void 0 !== item && item.disabled));\n  }\n  _clearSelection(keys, preserve, isDeselect, isSelectAll) {\n    keys = keys || [];\n    keys = Array.isArray(keys) ? keys : [keys];\n    this.validate();\n    return this.selectedItemKeys(keys, preserve, isDeselect, isSelectAll);\n  }\n  _removeTemplateProperty(remoteFilter) {\n    if (Array.isArray(remoteFilter)) {\n      return remoteFilter.map(f => this._removeTemplateProperty(f));\n    }\n    if (isObject(remoteFilter)) {\n      delete remoteFilter.template;\n    }\n    return remoteFilter;\n  }\n  _loadFilteredData(remoteFilter, localFilter, select, isSelectAll) {\n    const filterLength = encodeURI(JSON.stringify(this._removeTemplateProperty(remoteFilter))).length;\n    const needLoadAllData = this.options.maxFilterLengthInRequest && filterLength > this.options.maxFilterLengthInRequest;\n    const deferred = Deferred();\n    const loadOptions = {\n      filter: needLoadAllData ? void 0 : remoteFilter,\n      select: needLoadAllData ? this.options.dataFields() : select || this.options.dataFields()\n    };\n    if (remoteFilter && 0 === remoteFilter.length) {\n      deferred.resolve([]);\n    } else {\n      this.options.load(loadOptions).done(items => {\n        let filteredItems = isPlainObject(items) ? items.data : items;\n        if (localFilter && !isSelectAll) {\n          filteredItems = filteredItems.filter(localFilter);\n        } else if (needLoadAllData) {\n          filteredItems = dataQuery(filteredItems).filter(remoteFilter).toArray();\n        }\n        deferred.resolve(filteredItems);\n      }).fail(deferred.reject.bind(deferred));\n    }\n    return deferred;\n  }\n  updateSelectedItemKeyHash(keys) {\n    for (let i = 0; i < keys.length; i++) {\n      const keyHash = getKeyHash(keys[i]);\n      if (!isObject(keyHash)) {\n        this.options.keyHashIndices[keyHash] = this.options.keyHashIndices[keyHash] || [];\n        const keyIndices = this.options.keyHashIndices[keyHash];\n        keyIndices.push(i);\n      }\n    }\n  }\n  _isAnyItemSelected(items) {\n    for (let i = 0; i < items.length; i++) {\n      if (this.options.isItemSelected(items[i])) {\n        return;\n      }\n    }\n    return false;\n  }\n  _getFullSelectAllState() {\n    const items = this.options.plainItems();\n    const dataFilter = this.options.filter();\n    let selectedItems = this.options.ignoreDisabledItems ? this.options.selectedItems : this.options.selectedItems.filter(item => !(null !== item && void 0 !== item && item.disabled));\n    if (dataFilter) {\n      selectedItems = dataQuery(selectedItems).filter(dataFilter).toArray();\n    }\n    const selectedItemsLength = selectedItems.length;\n    const disabledItemsLength = items.length - this.getSelectableItems(items).length;\n    if (!selectedItemsLength) {\n      return this._isAnyItemSelected(items);\n    }\n    if (selectedItemsLength >= this.options.totalCount() - disabledItemsLength) {\n      return true;\n    }\n    return;\n  }\n  _getVisibleSelectAllState() {\n    const items = this.getSelectableItems(this.options.plainItems());\n    let hasSelectedItems = false;\n    let hasUnselectedItems = false;\n    for (let i = 0; i < items.length; i++) {\n      const item = items[i];\n      const itemData = this.options.getItemData(item);\n      const key = this.options.keyOf(itemData);\n      if (this.options.isSelectableItem(item)) {\n        if (this.isItemKeySelected(key)) {\n          hasSelectedItems = true;\n        } else {\n          hasUnselectedItems = true;\n        }\n      }\n    }\n    if (hasSelectedItems) {\n      return !hasUnselectedItems ? true : void 0;\n    }\n    return false;\n  }\n  isItemKeySelected(itemKey) {\n    throw new Error(\"isItemKeySelected method should be overriden\");\n  }\n  addSelectedItem(itemKey, itemData) {\n    throw new Error(\"addSelectedItem method should be overriden\");\n  }\n  removeSelectedItem(itemKey) {\n    throw new Error(\"removeSelectedItem method should be overriden\");\n  }\n  _selectAllPlainItems(isDeselect) {\n    const items = this.getSelectableItems(this.options.plainItems());\n    for (let i = 0; i < items.length; i++) {\n      const item = items[i];\n      if (this.options.isSelectableItem(item)) {\n        const itemData = this.options.getItemData(item);\n        const itemKey = this.options.keyOf(itemData);\n        const isSelected = this.isItemKeySelected(itemKey);\n        if (!isSelected && !isDeselect) {\n          this.addSelectedItem(itemKey, itemData);\n        }\n        if (isSelected && isDeselect) {\n          this.removeSelectedItem(itemKey);\n        }\n      }\n    }\n  }\n}","map":{"version":3,"names":["dataQuery","equalByValue","getKeyHash","noop","Deferred","isObject","isPlainObject","isPromise","SelectionStrategy","constructor","options","_lastSelectAllPageDeferred","reject","_setOption","_clearItemKeys","validate","name","value","onSelectionChanging","selectedItems","selectedItemKeys","addedItemKeys","removedItemKeys","addedItems","removedItems","selectionChangingArgs","cancel","_callCallbackIfNotCanceled","callback","cancelCallback","cancelResult","then","catch","onSelectionChanged","equalKeys","key1","key2","equalByReference","getSelectableItems","items","filter","item","disabled","_clearSelection","keys","preserve","isDeselect","isSelectAll","Array","isArray","_removeTemplateProperty","remoteFilter","map","f","template","_loadFilteredData","localFilter","select","filterLength","encodeURI","JSON","stringify","length","needLoadAllData","maxFilterLengthInRequest","deferred","loadOptions","dataFields","resolve","load","done","filteredItems","data","toArray","fail","bind","updateSelectedItemKeyHash","i","keyHash","keyHashIndices","keyIndices","push","_isAnyItemSelected","isItemSelected","_getFullSelectAllState","plainItems","dataFilter","ignoreDisabledItems","selectedItemsLength","disabledItemsLength","totalCount","_getVisibleSelectAllState","hasSelectedItems","hasUnselectedItems","itemData","getItemData","key","keyOf","isSelectableItem","isItemKeySelected","itemKey","Error","addSelectedItem","removeSelectedItem","_selectAllPlainItems","isSelected"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/ui/selection/m_selection.strategy.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/ui/selection/m_selection.strategy.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport dataQuery from \"../../../common/data/query\";\r\nimport {\r\n    equalByValue,\r\n    getKeyHash,\r\n    noop\r\n} from \"../../../core/utils/common\";\r\nimport {\r\n    Deferred\r\n} from \"../../../core/utils/deferred\";\r\nimport {\r\n    isObject,\r\n    isPlainObject,\r\n    isPromise\r\n} from \"../../../core/utils/type\";\r\nexport default class SelectionStrategy {\r\n    constructor(options) {\r\n        this._lastSelectAllPageDeferred = Deferred().reject();\r\n        this.options = options;\r\n        this._setOption(\"disabledItemKeys\", []);\r\n        this._clearItemKeys()\r\n    }\r\n    _clearItemKeys() {\r\n        this._setOption(\"addedItemKeys\", []);\r\n        this._setOption(\"removedItemKeys\", []);\r\n        this._setOption(\"removedItems\", []);\r\n        this._setOption(\"addedItems\", [])\r\n    }\r\n    validate() {}\r\n    _setOption(name, value) {\r\n        this.options[name] = value\r\n    }\r\n    onSelectionChanging() {\r\n        const {\r\n            selectedItems: selectedItems,\r\n            selectedItemKeys: selectedItemKeys,\r\n            addedItemKeys: addedItemKeys,\r\n            removedItemKeys: removedItemKeys,\r\n            addedItems: addedItems,\r\n            removedItems: removedItems,\r\n            onSelectionChanging: onSelectionChanging = noop\r\n        } = this.options;\r\n        const selectionChangingArgs = {\r\n            selectedItems: selectedItems,\r\n            selectedItemKeys: selectedItemKeys,\r\n            addedItemKeys: addedItemKeys,\r\n            removedItemKeys: removedItemKeys,\r\n            addedItems: addedItems,\r\n            removedItems: removedItems,\r\n            cancel: false\r\n        };\r\n        onSelectionChanging(selectionChangingArgs);\r\n        return selectionChangingArgs.cancel\r\n    }\r\n    _callCallbackIfNotCanceled(callback, cancelCallback) {\r\n        const cancelResult = this.onSelectionChanging();\r\n        if (isPromise(cancelResult)) {\r\n            cancelResult.then((cancel => {\r\n                if (!cancel) {\r\n                    callback()\r\n                } else {\r\n                    cancelCallback()\r\n                }\r\n            })).catch((() => {\r\n                callback()\r\n            }))\r\n        } else if (!cancelResult) {\r\n            callback()\r\n        } else {\r\n            cancelCallback()\r\n        }\r\n    }\r\n    onSelectionChanged() {\r\n        const {\r\n            selectedItems: selectedItems,\r\n            selectedItemKeys: selectedItemKeys,\r\n            addedItemKeys: addedItemKeys,\r\n            removedItemKeys: removedItemKeys,\r\n            addedItems: addedItems,\r\n            removedItems: removedItems,\r\n            onSelectionChanged: onSelectionChanged = noop\r\n        } = this.options;\r\n        this._clearItemKeys();\r\n        onSelectionChanged({\r\n            selectedItems: selectedItems,\r\n            selectedItemKeys: selectedItemKeys,\r\n            addedItemKeys: addedItemKeys,\r\n            removedItemKeys: removedItemKeys,\r\n            addedItems: addedItems,\r\n            removedItems: removedItems\r\n        })\r\n    }\r\n    equalKeys(key1, key2) {\r\n        if (this.options.equalByReference) {\r\n            if (isObject(key1) && isObject(key2)) {\r\n                return key1 === key2\r\n            }\r\n        }\r\n        return equalByValue(key1, key2)\r\n    }\r\n    getSelectableItems(items) {\r\n        return items.filter((item => !(null !== item && void 0 !== item && item.disabled)))\r\n    }\r\n    _clearSelection(keys, preserve, isDeselect, isSelectAll) {\r\n        keys = keys || [];\r\n        keys = Array.isArray(keys) ? keys : [keys];\r\n        this.validate();\r\n        return this.selectedItemKeys(keys, preserve, isDeselect, isSelectAll)\r\n    }\r\n    _removeTemplateProperty(remoteFilter) {\r\n        if (Array.isArray(remoteFilter)) {\r\n            return remoteFilter.map((f => this._removeTemplateProperty(f)))\r\n        }\r\n        if (isObject(remoteFilter)) {\r\n            delete remoteFilter.template\r\n        }\r\n        return remoteFilter\r\n    }\r\n    _loadFilteredData(remoteFilter, localFilter, select, isSelectAll) {\r\n        const filterLength = encodeURI(JSON.stringify(this._removeTemplateProperty(remoteFilter))).length;\r\n        const needLoadAllData = this.options.maxFilterLengthInRequest && filterLength > this.options.maxFilterLengthInRequest;\r\n        const deferred = Deferred();\r\n        const loadOptions = {\r\n            filter: needLoadAllData ? void 0 : remoteFilter,\r\n            select: needLoadAllData ? this.options.dataFields() : select || this.options.dataFields()\r\n        };\r\n        if (remoteFilter && 0 === remoteFilter.length) {\r\n            deferred.resolve([])\r\n        } else {\r\n            this.options.load(loadOptions).done((items => {\r\n                let filteredItems = isPlainObject(items) ? items.data : items;\r\n                if (localFilter && !isSelectAll) {\r\n                    filteredItems = filteredItems.filter(localFilter)\r\n                } else if (needLoadAllData) {\r\n                    filteredItems = dataQuery(filteredItems).filter(remoteFilter).toArray()\r\n                }\r\n                deferred.resolve(filteredItems)\r\n            })).fail(deferred.reject.bind(deferred))\r\n        }\r\n        return deferred\r\n    }\r\n    updateSelectedItemKeyHash(keys) {\r\n        for (let i = 0; i < keys.length; i++) {\r\n            const keyHash = getKeyHash(keys[i]);\r\n            if (!isObject(keyHash)) {\r\n                this.options.keyHashIndices[keyHash] = this.options.keyHashIndices[keyHash] || [];\r\n                const keyIndices = this.options.keyHashIndices[keyHash];\r\n                keyIndices.push(i)\r\n            }\r\n        }\r\n    }\r\n    _isAnyItemSelected(items) {\r\n        for (let i = 0; i < items.length; i++) {\r\n            if (this.options.isItemSelected(items[i])) {\r\n                return\r\n            }\r\n        }\r\n        return false\r\n    }\r\n    _getFullSelectAllState() {\r\n        const items = this.options.plainItems();\r\n        const dataFilter = this.options.filter();\r\n        let selectedItems = this.options.ignoreDisabledItems ? this.options.selectedItems : this.options.selectedItems.filter((item => !(null !== item && void 0 !== item && item.disabled)));\r\n        if (dataFilter) {\r\n            selectedItems = dataQuery(selectedItems).filter(dataFilter).toArray()\r\n        }\r\n        const selectedItemsLength = selectedItems.length;\r\n        const disabledItemsLength = items.length - this.getSelectableItems(items).length;\r\n        if (!selectedItemsLength) {\r\n            return this._isAnyItemSelected(items)\r\n        }\r\n        if (selectedItemsLength >= this.options.totalCount() - disabledItemsLength) {\r\n            return true\r\n        }\r\n        return\r\n    }\r\n    _getVisibleSelectAllState() {\r\n        const items = this.getSelectableItems(this.options.plainItems());\r\n        let hasSelectedItems = false;\r\n        let hasUnselectedItems = false;\r\n        for (let i = 0; i < items.length; i++) {\r\n            const item = items[i];\r\n            const itemData = this.options.getItemData(item);\r\n            const key = this.options.keyOf(itemData);\r\n            if (this.options.isSelectableItem(item)) {\r\n                if (this.isItemKeySelected(key)) {\r\n                    hasSelectedItems = true\r\n                } else {\r\n                    hasUnselectedItems = true\r\n                }\r\n            }\r\n        }\r\n        if (hasSelectedItems) {\r\n            return !hasUnselectedItems ? true : void 0\r\n        }\r\n        return false\r\n    }\r\n    isItemKeySelected(itemKey) {\r\n        throw new Error(\"isItemKeySelected method should be overriden\")\r\n    }\r\n    addSelectedItem(itemKey, itemData) {\r\n        throw new Error(\"addSelectedItem method should be overriden\")\r\n    }\r\n    removeSelectedItem(itemKey) {\r\n        throw new Error(\"removeSelectedItem method should be overriden\")\r\n    }\r\n    _selectAllPlainItems(isDeselect) {\r\n        const items = this.getSelectableItems(this.options.plainItems());\r\n        for (let i = 0; i < items.length; i++) {\r\n            const item = items[i];\r\n            if (this.options.isSelectableItem(item)) {\r\n                const itemData = this.options.getItemData(item);\r\n                const itemKey = this.options.keyOf(itemData);\r\n                const isSelected = this.isItemKeySelected(itemKey);\r\n                if (!isSelected && !isDeselect) {\r\n                    this.addSelectedItem(itemKey, itemData)\r\n                }\r\n                if (isSelected && isDeselect) {\r\n                    this.removeSelectedItem(itemKey)\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}