{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/events/pointer/m_touch.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport BaseStrategy from \"../../../common/core/events/pointer/base\";\nimport { extend } from \"../../../core/utils/extend\";\nimport { each } from \"../../../core/utils/iterator\";\nimport devices from \"../../core/m_devices\";\nconst eventMap = {\n  dxpointerdown: \"touchstart\",\n  dxpointermove: \"touchmove\",\n  dxpointerup: \"touchend\",\n  dxpointercancel: \"touchcancel\",\n  dxpointerover: \"\",\n  dxpointerout: \"\",\n  dxpointerenter: \"\",\n  dxpointerleave: \"\"\n};\nconst normalizeTouchEvent = function (e) {\n  const pointers = [];\n  each(e.touches, (_, touch) => {\n    pointers.push(extend({\n      pointerId: touch.identifier\n    }, touch));\n  });\n  return {\n    pointers: pointers,\n    pointerId: e.changedTouches[0].identifier\n  };\n};\nconst skipTouchWithSameIdentifier = function (pointerEvent) {\n  return \"ios\" === devices.real().platform && (\"dxpointerdown\" === pointerEvent || \"dxpointerup\" === pointerEvent);\n};\nconst TouchStrategy = BaseStrategy.inherit({\n  ctor() {\n    this.callBase.apply(this, arguments);\n    this._pointerId = 0;\n  },\n  _handler(e) {\n    if (skipTouchWithSameIdentifier(this._eventName)) {\n      const touch = e.changedTouches[0];\n      if (this._pointerId === touch.identifier && 0 !== this._pointerId) {\n        return;\n      }\n      this._pointerId = touch.identifier;\n    }\n    return this.callBase.apply(this, arguments);\n  },\n  _fireEvent(args) {\n    return this.callBase(extend(normalizeTouchEvent(args.originalEvent), args));\n  }\n});\nTouchStrategy.map = eventMap;\nTouchStrategy.normalize = normalizeTouchEvent;\nexport default TouchStrategy;","map":{"version":3,"names":["BaseStrategy","extend","each","devices","eventMap","dxpointerdown","dxpointermove","dxpointerup","dxpointercancel","dxpointerover","dxpointerout","dxpointerenter","dxpointerleave","normalizeTouchEvent","e","pointers","touches","_","touch","push","pointerId","identifier","changedTouches","skipTouchWithSameIdentifier","pointerEvent","real","platform","TouchStrategy","inherit","ctor","callBase","apply","arguments","_pointerId","_handler","_eventName","_fireEvent","args","originalEvent","map","normalize"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/events/pointer/m_touch.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/events/pointer/m_touch.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport BaseStrategy from \"../../../common/core/events/pointer/base\";\r\nimport {\r\n    extend\r\n} from \"../../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../../core/utils/iterator\";\r\nimport devices from \"../../core/m_devices\";\r\nconst eventMap = {\r\n    dxpointerdown: \"touchstart\",\r\n    dxpointermove: \"touchmove\",\r\n    dxpointerup: \"touchend\",\r\n    dxpointercancel: \"touchcancel\",\r\n    dxpointerover: \"\",\r\n    dxpointerout: \"\",\r\n    dxpointerenter: \"\",\r\n    dxpointerleave: \"\"\r\n};\r\nconst normalizeTouchEvent = function(e) {\r\n    const pointers = [];\r\n    each(e.touches, ((_, touch) => {\r\n        pointers.push(extend({\r\n            pointerId: touch.identifier\r\n        }, touch))\r\n    }));\r\n    return {\r\n        pointers: pointers,\r\n        pointerId: e.changedTouches[0].identifier\r\n    }\r\n};\r\nconst skipTouchWithSameIdentifier = function(pointerEvent) {\r\n    return \"ios\" === devices.real().platform && (\"dxpointerdown\" === pointerEvent || \"dxpointerup\" === pointerEvent)\r\n};\r\nconst TouchStrategy = BaseStrategy.inherit({\r\n    ctor() {\r\n        this.callBase.apply(this, arguments);\r\n        this._pointerId = 0\r\n    },\r\n    _handler(e) {\r\n        if (skipTouchWithSameIdentifier(this._eventName)) {\r\n            const touch = e.changedTouches[0];\r\n            if (this._pointerId === touch.identifier && 0 !== this._pointerId) {\r\n                return\r\n            }\r\n            this._pointerId = touch.identifier\r\n        }\r\n        return this.callBase.apply(this, arguments)\r\n    },\r\n    _fireEvent(args) {\r\n        return this.callBase(extend(normalizeTouchEvent(args.originalEvent), args))\r\n    }\r\n});\r\nTouchStrategy.map = eventMap;\r\nTouchStrategy.normalize = normalizeTouchEvent;\r\nexport default TouchStrategy;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,YAAY,MAAM,0CAA0C;AACnE,SACIC,MAAM,QACH,4BAA4B;AACnC,SACIC,IAAI,QACD,8BAA8B;AACrC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,MAAMC,QAAQ,GAAG;EACbC,aAAa,EAAE,YAAY;EAC3BC,aAAa,EAAE,WAAW;EAC1BC,WAAW,EAAE,UAAU;EACvBC,eAAe,EAAE,aAAa;EAC9BC,aAAa,EAAE,EAAE;EACjBC,YAAY,EAAE,EAAE;EAChBC,cAAc,EAAE,EAAE;EAClBC,cAAc,EAAE;AACpB,CAAC;AACD,MAAMC,mBAAmB,GAAG,SAAAA,CAASC,CAAC,EAAE;EACpC,MAAMC,QAAQ,GAAG,EAAE;EACnBb,IAAI,CAACY,CAAC,CAACE,OAAO,EAAG,CAACC,CAAC,EAAEC,KAAK,KAAK;IAC3BH,QAAQ,CAACI,IAAI,CAAClB,MAAM,CAAC;MACjBmB,SAAS,EAAEF,KAAK,CAACG;IACrB,CAAC,EAAEH,KAAK,CAAC,CAAC;EACd,CAAE,CAAC;EACH,OAAO;IACHH,QAAQ,EAAEA,QAAQ;IAClBK,SAAS,EAAEN,CAAC,CAACQ,cAAc,CAAC,CAAC,CAAC,CAACD;EACnC,CAAC;AACL,CAAC;AACD,MAAME,2BAA2B,GAAG,SAAAA,CAASC,YAAY,EAAE;EACvD,OAAO,KAAK,KAAKrB,OAAO,CAACsB,IAAI,CAAC,CAAC,CAACC,QAAQ,KAAK,eAAe,KAAKF,YAAY,IAAI,aAAa,KAAKA,YAAY,CAAC;AACpH,CAAC;AACD,MAAMG,aAAa,GAAG3B,YAAY,CAAC4B,OAAO,CAAC;EACvCC,IAAIA,CAAA,EAAG;IACH,IAAI,CAACC,QAAQ,CAACC,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;IACpC,IAAI,CAACC,UAAU,GAAG,CAAC;EACvB,CAAC;EACDC,QAAQA,CAACpB,CAAC,EAAE;IACR,IAAIS,2BAA2B,CAAC,IAAI,CAACY,UAAU,CAAC,EAAE;MAC9C,MAAMjB,KAAK,GAAGJ,CAAC,CAACQ,cAAc,CAAC,CAAC,CAAC;MACjC,IAAI,IAAI,CAACW,UAAU,KAAKf,KAAK,CAACG,UAAU,IAAI,CAAC,KAAK,IAAI,CAACY,UAAU,EAAE;QAC/D;MACJ;MACA,IAAI,CAACA,UAAU,GAAGf,KAAK,CAACG,UAAU;IACtC;IACA,OAAO,IAAI,CAACS,QAAQ,CAACC,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;EAC/C,CAAC;EACDI,UAAUA,CAACC,IAAI,EAAE;IACb,OAAO,IAAI,CAACP,QAAQ,CAAC7B,MAAM,CAACY,mBAAmB,CAACwB,IAAI,CAACC,aAAa,CAAC,EAAED,IAAI,CAAC,CAAC;EAC/E;AACJ,CAAC,CAAC;AACFV,aAAa,CAACY,GAAG,GAAGnC,QAAQ;AAC5BuB,aAAa,CAACa,SAAS,GAAG3B,mBAAmB;AAC7C,eAAec,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}