{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/data/m_store_helper.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport arrayQuery from \"../../common/data/array_query\";\nimport { normalizeSortingInfo } from \"../../common/data/utils\";\nimport { grep } from \"../../core/utils/common\";\nimport { extend } from \"../../core/utils/extend\";\nimport { each } from \"../../core/utils/iterator\";\nfunction multiLevelGroup(query, groupInfo) {\n  query = query.groupBy(groupInfo[0].selector);\n  if (groupInfo.length > 1) {\n    query = query.select(g => extend({}, g, {\n      items: multiLevelGroup(arrayQuery(g.items), groupInfo.slice(1)).toArray()\n    }));\n  }\n  return query;\n}\nfunction arrangeSortingInfo(groupInfo, sortInfo) {\n  const filteredGroup = [];\n  each(groupInfo, (_, group) => {\n    const collision = grep(sortInfo, sort => group.selector === sort.selector);\n    if (collision.length < 1) {\n      filteredGroup.push(group);\n    }\n  });\n  return filteredGroup.concat(sortInfo);\n}\nfunction queryByOptions(query, options, isCountQuery) {\n  var _options;\n  options = options || {};\n  const {\n    filter: filter\n  } = options;\n  if (null !== (_options = options) && void 0 !== _options && _options.langParams) {\n    var _query$setLangParams, _query;\n    null === (_query$setLangParams = (_query = query).setLangParams) || void 0 === _query$setLangParams || _query$setLangParams.call(_query, options.langParams);\n  }\n  if (filter) {\n    query = query.filter(filter);\n  }\n  if (isCountQuery) {\n    return query;\n  }\n  let {\n    sort: sort\n  } = options;\n  const {\n    select: select\n  } = options;\n  let {\n    group: group\n  } = options;\n  const {\n    skip: skip\n  } = options;\n  const {\n    take: take\n  } = options;\n  if (group) {\n    group = normalizeSortingInfo(group);\n    group.keepInitialKeyOrder = !!options.group.keepInitialKeyOrder;\n  }\n  if (sort || group) {\n    sort = normalizeSortingInfo(sort || []);\n    if (group && !group.keepInitialKeyOrder) {\n      sort = arrangeSortingInfo(group, sort);\n    }\n    each(sort, function (index) {\n      query = query[index ? \"thenBy\" : \"sortBy\"](this.selector, this.desc, this.compare);\n    });\n  }\n  if (select) {\n    query = query.select(select);\n  }\n  if (group) {\n    query = multiLevelGroup(query, group);\n  }\n  if (take || skip) {\n    query = query.slice(skip || 0, take);\n  }\n  return query;\n}\nexport default {\n  multiLevelGroup: multiLevelGroup,\n  arrangeSortingInfo: arrangeSortingInfo,\n  queryByOptions: queryByOptions\n};","map":{"version":3,"names":["arrayQuery","normalizeSortingInfo","grep","extend","each","multiLevelGroup","query","groupInfo","groupBy","selector","length","select","g","items","slice","toArray","arrangeSortingInfo","sortInfo","filteredGroup","_","group","collision","sort","push","concat","queryByOptions","options","isCountQuery","_options","filter","langParams","_query$setLangParams","_query","setLangParams","call","skip","take","keepInitialKeyOrder","index","desc","compare"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/data/m_store_helper.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/data/m_store_helper.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport arrayQuery from \"../../common/data/array_query\";\r\nimport {\r\n    normalizeSortingInfo\r\n} from \"../../common/data/utils\";\r\nimport {\r\n    grep\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\n\r\nfunction multiLevelGroup(query, groupInfo) {\r\n    query = query.groupBy(groupInfo[0].selector);\r\n    if (groupInfo.length > 1) {\r\n        query = query.select((g => extend({}, g, {\r\n            items: multiLevelGroup(arrayQuery(g.items), groupInfo.slice(1)).toArray()\r\n        })))\r\n    }\r\n    return query\r\n}\r\n\r\nfunction arrangeSortingInfo(groupInfo, sortInfo) {\r\n    const filteredGroup = [];\r\n    each(groupInfo, ((_, group) => {\r\n        const collision = grep(sortInfo, (sort => group.selector === sort.selector));\r\n        if (collision.length < 1) {\r\n            filteredGroup.push(group)\r\n        }\r\n    }));\r\n    return filteredGroup.concat(sortInfo)\r\n}\r\n\r\nfunction queryByOptions(query, options, isCountQuery) {\r\n    var _options;\r\n    options = options || {};\r\n    const {\r\n        filter: filter\r\n    } = options;\r\n    if (null !== (_options = options) && void 0 !== _options && _options.langParams) {\r\n        var _query$setLangParams, _query;\r\n        null === (_query$setLangParams = (_query = query).setLangParams) || void 0 === _query$setLangParams || _query$setLangParams.call(_query, options.langParams)\r\n    }\r\n    if (filter) {\r\n        query = query.filter(filter)\r\n    }\r\n    if (isCountQuery) {\r\n        return query\r\n    }\r\n    let {\r\n        sort: sort\r\n    } = options;\r\n    const {\r\n        select: select\r\n    } = options;\r\n    let {\r\n        group: group\r\n    } = options;\r\n    const {\r\n        skip: skip\r\n    } = options;\r\n    const {\r\n        take: take\r\n    } = options;\r\n    if (group) {\r\n        group = normalizeSortingInfo(group);\r\n        group.keepInitialKeyOrder = !!options.group.keepInitialKeyOrder\r\n    }\r\n    if (sort || group) {\r\n        sort = normalizeSortingInfo(sort || []);\r\n        if (group && !group.keepInitialKeyOrder) {\r\n            sort = arrangeSortingInfo(group, sort)\r\n        }\r\n        each(sort, (function(index) {\r\n            query = query[index ? \"thenBy\" : \"sortBy\"](this.selector, this.desc, this.compare)\r\n        }))\r\n    }\r\n    if (select) {\r\n        query = query.select(select)\r\n    }\r\n    if (group) {\r\n        query = multiLevelGroup(query, group)\r\n    }\r\n    if (take || skip) {\r\n        query = query.slice(skip || 0, take)\r\n    }\r\n    return query\r\n}\r\nexport default {\r\n    multiLevelGroup: multiLevelGroup,\r\n    arrangeSortingInfo: arrangeSortingInfo,\r\n    queryByOptions: queryByOptions\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}