{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/core/templates/m_template_base.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { triggerShownEvent } from \"../../../common/core/events/visibility_change\";\nimport domAdapter from \"../../../core/dom_adapter\";\nimport errors from \"../../../core/errors\";\nimport $ from \"../../../core/renderer\";\nimport Callbacks from \"../../../core/utils/callbacks\";\nimport { contains } from \"../../../core/utils/dom\";\nexport const renderedCallbacks = Callbacks({\n  syncStrategy: true\n});\nexport class TemplateBase {\n  render(options) {\n    options = options || {};\n    const {\n      onRendered: onRendered\n    } = options;\n    delete options.onRendered;\n    let $result;\n    if (options.renovated && options.transclude && this._element) {\n      $result = $(\"<div>\").append(this._element).contents();\n    } else {\n      $result = this._renderCore(options);\n    }\n    this._ensureResultInContainer($result, options.container);\n    renderedCallbacks.fire($result, options.container);\n    onRendered && onRendered();\n    return $result;\n  }\n  _ensureResultInContainer($result, container) {\n    if (!container) {\n      return;\n    }\n    const $container = $(container);\n    const resultInContainer = contains($container.get(0), $result.get(0));\n    $container.append($result);\n    if (resultInContainer) {\n      return;\n    }\n    const resultInBody = contains(domAdapter.getBody(), $container.get(0));\n    if (!resultInBody) {\n      return;\n    }\n    triggerShownEvent($result);\n  }\n  _renderCore() {\n    throw errors.Error(\"E0001\");\n  }\n}","map":{"version":3,"names":["triggerShownEvent","domAdapter","errors","$","Callbacks","contains","renderedCallbacks","syncStrategy","TemplateBase","render","options","onRendered","$result","renovated","transclude","_element","append","contents","_renderCore","_ensureResultInContainer","container","fire","$container","resultInContainer","get","resultInBody","getBody","Error"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/core/templates/m_template_base.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/core/templates/m_template_base.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    triggerShownEvent\r\n} from \"../../../common/core/events/visibility_change\";\r\nimport domAdapter from \"../../../core/dom_adapter\";\r\nimport errors from \"../../../core/errors\";\r\nimport $ from \"../../../core/renderer\";\r\nimport Callbacks from \"../../../core/utils/callbacks\";\r\nimport {\r\n    contains\r\n} from \"../../../core/utils/dom\";\r\nexport const renderedCallbacks = Callbacks({\r\n    syncStrategy: true\r\n});\r\nexport class TemplateBase {\r\n    render(options) {\r\n        options = options || {};\r\n        const {\r\n            onRendered: onRendered\r\n        } = options;\r\n        delete options.onRendered;\r\n        let $result;\r\n        if (options.renovated && options.transclude && this._element) {\r\n            $result = $(\"<div>\").append(this._element).contents()\r\n        } else {\r\n            $result = this._renderCore(options)\r\n        }\r\n        this._ensureResultInContainer($result, options.container);\r\n        renderedCallbacks.fire($result, options.container);\r\n        onRendered && onRendered();\r\n        return $result\r\n    }\r\n    _ensureResultInContainer($result, container) {\r\n        if (!container) {\r\n            return\r\n        }\r\n        const $container = $(container);\r\n        const resultInContainer = contains($container.get(0), $result.get(0));\r\n        $container.append($result);\r\n        if (resultInContainer) {\r\n            return\r\n        }\r\n        const resultInBody = contains(domAdapter.getBody(), $container.get(0));\r\n        if (!resultInBody) {\r\n            return\r\n        }\r\n        triggerShownEvent($result)\r\n    }\r\n    _renderCore() {\r\n        throw errors.Error(\"E0001\")\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,iBAAiB,QACd,+CAA+C;AACtD,OAAOC,UAAU,MAAM,2BAA2B;AAClD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,CAAC,MAAM,wBAAwB;AACtC,OAAOC,SAAS,MAAM,+BAA+B;AACrD,SACIC,QAAQ,QACL,yBAAyB;AAChC,OAAO,MAAMC,iBAAiB,GAAGF,SAAS,CAAC;EACvCG,YAAY,EAAE;AAClB,CAAC,CAAC;AACF,OAAO,MAAMC,YAAY,CAAC;EACtBC,MAAMA,CAACC,OAAO,EAAE;IACZA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;IACvB,MAAM;MACFC,UAAU,EAAEA;IAChB,CAAC,GAAGD,OAAO;IACX,OAAOA,OAAO,CAACC,UAAU;IACzB,IAAIC,OAAO;IACX,IAAIF,OAAO,CAACG,SAAS,IAAIH,OAAO,CAACI,UAAU,IAAI,IAAI,CAACC,QAAQ,EAAE;MAC1DH,OAAO,GAAGT,CAAC,CAAC,OAAO,CAAC,CAACa,MAAM,CAAC,IAAI,CAACD,QAAQ,CAAC,CAACE,QAAQ,CAAC,CAAC;IACzD,CAAC,MAAM;MACHL,OAAO,GAAG,IAAI,CAACM,WAAW,CAACR,OAAO,CAAC;IACvC;IACA,IAAI,CAACS,wBAAwB,CAACP,OAAO,EAAEF,OAAO,CAACU,SAAS,CAAC;IACzDd,iBAAiB,CAACe,IAAI,CAACT,OAAO,EAAEF,OAAO,CAACU,SAAS,CAAC;IAClDT,UAAU,IAAIA,UAAU,CAAC,CAAC;IAC1B,OAAOC,OAAO;EAClB;EACAO,wBAAwBA,CAACP,OAAO,EAAEQ,SAAS,EAAE;IACzC,IAAI,CAACA,SAAS,EAAE;MACZ;IACJ;IACA,MAAME,UAAU,GAAGnB,CAAC,CAACiB,SAAS,CAAC;IAC/B,MAAMG,iBAAiB,GAAGlB,QAAQ,CAACiB,UAAU,CAACE,GAAG,CAAC,CAAC,CAAC,EAAEZ,OAAO,CAACY,GAAG,CAAC,CAAC,CAAC,CAAC;IACrEF,UAAU,CAACN,MAAM,CAACJ,OAAO,CAAC;IAC1B,IAAIW,iBAAiB,EAAE;MACnB;IACJ;IACA,MAAME,YAAY,GAAGpB,QAAQ,CAACJ,UAAU,CAACyB,OAAO,CAAC,CAAC,EAAEJ,UAAU,CAACE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtE,IAAI,CAACC,YAAY,EAAE;MACf;IACJ;IACAzB,iBAAiB,CAACY,OAAO,CAAC;EAC9B;EACAM,WAAWA,CAAA,EAAG;IACV,MAAMhB,MAAM,CAACyB,KAAK,CAAC,OAAO,CAAC;EAC/B;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}