{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/core/r1/config_provider.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { BaseInfernoComponent } from \"@devextreme/runtime/inferno\";\nimport { ConfigContext } from \"./config_context\";\nexport const ConfigProviderDefaultProps = {};\nexport class ConfigProvider extends BaseInfernoComponent {\n  constructor() {\n    super(...arguments);\n    this.__getterCache = {};\n  }\n  get config() {\n    if (void 0 !== this.__getterCache.config) {\n      return this.__getterCache.config;\n    }\n    return this.__getterCache.config = (() => ({\n      rtlEnabled: this.props.rtlEnabled\n    }))();\n  }\n  componentWillUpdate(nextProps) {\n    if (this.props.rtlEnabled !== nextProps.rtlEnabled) {\n      this.__getterCache.config = void 0;\n    }\n  }\n  getChildContext() {\n    return _extends({}, this.context, {\n      [ConfigContext.id]: this.config || ConfigContext.defaultValue\n    });\n  }\n  render() {\n    return this.props.children;\n  }\n}\nConfigProvider.defaultProps = ConfigProviderDefaultProps;","map":{"version":3,"names":["_extends","BaseInfernoComponent","ConfigContext","ConfigProviderDefaultProps","ConfigProvider","constructor","arguments","__getterCache","config","rtlEnabled","props","componentWillUpdate","nextProps","getChildContext","context","id","defaultValue","render","children","defaultProps"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/core/r1/config_provider.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/core/r1/config_provider.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    ConfigContext\r\n} from \"./config_context\";\r\nexport const ConfigProviderDefaultProps = {};\r\nexport class ConfigProvider extends BaseInfernoComponent {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.__getterCache = {}\r\n    }\r\n    get config() {\r\n        if (void 0 !== this.__getterCache.config) {\r\n            return this.__getterCache.config\r\n        }\r\n        return this.__getterCache.config = (() => ({\r\n            rtlEnabled: this.props.rtlEnabled\r\n        }))()\r\n    }\r\n    componentWillUpdate(nextProps) {\r\n        if (this.props.rtlEnabled !== nextProps.rtlEnabled) {\r\n            this.__getterCache.config = void 0\r\n        }\r\n    }\r\n    getChildContext() {\r\n        return _extends({}, this.context, {\r\n            [ConfigContext.id]: this.config || ConfigContext.defaultValue\r\n        })\r\n    }\r\n    render() {\r\n        return this.props.children\r\n    }\r\n}\r\nConfigProvider.defaultProps = ConfigProviderDefaultProps;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,SACIC,oBAAoB,QACjB,6BAA6B;AACpC,SACIC,aAAa,QACV,kBAAkB;AACzB,OAAO,MAAMC,0BAA0B,GAAG,CAAC,CAAC;AAC5C,OAAO,MAAMC,cAAc,SAASH,oBAAoB,CAAC;EACrDI,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,GAAGC,SAAS,CAAC;IACnB,IAAI,CAACC,aAAa,GAAG,CAAC,CAAC;EAC3B;EACA,IAAIC,MAAMA,CAAA,EAAG;IACT,IAAI,KAAK,CAAC,KAAK,IAAI,CAACD,aAAa,CAACC,MAAM,EAAE;MACtC,OAAO,IAAI,CAACD,aAAa,CAACC,MAAM;IACpC;IACA,OAAO,IAAI,CAACD,aAAa,CAACC,MAAM,GAAG,CAAC,OAAO;MACvCC,UAAU,EAAE,IAAI,CAACC,KAAK,CAACD;IAC3B,CAAC,CAAC,EAAE,CAAC;EACT;EACAE,mBAAmBA,CAACC,SAAS,EAAE;IAC3B,IAAI,IAAI,CAACF,KAAK,CAACD,UAAU,KAAKG,SAAS,CAACH,UAAU,EAAE;MAChD,IAAI,CAACF,aAAa,CAACC,MAAM,GAAG,KAAK,CAAC;IACtC;EACJ;EACAK,eAAeA,CAAA,EAAG;IACd,OAAOb,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,CAACc,OAAO,EAAE;MAC9B,CAACZ,aAAa,CAACa,EAAE,GAAG,IAAI,CAACP,MAAM,IAAIN,aAAa,CAACc;IACrD,CAAC,CAAC;EACN;EACAC,MAAMA,CAAA,EAAG;IACL,OAAO,IAAI,CAACP,KAAK,CAACQ,QAAQ;EAC9B;AACJ;AACAd,cAAc,CAACe,YAAY,GAAGhB,0BAA0B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}