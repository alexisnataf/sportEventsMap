{"ast":null,"code":"/*!\n * devextreme-react\n * Version: 24.2.7\n * Build date: Mon Apr 28 2025\n *\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\nimport * as React from 'react';\nimport * as events from 'devextreme/events';\nimport { useContext, useMemo, useImperativeHandle, forwardRef, useRef, useLayoutEffect, useCallback, useState } from 'react';\nimport { requestAnimationFrame } from 'devextreme/animation/frame';\nimport { deferUpdate } from 'devextreme/core/utils/common';\nimport config from 'devextreme/core/config';\nimport { createPortal } from 'react-dom';\nimport { useOptionScanning } from './use-option-scanning';\nimport { OptionsManager, scheduleGuards, unscheduleGuards } from './options-manager';\nimport { elementPropNames, getClassName } from './widget-config';\nimport { TemplateManager } from './template-manager';\nimport { ElementType } from './configuration/react/element';\nimport { NestedOptionContext, RemovalLockerContext, RestoreTreeContext, TemplateRenderingContext } from './contexts';\nconst DX_REMOVE_EVENT = 'dxremove';\nconfig({\n  buyNowLink: 'https://go.devexpress.com/Licensing_Installer_Watermark_DevExtremeReact.aspx',\n  licensingDocLink: 'https://go.devexpress.com/Licensing_Documentation_DevExtremeReact.aspx'\n});\nconst ComponentBase = forwardRef((props, ref) => {\n  const {\n    templateProps = [],\n    defaults = {},\n    expectedChildren = {},\n    isPortalComponent = false,\n    useRequestAnimationFrameFlag = false,\n    subscribableOptions = [],\n    WidgetClass,\n    independentEvents = [],\n    renderChildren,\n    beforeCreateWidget = () => undefined,\n    afterCreateWidget = () => undefined\n  } = props;\n  const [, setForceUpdateToken] = useState(Symbol('initial force update token'));\n  const removalLocker = useContext(RemovalLockerContext);\n  const restoreParentLink = useContext(RestoreTreeContext);\n  const instance = useRef();\n  const element = useRef();\n  const portalContainer = useRef();\n  const useDeferUpdateForTemplates = useRef(false);\n  const guardsUpdateScheduled = useRef(false);\n  const childElementsDetached = useRef(false);\n  const shouldRestoreFocus = useRef(false);\n  const optionsManager = useRef(new OptionsManager());\n  const childNodes = useRef();\n  const createDXTemplates = useRef();\n  const clearInstantiationModels = useRef();\n  const updateTemplates = useRef();\n  const prevPropsRef = useRef();\n  const childrenContainerRef = useRef(null);\n  const {\n    parentType\n  } = useContext(NestedOptionContext);\n  const [widgetConfig, context] = useOptionScanning({\n    type: ElementType.Option,\n    descriptor: {\n      name: '',\n      isCollection: false,\n      templates: templateProps,\n      initialValuesProps: defaults,\n      predefinedValuesProps: {},\n      expectedChildren\n    },\n    props\n  }, () => !!childrenContainerRef.current?.childNodes.length, Symbol('initial update token'), 'component');\n  const restoreTree = useCallback(() => {\n    if (childElementsDetached.current && childNodes.current?.length && element.current) {\n      element.current.append(...childNodes.current);\n      childElementsDetached.current = false;\n    }\n    if (restoreParentLink && element.current && !element.current.isConnected) {\n      restoreParentLink();\n    }\n  }, [childNodes.current, element.current, childElementsDetached.current, restoreParentLink]);\n  const updateCssClasses = useCallback((prevProps, newProps) => {\n    const prevClassName = prevProps ? getClassName(prevProps) : undefined;\n    const newClassName = getClassName(newProps);\n    if (prevClassName === newClassName) {\n      return;\n    }\n    if (prevClassName) {\n      const classNames = prevClassName.split(' ').filter(c => c);\n      if (classNames.length) {\n        element.current?.classList.remove(...classNames);\n      }\n    }\n    if (newClassName) {\n      const classNames = newClassName.split(' ').filter(c => c);\n      if (classNames.length) {\n        element.current?.classList.add(...classNames);\n      }\n    }\n  }, [element.current]);\n  const setInlineStyles = useCallback(styles => {\n    if (element.current) {\n      const el = element.current;\n      Object.entries(styles).forEach(([name, value]) => {\n        el.style[name] = value;\n      });\n    }\n  }, [element.current]);\n  const setTemplateManagerHooks = useCallback(({\n    createDXTemplates: createDXTemplatesFn,\n    clearInstantiationModels: clearInstantiationModelsFn,\n    updateTemplates: updateTemplatesFn\n  }) => {\n    createDXTemplates.current = createDXTemplatesFn;\n    clearInstantiationModels.current = clearInstantiationModelsFn;\n    updateTemplates.current = updateTemplatesFn;\n  }, [createDXTemplates.current, clearInstantiationModels.current, updateTemplates.current]);\n  const getElementProps = useCallback(() => {\n    const elementProps = {\n      ref: el => {\n        if (el) {\n          element.current = el;\n        }\n      }\n    };\n    elementPropNames.forEach(name => {\n      if (name in props) {\n        elementProps[name] = props[name];\n      }\n    });\n    return elementProps;\n  }, [element.current]);\n  const scheduleTemplatesUpdate = useCallback(() => {\n    if (guardsUpdateScheduled.current) {\n      return;\n    }\n    guardsUpdateScheduled.current = true;\n    const updateFunc = useDeferUpdateForTemplates.current ? deferUpdate : requestAnimationFrame;\n    updateFunc(() => {\n      guardsUpdateScheduled.current = false;\n      updateTemplates.current?.(() => scheduleGuards());\n    });\n    unscheduleGuards();\n  }, [guardsUpdateScheduled.current, useDeferUpdateForTemplates.current, updateTemplates.current]);\n  const createWidget = useCallback(el => {\n    beforeCreateWidget();\n    el = el || element.current;\n    let options = {\n      templatesRenderAsynchronously: true,\n      ...optionsManager.current.getInitialOptions(widgetConfig)\n    };\n    const templateOptions = optionsManager.current.getTemplateOptions(widgetConfig);\n    const dxTemplates = createDXTemplates.current?.(templateOptions);\n    if (dxTemplates && Object.keys(dxTemplates).length) {\n      options = {\n        ...options,\n        integrationOptions: {\n          templates: dxTemplates\n        }\n      };\n    }\n    clearInstantiationModels.current?.();\n    instance.current = new WidgetClass(el, options);\n    if (!useRequestAnimationFrameFlag) {\n      useDeferUpdateForTemplates.current = instance.current.option('integrationOptions.useDeferUpdateForTemplates');\n    }\n    optionsManager.current.setInstance(instance.current, widgetConfig, subscribableOptions, independentEvents);\n    instance.current.on('optionChanged', optionsManager.current.onOptionChanged);\n    afterCreateWidget();\n  }, [beforeCreateWidget, afterCreateWidget, element.current, optionsManager.current, createDXTemplates.current, clearInstantiationModels.current, WidgetClass, useRequestAnimationFrameFlag, useDeferUpdateForTemplates.current, instance.current, subscribableOptions, independentEvents, widgetConfig]);\n  const onTemplatesRendered = useCallback(() => {\n    if (shouldRestoreFocus.current && instance.current?.focus) {\n      instance.current.focus();\n      shouldRestoreFocus.current = false;\n    }\n  }, [shouldRestoreFocus.current, instance.current]);\n  const onComponentUpdated = useCallback(() => {\n    if (parentType === 'option') {\n      return;\n    }\n    if (!optionsManager.current?.isInstanceSet) {\n      return;\n    }\n    updateCssClasses(prevPropsRef.current, props);\n    const templateOptions = optionsManager.current.getTemplateOptions(widgetConfig);\n    const dxTemplates = createDXTemplates.current?.(templateOptions) || {};\n    optionsManager.current.update(widgetConfig, dxTemplates);\n    scheduleTemplatesUpdate();\n    prevPropsRef.current = props;\n  }, [optionsManager.current, prevPropsRef.current, createDXTemplates.current, scheduleTemplatesUpdate, updateCssClasses, props, widgetConfig]);\n  const onComponentMounted = useCallback(() => {\n    if (parentType === 'option') {\n      return;\n    }\n    const {\n      style\n    } = props;\n    if (childElementsDetached.current) {\n      restoreTree();\n    } else if (element.current?.childNodes.length) {\n      childNodes.current = Array.from(element.current?.childNodes);\n    }\n    updateCssClasses(undefined, props);\n    if (style) {\n      setInlineStyles(style);\n    }\n    prevPropsRef.current = props;\n  }, [childNodes.current, element.current, childElementsDetached.current, updateCssClasses, setInlineStyles, props]);\n  const onComponentUnmounted = useCallback(() => {\n    removalLocker?.lock();\n    if (instance.current) {\n      const dxRemoveArgs = {\n        isUnmounting: true\n      };\n      shouldRestoreFocus.current = !!element.current?.contains(document.activeElement);\n      childNodes.current?.forEach(child => child.parentNode?.removeChild(child));\n      childElementsDetached.current = true;\n      if (element.current) {\n        const preventFocusOut = e => e.stopPropagation();\n        events.on(element.current, 'focusout', preventFocusOut);\n        events.triggerHandler(element.current, DX_REMOVE_EVENT, dxRemoveArgs);\n        events.off(element.current, 'focusout', preventFocusOut);\n      }\n      instance.current.dispose();\n      instance.current = null;\n    }\n    optionsManager.current.dispose();\n    removalLocker?.unlock();\n  }, [removalLocker, instance.current, childNodes.current, element.current, optionsManager.current, childElementsDetached.current, shouldRestoreFocus.current]);\n  useLayoutEffect(() => {\n    onComponentMounted();\n    return () => {\n      onComponentUnmounted();\n    };\n  }, []);\n  useLayoutEffect(() => {\n    onComponentUpdated();\n  });\n  useImperativeHandle(ref, () => ({\n    getInstance() {\n      return instance.current;\n    },\n    getElement() {\n      return element.current;\n    },\n    createWidget(el) {\n      createWidget(el);\n    }\n  }), [instance.current, element.current, createWidget]);\n  const _renderChildren = useCallback(() => {\n    if (renderChildren) {\n      return renderChildren();\n    }\n    const {\n      children\n    } = props;\n    return children;\n  }, [props, renderChildren]);\n  const renderPortal = useCallback(() => portalContainer.current && createPortal(_renderChildren(), portalContainer.current), [portalContainer.current, _renderChildren]);\n  const renderContent = useCallback(() => {\n    const {\n      children\n    } = props;\n    return isPortalComponent && children ? React.createElement('div', {\n      ref: node => {\n        if (node && portalContainer.current !== node) {\n          portalContainer.current = node;\n          setForceUpdateToken(Symbol('force update token'));\n        }\n      },\n      style: {\n        display: 'contents'\n      }\n    }) : _renderChildren();\n  }, [props, isPortalComponent, portalContainer.current, _renderChildren]);\n  const renderContextValue = useMemo(() => ({\n    isTemplateRendering: false\n  }), []);\n  return React.createElement(RestoreTreeContext.Provider, {\n    value: restoreTree\n  }, React.createElement(TemplateRenderingContext.Provider, {\n    value: renderContextValue\n  }, React.createElement(\"div\", {\n    ref: childrenContainerRef,\n    ...getElementProps()\n  }, React.createElement(NestedOptionContext.Provider, {\n    value: context\n  }, renderContent()), React.createElement(TemplateManager, {\n    init: setTemplateManagerHooks,\n    onTemplatesRendered: onTemplatesRendered\n  }), isPortalComponent && React.createElement(NestedOptionContext.Provider, {\n    value: context\n  }, renderPortal()))));\n});\nexport { ComponentBase, DX_REMOVE_EVENT };","map":{"version":3,"names":["React","events","useContext","useMemo","useImperativeHandle","forwardRef","useRef","useLayoutEffect","useCallback","useState","requestAnimationFrame","deferUpdate","config","createPortal","useOptionScanning","OptionsManager","scheduleGuards","unscheduleGuards","elementPropNames","getClassName","TemplateManager","ElementType","NestedOptionContext","RemovalLockerContext","RestoreTreeContext","TemplateRenderingContext","DX_REMOVE_EVENT","buyNowLink","licensingDocLink","ComponentBase","props","ref","templateProps","defaults","expectedChildren","isPortalComponent","useRequestAnimationFrameFlag","subscribableOptions","WidgetClass","independentEvents","renderChildren","beforeCreateWidget","undefined","afterCreateWidget","setForceUpdateToken","Symbol","removalLocker","restoreParentLink","instance","element","portalContainer","useDeferUpdateForTemplates","guardsUpdateScheduled","childElementsDetached","shouldRestoreFocus","optionsManager","childNodes","createDXTemplates","clearInstantiationModels","updateTemplates","prevPropsRef","childrenContainerRef","parentType","widgetConfig","context","type","Option","descriptor","name","isCollection","templates","initialValuesProps","predefinedValuesProps","current","length","restoreTree","append","isConnected","updateCssClasses","prevProps","newProps","prevClassName","newClassName","classNames","split","filter","c","classList","remove","add","setInlineStyles","styles","el","Object","entries","forEach","value","style","setTemplateManagerHooks","createDXTemplatesFn","clearInstantiationModelsFn","updateTemplatesFn","getElementProps","elementProps","scheduleTemplatesUpdate","updateFunc","createWidget","options","templatesRenderAsynchronously","getInitialOptions","templateOptions","getTemplateOptions","dxTemplates","keys","integrationOptions","option","setInstance","on","onOptionChanged","onTemplatesRendered","focus","onComponentUpdated","isInstanceSet","update","onComponentMounted","Array","from","onComponentUnmounted","lock","dxRemoveArgs","isUnmounting","contains","document","activeElement","child","parentNode","removeChild","preventFocusOut","e","stopPropagation","triggerHandler","off","dispose","unlock","getInstance","getElement","_renderChildren","children","renderPortal","renderContent","createElement","node","display","renderContextValue","isTemplateRendering","Provider","init"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme-react/esm/core/component-base.js"],"sourcesContent":["/*!\n * devextreme-react\n * Version: 24.2.7\n * Build date: Mon Apr 28 2025\n *\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\nimport * as React from 'react';\nimport * as events from 'devextreme/events';\nimport { useContext, useMemo, useImperativeHandle, forwardRef, useRef, useLayoutEffect, useCallback, useState, } from 'react';\nimport { requestAnimationFrame } from 'devextreme/animation/frame';\nimport { deferUpdate } from 'devextreme/core/utils/common';\nimport config from 'devextreme/core/config';\nimport { createPortal } from 'react-dom';\nimport { useOptionScanning } from './use-option-scanning';\nimport { OptionsManager, scheduleGuards, unscheduleGuards } from './options-manager';\nimport { elementPropNames, getClassName } from './widget-config';\nimport { TemplateManager } from './template-manager';\nimport { ElementType } from './configuration/react/element';\nimport { NestedOptionContext, RemovalLockerContext, RestoreTreeContext, TemplateRenderingContext, } from './contexts';\nconst DX_REMOVE_EVENT = 'dxremove';\nconfig({\n    buyNowLink: 'https://go.devexpress.com/Licensing_Installer_Watermark_DevExtremeReact.aspx',\n    licensingDocLink: 'https://go.devexpress.com/Licensing_Documentation_DevExtremeReact.aspx',\n});\nconst ComponentBase = forwardRef((props, ref) => {\n    const { templateProps = [], defaults = {}, expectedChildren = {}, isPortalComponent = false, useRequestAnimationFrameFlag = false, subscribableOptions = [], WidgetClass, independentEvents = [], renderChildren, beforeCreateWidget = () => undefined, afterCreateWidget = () => undefined, } = props;\n    const [, setForceUpdateToken] = useState(Symbol('initial force update token'));\n    const removalLocker = useContext(RemovalLockerContext);\n    const restoreParentLink = useContext(RestoreTreeContext);\n    const instance = useRef();\n    const element = useRef();\n    const portalContainer = useRef();\n    const useDeferUpdateForTemplates = useRef(false);\n    const guardsUpdateScheduled = useRef(false);\n    const childElementsDetached = useRef(false);\n    const shouldRestoreFocus = useRef(false);\n    const optionsManager = useRef(new OptionsManager());\n    const childNodes = useRef();\n    const createDXTemplates = useRef();\n    const clearInstantiationModels = useRef();\n    const updateTemplates = useRef();\n    const prevPropsRef = useRef();\n    const childrenContainerRef = useRef(null);\n    const { parentType } = useContext(NestedOptionContext);\n    const [widgetConfig, context] = useOptionScanning({\n        type: ElementType.Option,\n        descriptor: {\n            name: '',\n            isCollection: false,\n            templates: templateProps,\n            initialValuesProps: defaults,\n            predefinedValuesProps: {},\n            expectedChildren,\n        },\n        props,\n    }, () => !!childrenContainerRef.current?.childNodes.length, Symbol('initial update token'), 'component');\n    const restoreTree = useCallback(() => {\n        if (childElementsDetached.current && childNodes.current?.length && element.current) {\n            element.current.append(...childNodes.current);\n            childElementsDetached.current = false;\n        }\n        if (restoreParentLink && element.current && !element.current.isConnected) {\n            restoreParentLink();\n        }\n    }, [\n        childNodes.current,\n        element.current,\n        childElementsDetached.current,\n        restoreParentLink,\n    ]);\n    const updateCssClasses = useCallback((prevProps, newProps) => {\n        const prevClassName = prevProps ? getClassName(prevProps) : undefined;\n        const newClassName = getClassName(newProps);\n        if (prevClassName === newClassName) {\n            return;\n        }\n        if (prevClassName) {\n            const classNames = prevClassName.split(' ').filter((c) => c);\n            if (classNames.length) {\n                element.current?.classList.remove(...classNames);\n            }\n        }\n        if (newClassName) {\n            const classNames = newClassName.split(' ').filter((c) => c);\n            if (classNames.length) {\n                element.current?.classList.add(...classNames);\n            }\n        }\n    }, [element.current]);\n    const setInlineStyles = useCallback((styles) => {\n        if (element.current) {\n            const el = element.current;\n            Object.entries(styles).forEach(([name, value]) => {\n                el.style[name] = value;\n            });\n        }\n    }, [element.current]);\n    const setTemplateManagerHooks = useCallback(({ createDXTemplates: createDXTemplatesFn, clearInstantiationModels: clearInstantiationModelsFn, updateTemplates: updateTemplatesFn, }) => {\n        createDXTemplates.current = createDXTemplatesFn;\n        clearInstantiationModels.current = clearInstantiationModelsFn;\n        updateTemplates.current = updateTemplatesFn;\n    }, [\n        createDXTemplates.current,\n        clearInstantiationModels.current,\n        updateTemplates.current,\n    ]);\n    const getElementProps = useCallback(() => {\n        const elementProps = {\n            ref: (el) => {\n                if (el) {\n                    element.current = el;\n                }\n            },\n        };\n        elementPropNames.forEach((name) => {\n            if (name in props) {\n                elementProps[name] = props[name];\n            }\n        });\n        return elementProps;\n    }, [element.current]);\n    const scheduleTemplatesUpdate = useCallback(() => {\n        if (guardsUpdateScheduled.current) {\n            return;\n        }\n        guardsUpdateScheduled.current = true;\n        const updateFunc = useDeferUpdateForTemplates.current ? deferUpdate : requestAnimationFrame;\n        updateFunc(() => {\n            guardsUpdateScheduled.current = false;\n            updateTemplates.current?.(() => scheduleGuards());\n        });\n        unscheduleGuards();\n    }, [\n        guardsUpdateScheduled.current,\n        useDeferUpdateForTemplates.current,\n        updateTemplates.current,\n    ]);\n    const createWidget = useCallback((el) => {\n        beforeCreateWidget();\n        el = el || element.current;\n        let options = {\n            templatesRenderAsynchronously: true,\n            ...optionsManager.current.getInitialOptions(widgetConfig),\n        };\n        const templateOptions = optionsManager.current.getTemplateOptions(widgetConfig);\n        const dxTemplates = createDXTemplates.current?.(templateOptions);\n        if (dxTemplates && Object.keys(dxTemplates).length) {\n            options = {\n                ...options,\n                integrationOptions: {\n                    templates: dxTemplates,\n                },\n            };\n        }\n        clearInstantiationModels.current?.();\n        instance.current = new WidgetClass(el, options);\n        if (!useRequestAnimationFrameFlag) {\n            useDeferUpdateForTemplates.current = instance.current.option('integrationOptions.useDeferUpdateForTemplates');\n        }\n        optionsManager.current.setInstance(instance.current, widgetConfig, subscribableOptions, independentEvents);\n        instance.current.on('optionChanged', optionsManager.current.onOptionChanged);\n        afterCreateWidget();\n    }, [\n        beforeCreateWidget,\n        afterCreateWidget,\n        element.current,\n        optionsManager.current,\n        createDXTemplates.current,\n        clearInstantiationModels.current,\n        WidgetClass,\n        useRequestAnimationFrameFlag,\n        useDeferUpdateForTemplates.current,\n        instance.current,\n        subscribableOptions,\n        independentEvents,\n        widgetConfig,\n    ]);\n    const onTemplatesRendered = useCallback(() => {\n        if (shouldRestoreFocus.current && instance.current?.focus) {\n            instance.current.focus();\n            shouldRestoreFocus.current = false;\n        }\n    }, [shouldRestoreFocus.current, instance.current]);\n    const onComponentUpdated = useCallback(() => {\n        if (parentType === 'option') {\n            return;\n        }\n        if (!optionsManager.current?.isInstanceSet) {\n            return;\n        }\n        updateCssClasses(prevPropsRef.current, props);\n        const templateOptions = optionsManager.current.getTemplateOptions(widgetConfig);\n        const dxTemplates = createDXTemplates.current?.(templateOptions) || {};\n        optionsManager.current.update(widgetConfig, dxTemplates);\n        scheduleTemplatesUpdate();\n        prevPropsRef.current = props;\n    }, [\n        optionsManager.current,\n        prevPropsRef.current,\n        createDXTemplates.current,\n        scheduleTemplatesUpdate,\n        updateCssClasses,\n        props,\n        widgetConfig,\n    ]);\n    const onComponentMounted = useCallback(() => {\n        if (parentType === 'option') {\n            return;\n        }\n        const { style } = props;\n        if (childElementsDetached.current) {\n            restoreTree();\n        }\n        else if (element.current?.childNodes.length) {\n            childNodes.current = Array.from(element.current?.childNodes);\n        }\n        updateCssClasses(undefined, props);\n        if (style) {\n            setInlineStyles(style);\n        }\n        prevPropsRef.current = props;\n    }, [\n        childNodes.current,\n        element.current,\n        childElementsDetached.current,\n        updateCssClasses,\n        setInlineStyles,\n        props,\n    ]);\n    const onComponentUnmounted = useCallback(() => {\n        removalLocker?.lock();\n        if (instance.current) {\n            const dxRemoveArgs = { isUnmounting: true };\n            shouldRestoreFocus.current = !!element.current?.contains(document.activeElement);\n            childNodes.current?.forEach((child) => child.parentNode?.removeChild(child));\n            childElementsDetached.current = true;\n            if (element.current) {\n                const preventFocusOut = (e) => e.stopPropagation();\n                events.on(element.current, 'focusout', preventFocusOut);\n                events.triggerHandler(element.current, DX_REMOVE_EVENT, dxRemoveArgs);\n                events.off(element.current, 'focusout', preventFocusOut);\n            }\n            instance.current.dispose();\n            instance.current = null;\n        }\n        optionsManager.current.dispose();\n        removalLocker?.unlock();\n    }, [\n        removalLocker,\n        instance.current,\n        childNodes.current,\n        element.current,\n        optionsManager.current,\n        childElementsDetached.current,\n        shouldRestoreFocus.current,\n    ]);\n    useLayoutEffect(() => {\n        onComponentMounted();\n        return () => {\n            onComponentUnmounted();\n        };\n    }, []);\n    useLayoutEffect(() => {\n        onComponentUpdated();\n    });\n    useImperativeHandle(ref, () => ({\n        getInstance() {\n            return instance.current;\n        },\n        getElement() {\n            return element.current;\n        },\n        createWidget(el) {\n            createWidget(el);\n        },\n    }), [instance.current, element.current, createWidget]);\n    const _renderChildren = useCallback(() => {\n        if (renderChildren) {\n            return renderChildren();\n        }\n        const { children } = props;\n        return children;\n    }, [props, renderChildren]);\n    const renderPortal = useCallback(() => portalContainer.current && createPortal(_renderChildren(), portalContainer.current), [portalContainer.current, _renderChildren]);\n    const renderContent = useCallback(() => {\n        const { children } = props;\n        return isPortalComponent && children\n            ? React.createElement('div', {\n                ref: (node) => {\n                    if (node && portalContainer.current !== node) {\n                        portalContainer.current = node;\n                        setForceUpdateToken(Symbol('force update token'));\n                    }\n                },\n                style: { display: 'contents' },\n            })\n            : _renderChildren();\n    }, [\n        props,\n        isPortalComponent,\n        portalContainer.current,\n        _renderChildren,\n    ]);\n    const renderContextValue = useMemo(() => ({\n        isTemplateRendering: false,\n    }), []);\n    return (React.createElement(RestoreTreeContext.Provider, { value: restoreTree },\n        React.createElement(TemplateRenderingContext.Provider, { value: renderContextValue },\n            React.createElement(\"div\", { ref: childrenContainerRef, ...getElementProps() },\n                React.createElement(NestedOptionContext.Provider, { value: context }, renderContent()),\n                React.createElement(TemplateManager, { init: setTemplateManagerHooks, onTemplatesRendered: onTemplatesRendered }),\n                isPortalComponent\n                    && React.createElement(NestedOptionContext.Provider, { value: context }, renderPortal())))));\n});\nexport { ComponentBase, DX_REMOVE_EVENT, };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}