{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/utils/version.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport errors from \"../../core/errors\";\nconst MAX_MINOR_VERSION = 2;\nconst MIN_MINOR_VERSION = 1;\nconst assertedVersions = [];\nconst VERSION_SPLITTER = \".\";\nexport function stringifyVersion(version) {\n  const {\n    major: major,\n    minor: minor,\n    patch: patch\n  } = version;\n  return [major, minor, patch].join(\".\");\n}\nexport function parseVersion(version) {\n  const [major, minor, patch] = version.split(\".\").map(Number);\n  return {\n    major: major,\n    minor: minor,\n    patch: patch\n  };\n}\nexport function assertDevExtremeVersion(packageName, version) {\n  assertedVersions.push({\n    packageName: packageName,\n    version: version\n  });\n}\nexport function clearAssertedVersions() {}\nfunction stringifyVersionList(assertedVersionList) {\n  return assertedVersionList.map(assertedVersion => `${assertedVersion.packageName}: ${assertedVersion.version}`).join(\"\\n\");\n}\nfunction versionsEqual(versionA, versionB) {\n  return versionA.major === versionB.major && versionA.minor === versionB.minor && versionA.patch === versionB.patch;\n}\nexport function getPreviousMajorVersion(_ref) {\n  let {\n    major: major,\n    minor: minor,\n    patch: patch\n  } = _ref;\n  const previousMajorVersion = 1 === minor ? {\n    major: major - 1,\n    minor: 2,\n    patch: patch\n  } : {\n    major: major,\n    minor: minor - 1,\n    patch: patch\n  };\n  return previousMajorVersion;\n}\nexport function assertedVersionsCompatible(currentVersion) {\n  const mismatchingVersions = assertedVersions.filter(assertedVersion => !versionsEqual(parseVersion(assertedVersion.version), currentVersion));\n  if (mismatchingVersions.length) {\n    errors.log(\"W0023\", stringifyVersionList([{\n      packageName: \"devextreme\",\n      version: stringifyVersion(currentVersion)\n    }, ...mismatchingVersions]));\n    return false;\n  }\n  return true;\n}","map":{"version":3,"names":["errors","MAX_MINOR_VERSION","MIN_MINOR_VERSION","assertedVersions","VERSION_SPLITTER","stringifyVersion","version","major","minor","patch","join","parseVersion","split","map","Number","assertDevExtremeVersion","packageName","push","clearAssertedVersions","stringifyVersionList","assertedVersionList","assertedVersion","versionsEqual","versionA","versionB","getPreviousMajorVersion","_ref","previousMajorVersion","assertedVersionsCompatible","currentVersion","mismatchingVersions","filter","length","log"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/utils/version.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/utils/version.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport errors from \"../../core/errors\";\r\nconst MAX_MINOR_VERSION = 2;\r\nconst MIN_MINOR_VERSION = 1;\r\nconst assertedVersions = [];\r\nconst VERSION_SPLITTER = \".\";\r\nexport function stringifyVersion(version) {\r\n    const {\r\n        major: major,\r\n        minor: minor,\r\n        patch: patch\r\n    } = version;\r\n    return [major, minor, patch].join(\".\")\r\n}\r\nexport function parseVersion(version) {\r\n    const [major, minor, patch] = version.split(\".\").map(Number);\r\n    return {\r\n        major: major,\r\n        minor: minor,\r\n        patch: patch\r\n    }\r\n}\r\nexport function assertDevExtremeVersion(packageName, version) {\r\n    assertedVersions.push({\r\n        packageName: packageName,\r\n        version: version\r\n    })\r\n}\r\nexport function clearAssertedVersions() {}\r\n\r\nfunction stringifyVersionList(assertedVersionList) {\r\n    return assertedVersionList.map((assertedVersion => `${assertedVersion.packageName}: ${assertedVersion.version}`)).join(\"\\n\")\r\n}\r\n\r\nfunction versionsEqual(versionA, versionB) {\r\n    return versionA.major === versionB.major && versionA.minor === versionB.minor && versionA.patch === versionB.patch\r\n}\r\nexport function getPreviousMajorVersion(_ref) {\r\n    let {\r\n        major: major,\r\n        minor: minor,\r\n        patch: patch\r\n    } = _ref;\r\n    const previousMajorVersion = 1 === minor ? {\r\n        major: major - 1,\r\n        minor: 2,\r\n        patch: patch\r\n    } : {\r\n        major: major,\r\n        minor: minor - 1,\r\n        patch: patch\r\n    };\r\n    return previousMajorVersion\r\n}\r\nexport function assertedVersionsCompatible(currentVersion) {\r\n    const mismatchingVersions = assertedVersions.filter((assertedVersion => !versionsEqual(parseVersion(assertedVersion.version), currentVersion)));\r\n    if (mismatchingVersions.length) {\r\n        errors.log(\"W0023\", stringifyVersionList([{\r\n            packageName: \"devextreme\",\r\n            version: stringifyVersion(currentVersion)\r\n        }, ...mismatchingVersions]));\r\n        return false\r\n    }\r\n    return true\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,MAAM,MAAM,mBAAmB;AACtC,MAAMC,iBAAiB,GAAG,CAAC;AAC3B,MAAMC,iBAAiB,GAAG,CAAC;AAC3B,MAAMC,gBAAgB,GAAG,EAAE;AAC3B,MAAMC,gBAAgB,GAAG,GAAG;AAC5B,OAAO,SAASC,gBAAgBA,CAACC,OAAO,EAAE;EACtC,MAAM;IACFC,KAAK,EAAEA,KAAK;IACZC,KAAK,EAAEA,KAAK;IACZC,KAAK,EAAEA;EACX,CAAC,GAAGH,OAAO;EACX,OAAO,CAACC,KAAK,EAAEC,KAAK,EAAEC,KAAK,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;AAC1C;AACA,OAAO,SAASC,YAAYA,CAACL,OAAO,EAAE;EAClC,MAAM,CAACC,KAAK,EAAEC,KAAK,EAAEC,KAAK,CAAC,GAAGH,OAAO,CAACM,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;EAC5D,OAAO;IACHP,KAAK,EAAEA,KAAK;IACZC,KAAK,EAAEA,KAAK;IACZC,KAAK,EAAEA;EACX,CAAC;AACL;AACA,OAAO,SAASM,uBAAuBA,CAACC,WAAW,EAAEV,OAAO,EAAE;EAC1DH,gBAAgB,CAACc,IAAI,CAAC;IAClBD,WAAW,EAAEA,WAAW;IACxBV,OAAO,EAAEA;EACb,CAAC,CAAC;AACN;AACA,OAAO,SAASY,qBAAqBA,CAAA,EAAG,CAAC;AAEzC,SAASC,oBAAoBA,CAACC,mBAAmB,EAAE;EAC/C,OAAOA,mBAAmB,CAACP,GAAG,CAAEQ,eAAe,IAAI,GAAGA,eAAe,CAACL,WAAW,KAAKK,eAAe,CAACf,OAAO,EAAG,CAAC,CAACI,IAAI,CAAC,IAAI,CAAC;AAChI;AAEA,SAASY,aAAaA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;EACvC,OAAOD,QAAQ,CAAChB,KAAK,KAAKiB,QAAQ,CAACjB,KAAK,IAAIgB,QAAQ,CAACf,KAAK,KAAKgB,QAAQ,CAAChB,KAAK,IAAIe,QAAQ,CAACd,KAAK,KAAKe,QAAQ,CAACf,KAAK;AACtH;AACA,OAAO,SAASgB,uBAAuBA,CAACC,IAAI,EAAE;EAC1C,IAAI;IACAnB,KAAK,EAAEA,KAAK;IACZC,KAAK,EAAEA,KAAK;IACZC,KAAK,EAAEA;EACX,CAAC,GAAGiB,IAAI;EACR,MAAMC,oBAAoB,GAAG,CAAC,KAAKnB,KAAK,GAAG;IACvCD,KAAK,EAAEA,KAAK,GAAG,CAAC;IAChBC,KAAK,EAAE,CAAC;IACRC,KAAK,EAAEA;EACX,CAAC,GAAG;IACAF,KAAK,EAAEA,KAAK;IACZC,KAAK,EAAEA,KAAK,GAAG,CAAC;IAChBC,KAAK,EAAEA;EACX,CAAC;EACD,OAAOkB,oBAAoB;AAC/B;AACA,OAAO,SAASC,0BAA0BA,CAACC,cAAc,EAAE;EACvD,MAAMC,mBAAmB,GAAG3B,gBAAgB,CAAC4B,MAAM,CAAEV,eAAe,IAAI,CAACC,aAAa,CAACX,YAAY,CAACU,eAAe,CAACf,OAAO,CAAC,EAAEuB,cAAc,CAAE,CAAC;EAC/I,IAAIC,mBAAmB,CAACE,MAAM,EAAE;IAC5BhC,MAAM,CAACiC,GAAG,CAAC,OAAO,EAAEd,oBAAoB,CAAC,CAAC;MACtCH,WAAW,EAAE,YAAY;MACzBV,OAAO,EAAED,gBAAgB,CAACwB,cAAc;IAC5C,CAAC,EAAE,GAAGC,mBAAmB,CAAC,CAAC,CAAC;IAC5B,OAAO,KAAK;EAChB;EACA,OAAO,IAAI;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}