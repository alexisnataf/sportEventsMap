{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/core/m_config.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport errors from \"../../core/errors\";\nimport { extend } from \"../../core/utils/extend\";\nconst config = {\n  rtlEnabled: false,\n  defaultCurrency: \"USD\",\n  defaultUseCurrencyAccountingStyle: true,\n  oDataFilterToLower: true,\n  serverDecimalSeparator: \".\",\n  decimalSeparator: \".\",\n  thousandsSeparator: \",\",\n  forceIsoDateParsing: true,\n  wrapActionsBeforeExecute: true,\n  useLegacyStoreResult: false,\n  useJQuery: void 0,\n  editorStylingMode: void 0,\n  useLegacyVisibleIndex: false,\n  floatingActionButtonConfig: {\n    icon: \"add\",\n    closeIcon: \"close\",\n    label: \"\",\n    position: {\n      at: \"right bottom\",\n      my: \"right bottom\",\n      offset: {\n        x: -16,\n        y: -16\n      }\n    },\n    maxSpeedDialActionCount: 5,\n    shading: false,\n    direction: \"auto\"\n  },\n  optionsParser: optionsString => {\n    if (\"{\" !== optionsString.trim().charAt(0)) {\n      optionsString = `{${optionsString}}`;\n    }\n    try {\n      return JSON.parse(optionsString);\n    } catch (ex) {\n      try {\n        return JSON.parse(normalizeToJSONString(optionsString));\n      } catch (exNormalize) {\n        throw errors.Error(\"E3018\", ex, optionsString);\n      }\n    }\n  }\n};\nconst normalizeToJSONString = optionsString => optionsString.replace(/'/g, '\"').replace(/,\\s*([\\]}])/g, \"$1\").replace(/([{,])\\s*([^\":\\s]+)\\s*:/g, '$1\"$2\":');\nconst deprecatedFields = [\"decimalSeparator\", \"thousandsSeparator\"];\nconst configMethod = function () {\n  if (!arguments.length) {\n    return config;\n  }\n  const newConfig = arguments.length <= 0 ? void 0 : arguments[0];\n  deprecatedFields.forEach(deprecatedField => {\n    if (newConfig[deprecatedField]) {\n      const message = `Now, the ${deprecatedField} is selected based on the specified locale.`;\n      errors.log(\"W0003\", \"config\", deprecatedField, \"19.2\", message);\n    }\n  });\n  extend(config, newConfig);\n};\nif (\"undefined\" !== typeof DevExpress && DevExpress.config) {\n  configMethod(DevExpress.config);\n}\nexport default configMethod;","map":{"version":3,"names":["errors","extend","config","rtlEnabled","defaultCurrency","defaultUseCurrencyAccountingStyle","oDataFilterToLower","serverDecimalSeparator","decimalSeparator","thousandsSeparator","forceIsoDateParsing","wrapActionsBeforeExecute","useLegacyStoreResult","useJQuery","editorStylingMode","useLegacyVisibleIndex","floatingActionButtonConfig","icon","closeIcon","label","position","at","my","offset","x","y","maxSpeedDialActionCount","shading","direction","optionsParser","optionsString","trim","charAt","JSON","parse","ex","normalizeToJSONString","exNormalize","Error","replace","deprecatedFields","configMethod","arguments","length","newConfig","forEach","deprecatedField","message","log","DevExpress"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/core/m_config.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/core/m_config.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport errors from \"../../core/errors\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nconst config = {\r\n    rtlEnabled: false,\r\n    defaultCurrency: \"USD\",\r\n    defaultUseCurrencyAccountingStyle: true,\r\n    oDataFilterToLower: true,\r\n    serverDecimalSeparator: \".\",\r\n    decimalSeparator: \".\",\r\n    thousandsSeparator: \",\",\r\n    forceIsoDateParsing: true,\r\n    wrapActionsBeforeExecute: true,\r\n    useLegacyStoreResult: false,\r\n    useJQuery: void 0,\r\n    editorStylingMode: void 0,\r\n    useLegacyVisibleIndex: false,\r\n    floatingActionButtonConfig: {\r\n        icon: \"add\",\r\n        closeIcon: \"close\",\r\n        label: \"\",\r\n        position: {\r\n            at: \"right bottom\",\r\n            my: \"right bottom\",\r\n            offset: {\r\n                x: -16,\r\n                y: -16\r\n            }\r\n        },\r\n        maxSpeedDialActionCount: 5,\r\n        shading: false,\r\n        direction: \"auto\"\r\n    },\r\n    optionsParser: optionsString => {\r\n        if (\"{\" !== optionsString.trim().charAt(0)) {\r\n            optionsString = `{${optionsString}}`\r\n        }\r\n        try {\r\n            return JSON.parse(optionsString)\r\n        } catch (ex) {\r\n            try {\r\n                return JSON.parse(normalizeToJSONString(optionsString))\r\n            } catch (exNormalize) {\r\n                throw errors.Error(\"E3018\", ex, optionsString)\r\n            }\r\n        }\r\n    }\r\n};\r\nconst normalizeToJSONString = optionsString => optionsString.replace(/'/g, '\"').replace(/,\\s*([\\]}])/g, \"$1\").replace(/([{,])\\s*([^\":\\s]+)\\s*:/g, '$1\"$2\":');\r\nconst deprecatedFields = [\"decimalSeparator\", \"thousandsSeparator\"];\r\nconst configMethod = function() {\r\n    if (!arguments.length) {\r\n        return config\r\n    }\r\n    const newConfig = arguments.length <= 0 ? void 0 : arguments[0];\r\n    deprecatedFields.forEach((deprecatedField => {\r\n        if (newConfig[deprecatedField]) {\r\n            const message = `Now, the ${deprecatedField} is selected based on the specified locale.`;\r\n            errors.log(\"W0003\", \"config\", deprecatedField, \"19.2\", message)\r\n        }\r\n    }));\r\n    extend(config, newConfig)\r\n};\r\nif (\"undefined\" !== typeof DevExpress && DevExpress.config) {\r\n    configMethod(DevExpress.config)\r\n}\r\nexport default configMethod;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,MAAM,MAAM,mBAAmB;AACtC,SACIC,MAAM,QACH,yBAAyB;AAChC,MAAMC,MAAM,GAAG;EACXC,UAAU,EAAE,KAAK;EACjBC,eAAe,EAAE,KAAK;EACtBC,iCAAiC,EAAE,IAAI;EACvCC,kBAAkB,EAAE,IAAI;EACxBC,sBAAsB,EAAE,GAAG;EAC3BC,gBAAgB,EAAE,GAAG;EACrBC,kBAAkB,EAAE,GAAG;EACvBC,mBAAmB,EAAE,IAAI;EACzBC,wBAAwB,EAAE,IAAI;EAC9BC,oBAAoB,EAAE,KAAK;EAC3BC,SAAS,EAAE,KAAK,CAAC;EACjBC,iBAAiB,EAAE,KAAK,CAAC;EACzBC,qBAAqB,EAAE,KAAK;EAC5BC,0BAA0B,EAAE;IACxBC,IAAI,EAAE,KAAK;IACXC,SAAS,EAAE,OAAO;IAClBC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;MACNC,EAAE,EAAE,cAAc;MAClBC,EAAE,EAAE,cAAc;MAClBC,MAAM,EAAE;QACJC,CAAC,EAAE,CAAC,EAAE;QACNC,CAAC,EAAE,CAAC;MACR;IACJ,CAAC;IACDC,uBAAuB,EAAE,CAAC;IAC1BC,OAAO,EAAE,KAAK;IACdC,SAAS,EAAE;EACf,CAAC;EACDC,aAAa,EAAEC,aAAa,IAAI;IAC5B,IAAI,GAAG,KAAKA,aAAa,CAACC,IAAI,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE;MACxCF,aAAa,GAAG,IAAIA,aAAa,GAAG;IACxC;IACA,IAAI;MACA,OAAOG,IAAI,CAACC,KAAK,CAACJ,aAAa,CAAC;IACpC,CAAC,CAAC,OAAOK,EAAE,EAAE;MACT,IAAI;QACA,OAAOF,IAAI,CAACC,KAAK,CAACE,qBAAqB,CAACN,aAAa,CAAC,CAAC;MAC3D,CAAC,CAAC,OAAOO,WAAW,EAAE;QAClB,MAAMrC,MAAM,CAACsC,KAAK,CAAC,OAAO,EAAEH,EAAE,EAAEL,aAAa,CAAC;MAClD;IACJ;EACJ;AACJ,CAAC;AACD,MAAMM,qBAAqB,GAAGN,aAAa,IAAIA,aAAa,CAACS,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC,CAACA,OAAO,CAAC,0BAA0B,EAAE,SAAS,CAAC;AAC5J,MAAMC,gBAAgB,GAAG,CAAC,kBAAkB,EAAE,oBAAoB,CAAC;AACnE,MAAMC,YAAY,GAAG,SAAAA,CAAA,EAAW;EAC5B,IAAI,CAACC,SAAS,CAACC,MAAM,EAAE;IACnB,OAAOzC,MAAM;EACjB;EACA,MAAM0C,SAAS,GAAGF,SAAS,CAACC,MAAM,IAAI,CAAC,GAAG,KAAK,CAAC,GAAGD,SAAS,CAAC,CAAC,CAAC;EAC/DF,gBAAgB,CAACK,OAAO,CAAEC,eAAe,IAAI;IACzC,IAAIF,SAAS,CAACE,eAAe,CAAC,EAAE;MAC5B,MAAMC,OAAO,GAAG,YAAYD,eAAe,6CAA6C;MACxF9C,MAAM,CAACgD,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAEF,eAAe,EAAE,MAAM,EAAEC,OAAO,CAAC;IACnE;EACJ,CAAE,CAAC;EACH9C,MAAM,CAACC,MAAM,EAAE0C,SAAS,CAAC;AAC7B,CAAC;AACD,IAAI,WAAW,KAAK,OAAOK,UAAU,IAAIA,UAAU,CAAC/C,MAAM,EAAE;EACxDuC,YAAY,CAACQ,UAAU,CAAC/C,MAAM,CAAC;AACnC;AACA,eAAeuC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}