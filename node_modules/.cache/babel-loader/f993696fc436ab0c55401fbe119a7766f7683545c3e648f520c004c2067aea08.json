{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/ui/popup/m_popup.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport \"../../../ui/toolbar/ui.toolbar.base\";\nimport { triggerResizeEvent } from \"../../../common/core/events/visibility_change\";\nimport messageLocalization from \"../../../common/core/localization/message\";\nimport registerComponent from \"../../../core/component_registrator\";\nimport devices from \"../../../core/devices\";\nimport { getPublicElement } from \"../../../core/element\";\nimport Guid from \"../../../core/guid\";\nimport $ from \"../../../core/renderer\";\nimport resizeObserverSingleton from \"../../../core/resize_observer\";\nimport { EmptyTemplate } from \"../../../core/templates/empty_template\";\nimport browser from \"../../../core/utils/browser\";\nimport { noop } from \"../../../core/utils/common\";\nimport { extend } from \"../../../core/utils/extend\";\nimport { camelize } from \"../../../core/utils/inflector\";\nimport { each } from \"../../../core/utils/iterator\";\nimport { getBoundingRect } from \"../../../core/utils/position\";\nimport { addOffsetToMaxHeight, addOffsetToMinHeight, getHeight, getOuterWidth, getVerticalOffsets, getVisibleHeight, getWidth } from \"../../../core/utils/size\";\nimport { isDefined, isObject } from \"../../../core/utils/type\";\nimport { compare as compareVersions } from \"../../../core/utils/version\";\nimport Button from \"../../../ui/button\";\nimport Resizable from \"../../../ui/resizable\";\nimport { isFluent, isMaterial, isMaterialBased } from \"../../../ui/themes\";\nimport Overlay from \"../../ui/overlay/m_overlay\";\nimport * as zIndexPool from \"../../ui/overlay/m_z_index\";\nimport windowUtils from \"../../core/utils/m_window\";\nimport PopupDrag from \"./m_popup_drag\";\nimport { createBodyOverflowManager } from \"./m_popup_overflow_manager\";\nimport { PopupPositionController } from \"./m_popup_position_controller\";\nconst window = windowUtils.getWindow();\nconst POPUP_CLASS = \"dx-popup\";\nconst POPUP_WRAPPER_CLASS = \"dx-popup-wrapper\";\nconst POPUP_FULL_SCREEN_CLASS = \"dx-popup-fullscreen\";\nconst POPUP_FULL_SCREEN_WIDTH_CLASS = \"dx-popup-fullscreen-width\";\nconst POPUP_NORMAL_CLASS = \"dx-popup-normal\";\nconst POPUP_CONTENT_CLASS = \"dx-popup-content\";\nexport const POPUP_CONTENT_SCROLLABLE_CLASS = \"dx-popup-content-scrollable\";\nconst DISABLED_STATE_CLASS = \"dx-state-disabled\";\nconst POPUP_DRAGGABLE_CLASS = \"dx-popup-draggable\";\nconst POPUP_TITLE_CLASS = \"dx-popup-title\";\nconst POPUP_TITLE_CLOSEBUTTON_CLASS = \"dx-closebutton\";\nconst POPUP_BOTTOM_CLASS = \"dx-popup-bottom\";\nconst POPUP_HAS_CLOSE_BUTTON_CLASS = \"dx-has-close-button\";\nexport const TEMPLATE_WRAPPER_CLASS = \"dx-template-wrapper\";\nconst POPUP_CONTENT_FLEX_HEIGHT_CLASS = \"dx-popup-flex-height\";\nconst POPUP_CONTENT_INHERIT_HEIGHT_CLASS = \"dx-popup-inherit-height\";\nconst TOOLBAR_LABEL_CLASS = \"dx-toolbar-label\";\nconst ALLOWED_TOOLBAR_ITEM_ALIASES = [\"cancel\", \"clear\", \"done\"];\nconst BUTTON_DEFAULT_TYPE = \"default\";\nconst BUTTON_NORMAL_TYPE = \"normal\";\nconst BUTTON_TEXT_MODE = \"text\";\nconst BUTTON_CONTAINED_MODE = \"contained\";\nconst BUTTON_OUTLINED_MODE = \"outlined\";\nconst IS_OLD_SAFARI = browser.safari && compareVersions(browser.version, [11]) < 0;\nconst HEIGHT_STRATEGIES = {\n  static: \"\",\n  inherit: \"dx-popup-inherit-height\",\n  flex: \"dx-popup-flex-height\"\n};\nconst getButtonPlace = name => {\n  const device = devices.current();\n  const {\n    platform: platform\n  } = device;\n  let toolbar = \"bottom\";\n  let location = \"before\";\n  if (\"ios\" === platform) {\n    switch (name) {\n      case \"cancel\":\n        toolbar = \"top\";\n        break;\n      case \"clear\":\n        toolbar = \"top\";\n        location = \"after\";\n        break;\n      case \"done\":\n        location = \"after\";\n    }\n  } else if (\"android\" === platform) {\n    switch (name) {\n      case \"cancel\":\n      case \"done\":\n        location = \"after\";\n    }\n  }\n  return {\n    toolbar: toolbar,\n    location: location\n  };\n};\nclass Popup extends Overlay {\n  _supportedKeys() {\n    return _extends({}, super._supportedKeys(), {\n      upArrow: e => {\n        var _this$_drag;\n        null === (_this$_drag = this._drag) || void 0 === _this$_drag || _this$_drag.moveUp(e);\n      },\n      downArrow: e => {\n        var _this$_drag2;\n        null === (_this$_drag2 = this._drag) || void 0 === _this$_drag2 || _this$_drag2.moveDown(e);\n      },\n      leftArrow: e => {\n        var _this$_drag3;\n        null === (_this$_drag3 = this._drag) || void 0 === _this$_drag3 || _this$_drag3.moveLeft(e);\n      },\n      rightArrow: e => {\n        var _this$_drag4;\n        null === (_this$_drag4 = this._drag) || void 0 === _this$_drag4 || _this$_drag4.moveRight(e);\n      }\n    });\n  }\n  _getDefaultOptions() {\n    return _extends({}, super._getDefaultOptions(), {\n      fullScreen: false,\n      title: \"\",\n      showTitle: true,\n      titleTemplate: \"title\",\n      onTitleRendered: null,\n      dragOutsideBoundary: false,\n      dragEnabled: false,\n      enableBodyScroll: true,\n      outsideDragFactor: 0,\n      onResizeStart: null,\n      onResize: null,\n      onResizeEnd: null,\n      resizeEnabled: false,\n      toolbarItems: [],\n      showCloseButton: false,\n      bottomTemplate: \"bottom\",\n      useDefaultToolbarButtons: false,\n      useFlatToolbarButtons: false,\n      autoResizeEnabled: true\n    });\n  }\n  _defaultOptionsRules() {\n    return super._defaultOptionsRules().concat([{\n      device: {\n        platform: \"ios\"\n      },\n      options: {\n        animation: this._iosAnimation\n      }\n    }, {\n      device: {\n        platform: \"android\"\n      },\n      options: {\n        animation: this._androidAnimation\n      }\n    }, {\n      device: {\n        platform: \"generic\"\n      },\n      options: {\n        showCloseButton: true\n      }\n    }, {\n      device: device => \"desktop\" === devices.real().deviceType && \"generic\" === device.platform,\n      options: {\n        dragEnabled: true\n      }\n    }, {\n      device: () => \"desktop\" === devices.real().deviceType && !devices.isSimulator(),\n      options: {\n        focusStateEnabled: true\n      }\n    }, {\n      device: () => isMaterialBased(),\n      options: {\n        useFlatToolbarButtons: true\n      }\n    }, {\n      device: () => isMaterial(),\n      options: {\n        useDefaultToolbarButtons: true,\n        showCloseButton: false\n      }\n    }]);\n  }\n  _iosAnimation() {\n    return {\n      show: {\n        type: \"slide\",\n        duration: 400,\n        from: {\n          position: {\n            my: \"top\",\n            at: \"bottom\"\n          }\n        },\n        to: {\n          position: {\n            my: \"center\",\n            at: \"center\"\n          }\n        }\n      },\n      hide: {\n        type: \"slide\",\n        duration: 400,\n        from: {\n          opacity: 1,\n          position: {\n            my: \"center\",\n            at: \"center\"\n          }\n        },\n        to: {\n          opacity: 1,\n          position: {\n            my: \"top\",\n            at: \"bottom\"\n          }\n        }\n      }\n    };\n  }\n  _androidAnimation() {\n    return this.option(\"fullScreen\") ? {\n      show: {\n        type: \"slide\",\n        duration: 300,\n        from: {\n          top: \"30%\",\n          opacity: 0\n        },\n        to: {\n          top: 0,\n          opacity: 1\n        }\n      },\n      hide: {\n        type: \"slide\",\n        duration: 300,\n        from: {\n          top: 0,\n          opacity: 1\n        },\n        to: {\n          top: \"30%\",\n          opacity: 0\n        }\n      }\n    } : {\n      show: {\n        type: \"fade\",\n        duration: 400,\n        from: 0,\n        to: 1\n      },\n      hide: {\n        type: \"fade\",\n        duration: 400,\n        from: 1,\n        to: 0\n      }\n    };\n  }\n  _init() {\n    const {\n      _wrapperClassExternal: popupWrapperClassExternal\n    } = this.option();\n    const popupWrapperClasses = popupWrapperClassExternal ? `dx-popup-wrapper ${popupWrapperClassExternal}` : \"dx-popup-wrapper\";\n    super._init();\n    this._createBodyOverflowManager();\n    this._updateResizeCallbackSkipCondition();\n    this.$element().addClass(\"dx-popup\");\n    this.$wrapper().addClass(popupWrapperClasses);\n    this._$popupContent = this._$content.wrapInner($(\"<div>\").addClass(\"dx-popup-content\")).children().eq(0);\n    this._toggleContentScrollClass();\n    this.$overlayContent().attr(\"role\", \"dialog\");\n  }\n  _render() {\n    const isFullscreen = this.option(\"fullScreen\");\n    this._toggleFullScreenClass(isFullscreen);\n    super._render();\n  }\n  _createBodyOverflowManager() {\n    this._bodyOverflowManager = createBodyOverflowManager();\n  }\n  _toggleFullScreenClass(value) {\n    this.$overlayContent().toggleClass(\"dx-popup-fullscreen\", value).toggleClass(\"dx-popup-normal\", !value);\n  }\n  _initTemplates() {\n    super._initTemplates();\n    this._templateManager.addDefaultTemplates({\n      title: new EmptyTemplate(),\n      bottom: new EmptyTemplate()\n    });\n  }\n  _getActionsList() {\n    return super._getActionsList().concat([\"onResizeStart\", \"onResize\", \"onResizeEnd\"]);\n  }\n  _contentResizeHandler(entry) {\n    if (!this._shouldSkipContentResize(entry)) {\n      this._renderGeometry({\n        shouldOnlyReposition: true\n      });\n    }\n  }\n  _doesShowAnimationChangeDimensions() {\n    const animation = this.option(\"animation\");\n    return [\"to\", \"from\"].some(prop => {\n      var _animation$show;\n      const config = null === animation || void 0 === animation || null === (_animation$show = animation.show) || void 0 === _animation$show ? void 0 : _animation$show[prop];\n      return isObject(config) && (\"width\" in config || \"height\" in config);\n    });\n  }\n  _updateResizeCallbackSkipCondition() {\n    const doesShowAnimationChangeDimensions = this._doesShowAnimationChangeDimensions();\n    this._shouldSkipContentResize = entry => doesShowAnimationChangeDimensions && this._showAnimationProcessing || this._areContentDimensionsRendered(entry);\n  }\n  _observeContentResize(shouldObserve) {\n    if (!this.option(\"useResizeObserver\")) {\n      return;\n    }\n    const contentElement = this._$content.get(0);\n    if (shouldObserve) {\n      resizeObserverSingleton.observe(contentElement, entry => {\n        this._contentResizeHandler(entry);\n      });\n    } else {\n      resizeObserverSingleton.unobserve(contentElement);\n    }\n  }\n  _areContentDimensionsRendered(entry) {\n    var _entry$contentBoxSize, _this$_renderedDimens3, _this$_renderedDimens4;\n    const contentBox = null === (_entry$contentBoxSize = entry.contentBoxSize) || void 0 === _entry$contentBoxSize ? void 0 : _entry$contentBoxSize[0];\n    if (contentBox) {\n      var _this$_renderedDimens, _this$_renderedDimens2;\n      return parseInt(contentBox.inlineSize, 10) === (null === (_this$_renderedDimens = this._renderedDimensions) || void 0 === _this$_renderedDimens ? void 0 : _this$_renderedDimens.width) && parseInt(contentBox.blockSize, 10) === (null === (_this$_renderedDimens2 = this._renderedDimensions) || void 0 === _this$_renderedDimens2 ? void 0 : _this$_renderedDimens2.height);\n    }\n    const {\n      contentRect: contentRect\n    } = entry;\n    return parseInt(contentRect.width, 10) === (null === (_this$_renderedDimens3 = this._renderedDimensions) || void 0 === _this$_renderedDimens3 ? void 0 : _this$_renderedDimens3.width) && parseInt(contentRect.height, 10) === (null === (_this$_renderedDimens4 = this._renderedDimensions) || void 0 === _this$_renderedDimens4 ? void 0 : _this$_renderedDimens4.height);\n  }\n  _renderContent() {\n    super._renderContent();\n    this._observeContentResize(true);\n  }\n  _renderContentImpl() {\n    this._renderTitle();\n    super._renderContentImpl();\n    this._renderResize();\n    this._renderBottom();\n  }\n  _renderTitle() {\n    const items = this._getToolbarItems(\"top\");\n    const {\n      title: title,\n      showTitle: showTitle\n    } = this.option();\n    if (showTitle && !!title) {\n      items.unshift({\n        location: devices.current().ios ? \"center\" : \"before\",\n        text: title\n      });\n    }\n    if (showTitle || items.length > 0) {\n      if (this._$title) {\n        this._$title.remove();\n      }\n      const $title = $(\"<div>\").addClass(\"dx-popup-title\").insertBefore(this.$content());\n      this._$title = this._renderTemplateByType(\"titleTemplate\", items, $title).addClass(\"dx-popup-title\");\n      this._renderDrag();\n      this._executeTitleRenderAction(this._$title);\n      this._$title.toggleClass(\"dx-has-close-button\", this._hasCloseButton());\n    } else if (this._$title) {\n      this._$title.detach();\n    }\n    this._toggleAriaLabel();\n  }\n  _toggleAriaLabel() {\n    var _this$_$title;\n    const {\n      title: title,\n      showTitle: showTitle\n    } = this.option();\n    const shouldSetAriaLabel = showTitle && !!title;\n    const titleId = shouldSetAriaLabel ? new Guid() : null;\n    null === (_this$_$title = this._$title) || void 0 === _this$_$title || _this$_$title.find(\".dx-toolbar-label\").eq(0).attr(\"id\", titleId);\n    this.$overlayContent().attr(\"aria-labelledby\", titleId);\n  }\n  _renderTemplateByType(optionName, data, $container, additionalToolbarOptions) {\n    const {\n      rtlEnabled: rtlEnabled,\n      useDefaultToolbarButtons: useDefaultToolbarButtons,\n      useFlatToolbarButtons: useFlatToolbarButtons,\n      disabled: disabled\n    } = this.option();\n    const template = this._getTemplateByOption(optionName);\n    const toolbarTemplate = template instanceof EmptyTemplate;\n    if (toolbarTemplate) {\n      const integrationOptions = extend({}, this.option(\"integrationOptions\"), {\n        skipTemplates: [\"content\", \"title\"]\n      });\n      const toolbarOptions = extend(additionalToolbarOptions, {\n        items: data,\n        rtlEnabled: rtlEnabled,\n        useDefaultButtons: useDefaultToolbarButtons,\n        useFlatButtons: useFlatToolbarButtons,\n        disabled: disabled,\n        integrationOptions: integrationOptions\n      });\n      this._getTemplate(\"dx-polymorph-widget\").render({\n        container: $container,\n        model: {\n          widget: this._getToolbarName(),\n          options: toolbarOptions\n        }\n      });\n      const $toolbar = $container.children(\"div\");\n      $container.replaceWith($toolbar);\n      return $toolbar;\n    }\n    const $result = $(template.render({\n      container: getPublicElement($container)\n    }));\n    if ($result.hasClass(\"dx-template-wrapper\")) {\n      $container.replaceWith($result);\n      $container = $result;\n    }\n    return $container;\n  }\n  _getToolbarName() {\n    return \"dxToolbarBase\";\n  }\n  _renderVisibilityAnimate(visible) {\n    return super._renderVisibilityAnimate(visible);\n  }\n  _hide() {\n    this._observeContentResize(false);\n    return super._hide();\n  }\n  _executeTitleRenderAction($titleElement) {\n    this._getTitleRenderAction()({\n      titleElement: getPublicElement($titleElement)\n    });\n  }\n  _getTitleRenderAction() {\n    return this._titleRenderAction || this._createTitleRenderAction();\n  }\n  _createTitleRenderAction() {\n    return this._titleRenderAction = this._createActionByOption(\"onTitleRendered\", {\n      element: this.element(),\n      excludeValidators: [\"disabled\", \"readOnly\"]\n    });\n  }\n  _getCloseButton() {\n    return {\n      toolbar: \"top\",\n      location: \"after\",\n      template: this._getCloseButtonRenderer()\n    };\n  }\n  _getCloseButtonRenderer() {\n    return (_, __, container) => {\n      const $button = $(\"<div>\").addClass(\"dx-closebutton\");\n      this._createComponent($button, Button, {\n        icon: \"close\",\n        onClick: this._createToolbarItemAction(void 0),\n        stylingMode: \"text\",\n        integrationOptions: {}\n      });\n      $(container).append($button);\n    };\n  }\n  _getToolbarItems(toolbar) {\n    const toolbarItems = this.option(\"toolbarItems\");\n    const toolbarsItems = [];\n    this._toolbarItemClasses = [];\n    const currentPlatform = devices.current().platform;\n    let index = 0;\n    each(toolbarItems, (_, data) => {\n      const isShortcut = isDefined(data.shortcut);\n      const item = isShortcut ? getButtonPlace(data.shortcut) : data;\n      if (isShortcut && \"ios\" === currentPlatform && index < 2) {\n        item.toolbar = \"top\";\n        index++;\n      }\n      item.toolbar = data.toolbar || item.toolbar || \"top\";\n      if (item && item.toolbar === toolbar) {\n        if (isShortcut) {\n          extend(item, {\n            location: data.location\n          }, this._getToolbarItemByAlias(data));\n        }\n        const isLTROrder = \"generic\" === currentPlatform;\n        if (\"done\" === data.shortcut && isLTROrder || \"cancel\" === data.shortcut && !isLTROrder) {\n          toolbarsItems.unshift(item);\n        } else {\n          toolbarsItems.push(item);\n        }\n      }\n    });\n    if (\"top\" === toolbar && this._hasCloseButton()) {\n      toolbarsItems.push(this._getCloseButton());\n    }\n    return toolbarsItems;\n  }\n  _hasCloseButton() {\n    const {\n      showCloseButton: showCloseButton,\n      showTitle: showTitle\n    } = this.option();\n    return showCloseButton && showTitle;\n  }\n  _getLocalizationKey(itemType) {\n    return \"done\" === itemType.toLowerCase() ? \"OK\" : camelize(itemType, true);\n  }\n  _getToolbarButtonStylingMode(shortcut) {\n    if (isFluent()) {\n      return \"done\" === shortcut ? \"contained\" : \"outlined\";\n    }\n    return this.option(\"useFlatToolbarButtons\") ? \"text\" : \"contained\";\n  }\n  _getToolbarButtonType(shortcut) {\n    if (isFluent() && \"done\" === shortcut || this.option(\"useDefaultToolbarButtons\")) {\n      return \"default\";\n    }\n    return \"normal\";\n  }\n  _getToolbarItemByAlias(data) {\n    const that = this;\n    const itemType = data.shortcut;\n    if (!ALLOWED_TOOLBAR_ITEM_ALIASES.includes(itemType)) {\n      return false;\n    }\n    const itemConfig = extend({\n      text: messageLocalization.format(this._getLocalizationKey(itemType)),\n      onClick: this._createToolbarItemAction(data.onClick),\n      integrationOptions: {},\n      type: this._getToolbarButtonType(itemType),\n      stylingMode: this._getToolbarButtonStylingMode(itemType)\n    }, data.options || {});\n    const itemClass = `dx-popup-${itemType}`;\n    this._toolbarItemClasses.push(itemClass);\n    return {\n      template(_, __, container) {\n        const $toolbarItem = $(\"<div>\").addClass(itemClass).appendTo(container);\n        that._createComponent($toolbarItem, Button, itemConfig);\n      }\n    };\n  }\n  _createToolbarItemAction(clickAction) {\n    return this._createAction(clickAction, {\n      afterExecute(e) {\n        e.component.hide();\n      }\n    });\n  }\n  _renderBottom() {\n    const items = this._getToolbarItems(\"bottom\");\n    if (items.length) {\n      var _this$_$bottom;\n      null === (_this$_$bottom = this._$bottom) || void 0 === _this$_$bottom || _this$_$bottom.remove();\n      const $bottom = $(\"<div>\").addClass(\"dx-popup-bottom\").insertAfter(this.$content());\n      this._$bottom = this._renderTemplateByType(\"bottomTemplate\", items, $bottom, {\n        compactMode: true\n      }).addClass(\"dx-popup-bottom\");\n      this._toggleClasses();\n    } else {\n      var _this$_$bottom2;\n      null === (_this$_$bottom2 = this._$bottom) || void 0 === _this$_$bottom2 || _this$_$bottom2.detach();\n    }\n  }\n  _toggleDisabledState(value) {\n    super._toggleDisabledState(...arguments);\n    this.$content().toggleClass(\"dx-state-disabled\", Boolean(value));\n  }\n  _toggleClasses() {\n    const aliases = ALLOWED_TOOLBAR_ITEM_ALIASES;\n    each(aliases, (_, alias) => {\n      const className = `dx-popup-${alias}`;\n      if (this._toolbarItemClasses.includes(className)) {\n        var _this$_$bottom3;\n        this.$wrapper().addClass(`${className}-visible`);\n        null === (_this$_$bottom3 = this._$bottom) || void 0 === _this$_$bottom3 || _this$_$bottom3.addClass(className);\n      } else {\n        var _this$_$bottom4;\n        this.$wrapper().removeClass(`${className}-visible`);\n        null === (_this$_$bottom4 = this._$bottom) || void 0 === _this$_$bottom4 || _this$_$bottom4.removeClass(className);\n      }\n    });\n  }\n  _toggleFocusClass(isFocused, $element) {\n    super._toggleFocusClass(isFocused, $element);\n    if (isFocused && !zIndexPool.isLastZIndexInStack(this._zIndex)) {\n      const zIndex = zIndexPool.create(this._zIndexInitValue());\n      zIndexPool.remove(this._zIndex);\n      this._zIndex = zIndex;\n      this._$wrapper.css(\"zIndex\", zIndex);\n      this._$content.css(\"zIndex\", zIndex);\n    }\n  }\n  _toggleContentScrollClass() {\n    const isNativeScrollingEnabled = !this.option(\"preventScrollEvents\");\n    this.$content().toggleClass(\"dx-popup-content-scrollable\", isNativeScrollingEnabled);\n  }\n  _getPositionControllerConfig() {\n    const {\n      fullScreen: fullScreen,\n      forceApplyBindings: forceApplyBindings,\n      dragOutsideBoundary: dragOutsideBoundary,\n      dragAndResizeArea: dragAndResizeArea,\n      outsideDragFactor: outsideDragFactor\n    } = this.option();\n    return _extends({}, super._getPositionControllerConfig(), {\n      fullScreen: fullScreen,\n      forceApplyBindings: forceApplyBindings,\n      dragOutsideBoundary: dragOutsideBoundary,\n      dragAndResizeArea: dragAndResizeArea,\n      outsideDragFactor: outsideDragFactor\n    });\n  }\n  _initPositionController() {\n    this._positionController = new PopupPositionController(this._getPositionControllerConfig());\n  }\n  _getDragTarget() {\n    return this.topToolbar();\n  }\n  _renderGeometry(options) {\n    const {\n      visible: visible,\n      useResizeObserver: useResizeObserver\n    } = this.option();\n    if (visible && windowUtils.hasWindow()) {\n      const isAnimated = this._showAnimationProcessing;\n      const shouldRepeatAnimation = isAnimated && !(null !== options && void 0 !== options && options.forceStopAnimation) && useResizeObserver;\n      this._isAnimationPaused = shouldRepeatAnimation || void 0;\n      this._stopAnimation();\n      if (null !== options && void 0 !== options && options.shouldOnlyReposition) {\n        this._renderPosition(false);\n      } else {\n        this._renderGeometryImpl(null === options || void 0 === options ? void 0 : options.isDimensionChange);\n      }\n      if (shouldRepeatAnimation) {\n        this._animateShowing();\n        this._isAnimationPaused = void 0;\n      }\n    }\n  }\n  _cacheDimensions() {\n    if (!this.option(\"useResizeObserver\")) {\n      return;\n    }\n    this._renderedDimensions = {\n      width: parseInt(getWidth(this._$content), 10),\n      height: parseInt(getHeight(this._$content), 10)\n    };\n  }\n  _renderGeometryImpl() {\n    let isDimensionChange = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : false;\n    if (!isDimensionChange) {\n      this._resetContentHeight();\n    }\n    super._renderGeometryImpl();\n    this._cacheDimensions();\n    this._setContentHeight();\n  }\n  _resetContentHeight() {\n    const height = this._getOptionValue(\"height\");\n    if (\"auto\" === height) {\n      this.$content().css({\n        height: \"auto\",\n        maxHeight: \"none\"\n      });\n    }\n  }\n  _renderDrag() {\n    const $dragTarget = this._getDragTarget();\n    const {\n      dragEnabled: dragEnabled\n    } = this.option();\n    if (!$dragTarget) {\n      return;\n    }\n    const config = {\n      dragEnabled: dragEnabled,\n      handle: $dragTarget.get(0),\n      draggableElement: this._$content.get(0),\n      positionController: this._positionController\n    };\n    if (this._drag) {\n      this._drag.init(config);\n    } else {\n      this._drag = new PopupDrag(config);\n    }\n    this.$overlayContent().toggleClass(\"dx-popup-draggable\", dragEnabled);\n  }\n  _renderResize() {\n    this._resizable = this._createComponent(this._$content, Resizable, {\n      handles: this.option(\"resizeEnabled\") ? \"all\" : \"none\",\n      onResizeEnd: e => {\n        this._resizeEndHandler(e);\n        this._observeContentResize(true);\n      },\n      onResize: e => {\n        this._setContentHeight();\n        this._actions.onResize(e);\n      },\n      onResizeStart: e => {\n        this._observeContentResize(false);\n        this._actions.onResizeStart(e);\n      },\n      minHeight: 100,\n      minWidth: 100,\n      area: this._positionController.$dragResizeContainer,\n      keepAspectRatio: false\n    });\n  }\n  _resizeEndHandler(e) {\n    const width = this._resizable.option(\"width\");\n    const height = this._resizable.option(\"height\");\n    width && this._setOptionWithoutOptionChange(\"width\", width);\n    height && this._setOptionWithoutOptionChange(\"height\", height);\n    this._cacheDimensions();\n    this._positionController.resizeHandled();\n    this._positionController.detectVisualPositionChange(e.event);\n    this._actions.onResizeEnd(e);\n  }\n  _setContentHeight() {\n    const {\n      forceApplyBindings: forceApplyBindings\n    } = this.option();\n    (forceApplyBindings || noop)();\n    const overlayContent = this.$overlayContent().get(0);\n    const currentHeightStrategyClass = this._chooseHeightStrategy(overlayContent);\n    this.$content().css(this._getHeightCssStyles(currentHeightStrategyClass, overlayContent));\n    this._setHeightClasses(this.$overlayContent(), currentHeightStrategyClass);\n  }\n  _heightStrategyChangeOffset(currentHeightStrategyClass, popupVerticalPaddings) {\n    return currentHeightStrategyClass === HEIGHT_STRATEGIES.flex ? -popupVerticalPaddings : 0;\n  }\n  _chooseHeightStrategy(overlayContent) {\n    const isAutoWidth = \"auto\" === overlayContent.style.width || \"\" === overlayContent.style.width;\n    let currentHeightStrategyClass = HEIGHT_STRATEGIES.static;\n    if (this._isAutoHeight() && this.option(\"autoResizeEnabled\")) {\n      if (isAutoWidth || IS_OLD_SAFARI) {\n        currentHeightStrategyClass = HEIGHT_STRATEGIES.inherit;\n      } else {\n        currentHeightStrategyClass = HEIGHT_STRATEGIES.flex;\n      }\n    }\n    return currentHeightStrategyClass;\n  }\n  _getHeightCssStyles(currentHeightStrategyClass, overlayContent) {\n    let cssStyles = {};\n    const contentMaxHeight = this._getOptionValue(\"maxHeight\", overlayContent);\n    const contentMinHeight = this._getOptionValue(\"minHeight\", overlayContent);\n    const popupHeightParts = this._splitPopupHeight();\n    const toolbarsAndVerticalOffsetsHeight = popupHeightParts.header + popupHeightParts.footer + popupHeightParts.contentVerticalOffsets + popupHeightParts.popupVerticalOffsets + this._heightStrategyChangeOffset(currentHeightStrategyClass, popupHeightParts.popupVerticalPaddings);\n    if (currentHeightStrategyClass === HEIGHT_STRATEGIES.static) {\n      if (!this._isAutoHeight() || contentMaxHeight || contentMinHeight) {\n        const overlayHeight = this.option(\"fullScreen\") ? Math.min(getBoundingRect(overlayContent).height, windowUtils.getWindow().innerHeight) : getBoundingRect(overlayContent).height;\n        const contentHeight = overlayHeight - toolbarsAndVerticalOffsetsHeight;\n        cssStyles = {\n          height: Math.max(0, contentHeight),\n          minHeight: \"auto\",\n          maxHeight: \"auto\"\n        };\n      }\n    } else {\n      const container = $(this._positionController.$visualContainer).get(0);\n      const maxHeightValue = addOffsetToMaxHeight(contentMaxHeight, -toolbarsAndVerticalOffsetsHeight, container);\n      const minHeightValue = addOffsetToMinHeight(contentMinHeight, -toolbarsAndVerticalOffsetsHeight, container);\n      cssStyles = {\n        height: \"auto\",\n        minHeight: minHeightValue,\n        maxHeight: maxHeightValue\n      };\n    }\n    return cssStyles;\n  }\n  _setHeightClasses($container, currentClass) {\n    let excessClasses = \"\";\n    for (const name in HEIGHT_STRATEGIES) {\n      if (HEIGHT_STRATEGIES[name] !== currentClass) {\n        excessClasses += ` ${HEIGHT_STRATEGIES[name]}`;\n      }\n    }\n    $container.removeClass(excessClasses).addClass(currentClass);\n  }\n  _isAutoHeight() {\n    return \"auto\" === this.$overlayContent().get(0).style.height;\n  }\n  _splitPopupHeight() {\n    const topToolbar = this.topToolbar();\n    const bottomToolbar = this.bottomToolbar();\n    return {\n      header: getVisibleHeight(null === topToolbar || void 0 === topToolbar ? void 0 : topToolbar.get(0)),\n      footer: getVisibleHeight(null === bottomToolbar || void 0 === bottomToolbar ? void 0 : bottomToolbar.get(0)),\n      contentVerticalOffsets: getVerticalOffsets(this.$overlayContent().get(0), true),\n      popupVerticalOffsets: getVerticalOffsets(this.$content().get(0), true),\n      popupVerticalPaddings: getVerticalOffsets(this.$content().get(0), false)\n    };\n  }\n  _isAllWindowCovered() {\n    const {\n      fullScreen: fullScreen\n    } = this.option();\n    return super._isAllWindowCovered() || fullScreen;\n  }\n  _renderDimensions() {\n    if (this.option(\"fullScreen\")) {\n      this.$overlayContent().css({\n        width: \"100%\",\n        height: \"100%\",\n        minWidth: \"\",\n        maxWidth: \"\",\n        minHeight: \"\",\n        maxHeight: \"\"\n      });\n    } else {\n      super._renderDimensions();\n    }\n    if (windowUtils.hasWindow()) {\n      this._renderFullscreenWidthClass();\n    }\n  }\n  _dimensionChanged() {\n    this._renderGeometry({\n      isDimensionChange: true\n    });\n  }\n  _clean() {\n    super._clean();\n    this._observeContentResize(false);\n  }\n  _dispose() {\n    super._dispose();\n    this._toggleBodyScroll(true);\n  }\n  _renderFullscreenWidthClass() {\n    const isFullScreen = getOuterWidth(this.$overlayContent()) === getWidth(window);\n    this.$overlayContent().toggleClass(\"dx-popup-fullscreen-width\", isFullScreen);\n  }\n  _toggleSafariScrolling() {\n    if (!this.option(\"enableBodyScroll\")) {\n      return;\n    }\n    super._toggleSafariScrolling();\n  }\n  _toggleBodyScroll(enabled) {\n    if (!this._bodyOverflowManager) {\n      return;\n    }\n    const {\n      setOverflow: setOverflow,\n      restoreOverflow: restoreOverflow\n    } = this._bodyOverflowManager;\n    if (enabled) {\n      restoreOverflow();\n    } else {\n      setOverflow();\n    }\n  }\n  refreshPosition() {\n    this._renderPosition();\n  }\n  _optionChanged(args) {\n    var _this$_resizable2;\n    const {\n      value: value,\n      name: name\n    } = args;\n    switch (name) {\n      case \"disabled\":\n        super._optionChanged(args);\n        this._renderTitle();\n        this._renderBottom();\n        break;\n      case \"animation\":\n        this._updateResizeCallbackSkipCondition();\n        break;\n      case \"enableBodyScroll\":\n        if (this.option(\"visible\")) {\n          this._toggleBodyScroll(value);\n        }\n        break;\n      case \"showTitle\":\n      case \"title\":\n      case \"titleTemplate\":\n        this._renderTitle();\n        this._renderGeometry();\n        triggerResizeEvent(this.$overlayContent());\n        break;\n      case \"bottomTemplate\":\n        this._renderBottom();\n        this._renderGeometry();\n        triggerResizeEvent(this.$overlayContent());\n        break;\n      case \"container\":\n        super._optionChanged(args);\n        if (this.option(\"resizeEnabled\")) {\n          var _this$_resizable;\n          null === (_this$_resizable = this._resizable) || void 0 === _this$_resizable || _this$_resizable.option(\"area\", this._positionController.$dragResizeContainer);\n        }\n        break;\n      case \"width\":\n      case \"height\":\n        super._optionChanged(args);\n        null === (_this$_resizable2 = this._resizable) || void 0 === _this$_resizable2 || _this$_resizable2.option(name, value);\n        break;\n      case \"onTitleRendered\":\n        this._createTitleRenderAction();\n        break;\n      case \"toolbarItems\":\n      case \"useDefaultToolbarButtons\":\n      case \"useFlatToolbarButtons\":\n        {\n          const shouldRenderGeometry = !args.fullName.match(/^toolbarItems((\\[\\d+\\])(\\.(options|visible).*)?)?$/);\n          this._renderTitle();\n          this._renderBottom();\n          if (shouldRenderGeometry) {\n            this._renderGeometry();\n            triggerResizeEvent(this.$overlayContent());\n          }\n          break;\n        }\n      case \"dragEnabled\":\n        this._renderDrag();\n        break;\n      case \"dragAndResizeArea\":\n        this._positionController.dragAndResizeArea = value;\n        if (this.option(\"resizeEnabled\")) {\n          this._resizable.option(\"area\", this._positionController.$dragResizeContainer);\n        }\n        this._positionController.positionContent();\n        break;\n      case \"dragOutsideBoundary\":\n        this._positionController.dragOutsideBoundary = value;\n        if (this.option(\"resizeEnabled\")) {\n          this._resizable.option(\"area\", this._positionController.$dragResizeContainer);\n        }\n        break;\n      case \"outsideDragFactor\":\n        this._positionController.outsideDragFactor = value;\n        break;\n      case \"resizeEnabled\":\n        this._renderResize();\n        this._renderGeometry();\n        break;\n      case \"autoResizeEnabled\":\n        this._renderGeometry();\n        triggerResizeEvent(this.$overlayContent());\n        break;\n      case \"fullScreen\":\n        this._positionController.fullScreen = value;\n        this._toggleFullScreenClass(value);\n        this._toggleSafariScrolling();\n        this._renderGeometry();\n        triggerResizeEvent(this.$overlayContent());\n        break;\n      case \"showCloseButton\":\n        this._renderTitle();\n        break;\n      case \"preventScrollEvents\":\n        super._optionChanged(args);\n        this._toggleContentScrollClass();\n        break;\n      default:\n        super._optionChanged(args);\n    }\n  }\n  bottomToolbar() {\n    return this._$bottom;\n  }\n  topToolbar() {\n    return this._$title;\n  }\n  $content() {\n    return this._$popupContent;\n  }\n  content() {\n    return getPublicElement(this.$content());\n  }\n  $overlayContent() {\n    return this._$content;\n  }\n  getFocusableElements() {\n    return this.$wrapper().find(\"[tabindex]\").filter((index, item) => item.getAttribute(\"tabindex\") >= 0);\n  }\n}\nregisterComponent(\"dxPopup\", Popup);\nexport default Popup;","map":{"version":3,"names":["_extends","triggerResizeEvent","messageLocalization","registerComponent","devices","getPublicElement","Guid","$","resizeObserverSingleton","EmptyTemplate","browser","noop","extend","camelize","each","getBoundingRect","addOffsetToMaxHeight","addOffsetToMinHeight","getHeight","getOuterWidth","getVerticalOffsets","getVisibleHeight","getWidth","isDefined","isObject","compare","compareVersions","Button","Resizable","isFluent","isMaterial","isMaterialBased","Overlay","zIndexPool","windowUtils","PopupDrag","createBodyOverflowManager","PopupPositionController","window","getWindow","POPUP_CLASS","POPUP_WRAPPER_CLASS","POPUP_FULL_SCREEN_CLASS","POPUP_FULL_SCREEN_WIDTH_CLASS","POPUP_NORMAL_CLASS","POPUP_CONTENT_CLASS","POPUP_CONTENT_SCROLLABLE_CLASS","DISABLED_STATE_CLASS","POPUP_DRAGGABLE_CLASS","POPUP_TITLE_CLASS","POPUP_TITLE_CLOSEBUTTON_CLASS","POPUP_BOTTOM_CLASS","POPUP_HAS_CLOSE_BUTTON_CLASS","TEMPLATE_WRAPPER_CLASS","POPUP_CONTENT_FLEX_HEIGHT_CLASS","POPUP_CONTENT_INHERIT_HEIGHT_CLASS","TOOLBAR_LABEL_CLASS","ALLOWED_TOOLBAR_ITEM_ALIASES","BUTTON_DEFAULT_TYPE","BUTTON_NORMAL_TYPE","BUTTON_TEXT_MODE","BUTTON_CONTAINED_MODE","BUTTON_OUTLINED_MODE","IS_OLD_SAFARI","safari","version","HEIGHT_STRATEGIES","static","inherit","flex","getButtonPlace","name","device","current","platform","toolbar","location","Popup","_supportedKeys","upArrow","e","_this$_drag","_drag","moveUp","downArrow","_this$_drag2","moveDown","leftArrow","_this$_drag3","moveLeft","rightArrow","_this$_drag4","moveRight","_getDefaultOptions","fullScreen","title","showTitle","titleTemplate","onTitleRendered","dragOutsideBoundary","dragEnabled","enableBodyScroll","outsideDragFactor","onResizeStart","onResize","onResizeEnd","resizeEnabled","toolbarItems","showCloseButton","bottomTemplate","useDefaultToolbarButtons","useFlatToolbarButtons","autoResizeEnabled","_defaultOptionsRules","concat","options","animation","_iosAnimation","_androidAnimation","real","deviceType","isSimulator","focusStateEnabled","show","type","duration","from","position","my","at","to","hide","opacity","option","top","_init","_wrapperClassExternal","popupWrapperClassExternal","popupWrapperClasses","_createBodyOverflowManager","_updateResizeCallbackSkipCondition","$element","addClass","$wrapper","_$popupContent","_$content","wrapInner","children","eq","_toggleContentScrollClass","$overlayContent","attr","_render","isFullscreen","_toggleFullScreenClass","_bodyOverflowManager","value","toggleClass","_initTemplates","_templateManager","addDefaultTemplates","bottom","_getActionsList","_contentResizeHandler","entry","_shouldSkipContentResize","_renderGeometry","shouldOnlyReposition","_doesShowAnimationChangeDimensions","some","prop","_animation$show","config","doesShowAnimationChangeDimensions","_showAnimationProcessing","_areContentDimensionsRendered","_observeContentResize","shouldObserve","contentElement","get","observe","unobserve","_entry$contentBoxSize","_this$_renderedDimens3","_this$_renderedDimens4","contentBox","contentBoxSize","_this$_renderedDimens","_this$_renderedDimens2","parseInt","inlineSize","_renderedDimensions","width","blockSize","height","contentRect","_renderContent","_renderContentImpl","_renderTitle","_renderResize","_renderBottom","items","_getToolbarItems","unshift","ios","text","length","_$title","remove","$title","insertBefore","$content","_renderTemplateByType","_renderDrag","_executeTitleRenderAction","_hasCloseButton","detach","_toggleAriaLabel","_this$_$title","shouldSetAriaLabel","titleId","find","optionName","data","$container","additionalToolbarOptions","rtlEnabled","disabled","template","_getTemplateByOption","toolbarTemplate","integrationOptions","skipTemplates","toolbarOptions","useDefaultButtons","useFlatButtons","_getTemplate","render","container","model","widget","_getToolbarName","$toolbar","replaceWith","$result","hasClass","_renderVisibilityAnimate","visible","_hide","$titleElement","_getTitleRenderAction","titleElement","_titleRenderAction","_createTitleRenderAction","_createActionByOption","element","excludeValidators","_getCloseButton","_getCloseButtonRenderer","_","__","$button","_createComponent","icon","onClick","_createToolbarItemAction","stylingMode","append","toolbarsItems","_toolbarItemClasses","currentPlatform","index","isShortcut","shortcut","item","_getToolbarItemByAlias","isLTROrder","push","_getLocalizationKey","itemType","toLowerCase","_getToolbarButtonStylingMode","_getToolbarButtonType","that","includes","itemConfig","format","itemClass","$toolbarItem","appendTo","clickAction","_createAction","afterExecute","component","_this$_$bottom","_$bottom","$bottom","insertAfter","compactMode","_toggleClasses","_this$_$bottom2","_toggleDisabledState","arguments","Boolean","aliases","alias","className","_this$_$bottom3","_this$_$bottom4","removeClass","_toggleFocusClass","isFocused","isLastZIndexInStack","_zIndex","zIndex","create","_zIndexInitValue","_$wrapper","css","isNativeScrollingEnabled","_getPositionControllerConfig","forceApplyBindings","dragAndResizeArea","_initPositionController","_positionController","_getDragTarget","topToolbar","useResizeObserver","hasWindow","isAnimated","shouldRepeatAnimation","forceStopAnimation","_isAnimationPaused","_stopAnimation","_renderPosition","_renderGeometryImpl","isDimensionChange","_animateShowing","_cacheDimensions","_resetContentHeight","_setContentHeight","_getOptionValue","maxHeight","$dragTarget","handle","draggableElement","positionController","init","_resizable","handles","_resizeEndHandler","_actions","minHeight","minWidth","area","$dragResizeContainer","keepAspectRatio","_setOptionWithoutOptionChange","resizeHandled","detectVisualPositionChange","event","overlayContent","currentHeightStrategyClass","_chooseHeightStrategy","_getHeightCssStyles","_setHeightClasses","_heightStrategyChangeOffset","popupVerticalPaddings","isAutoWidth","style","_isAutoHeight","cssStyles","contentMaxHeight","contentMinHeight","popupHeightParts","_splitPopupHeight","toolbarsAndVerticalOffsetsHeight","header","footer","contentVerticalOffsets","popupVerticalOffsets","overlayHeight","Math","min","innerHeight","contentHeight","max","$visualContainer","maxHeightValue","minHeightValue","currentClass","excessClasses","bottomToolbar","_isAllWindowCovered","_renderDimensions","maxWidth","_renderFullscreenWidthClass","_dimensionChanged","_clean","_dispose","_toggleBodyScroll","isFullScreen","_toggleSafariScrolling","enabled","setOverflow","restoreOverflow","refreshPosition","_optionChanged","args","_this$_resizable2","_this$_resizable","shouldRenderGeometry","fullName","match","positionContent","content","getFocusableElements","filter","getAttribute"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/ui/popup/m_popup.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/ui/popup/m_popup.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport \"../../../ui/toolbar/ui.toolbar.base\";\r\nimport {\r\n    triggerResizeEvent\r\n} from \"../../../common/core/events/visibility_change\";\r\nimport messageLocalization from \"../../../common/core/localization/message\";\r\nimport registerComponent from \"../../../core/component_registrator\";\r\nimport devices from \"../../../core/devices\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../../core/element\";\r\nimport Guid from \"../../../core/guid\";\r\nimport $ from \"../../../core/renderer\";\r\nimport resizeObserverSingleton from \"../../../core/resize_observer\";\r\nimport {\r\n    EmptyTemplate\r\n} from \"../../../core/templates/empty_template\";\r\nimport browser from \"../../../core/utils/browser\";\r\nimport {\r\n    noop\r\n} from \"../../../core/utils/common\";\r\nimport {\r\n    extend\r\n} from \"../../../core/utils/extend\";\r\nimport {\r\n    camelize\r\n} from \"../../../core/utils/inflector\";\r\nimport {\r\n    each\r\n} from \"../../../core/utils/iterator\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../../core/utils/position\";\r\nimport {\r\n    addOffsetToMaxHeight,\r\n    addOffsetToMinHeight,\r\n    getHeight,\r\n    getOuterWidth,\r\n    getVerticalOffsets,\r\n    getVisibleHeight,\r\n    getWidth\r\n} from \"../../../core/utils/size\";\r\nimport {\r\n    isDefined,\r\n    isObject\r\n} from \"../../../core/utils/type\";\r\nimport {\r\n    compare as compareVersions\r\n} from \"../../../core/utils/version\";\r\nimport Button from \"../../../ui/button\";\r\nimport Resizable from \"../../../ui/resizable\";\r\nimport {\r\n    isFluent,\r\n    isMaterial,\r\n    isMaterialBased\r\n} from \"../../../ui/themes\";\r\nimport Overlay from \"../../ui/overlay/m_overlay\";\r\nimport * as zIndexPool from \"../../ui/overlay/m_z_index\";\r\nimport windowUtils from \"../../core/utils/m_window\";\r\nimport PopupDrag from \"./m_popup_drag\";\r\nimport {\r\n    createBodyOverflowManager\r\n} from \"./m_popup_overflow_manager\";\r\nimport {\r\n    PopupPositionController\r\n} from \"./m_popup_position_controller\";\r\nconst window = windowUtils.getWindow();\r\nconst POPUP_CLASS = \"dx-popup\";\r\nconst POPUP_WRAPPER_CLASS = \"dx-popup-wrapper\";\r\nconst POPUP_FULL_SCREEN_CLASS = \"dx-popup-fullscreen\";\r\nconst POPUP_FULL_SCREEN_WIDTH_CLASS = \"dx-popup-fullscreen-width\";\r\nconst POPUP_NORMAL_CLASS = \"dx-popup-normal\";\r\nconst POPUP_CONTENT_CLASS = \"dx-popup-content\";\r\nexport const POPUP_CONTENT_SCROLLABLE_CLASS = \"dx-popup-content-scrollable\";\r\nconst DISABLED_STATE_CLASS = \"dx-state-disabled\";\r\nconst POPUP_DRAGGABLE_CLASS = \"dx-popup-draggable\";\r\nconst POPUP_TITLE_CLASS = \"dx-popup-title\";\r\nconst POPUP_TITLE_CLOSEBUTTON_CLASS = \"dx-closebutton\";\r\nconst POPUP_BOTTOM_CLASS = \"dx-popup-bottom\";\r\nconst POPUP_HAS_CLOSE_BUTTON_CLASS = \"dx-has-close-button\";\r\nexport const TEMPLATE_WRAPPER_CLASS = \"dx-template-wrapper\";\r\nconst POPUP_CONTENT_FLEX_HEIGHT_CLASS = \"dx-popup-flex-height\";\r\nconst POPUP_CONTENT_INHERIT_HEIGHT_CLASS = \"dx-popup-inherit-height\";\r\nconst TOOLBAR_LABEL_CLASS = \"dx-toolbar-label\";\r\nconst ALLOWED_TOOLBAR_ITEM_ALIASES = [\"cancel\", \"clear\", \"done\"];\r\nconst BUTTON_DEFAULT_TYPE = \"default\";\r\nconst BUTTON_NORMAL_TYPE = \"normal\";\r\nconst BUTTON_TEXT_MODE = \"text\";\r\nconst BUTTON_CONTAINED_MODE = \"contained\";\r\nconst BUTTON_OUTLINED_MODE = \"outlined\";\r\nconst IS_OLD_SAFARI = browser.safari && compareVersions(browser.version, [11]) < 0;\r\nconst HEIGHT_STRATEGIES = {\r\n    static: \"\",\r\n    inherit: \"dx-popup-inherit-height\",\r\n    flex: \"dx-popup-flex-height\"\r\n};\r\nconst getButtonPlace = name => {\r\n    const device = devices.current();\r\n    const {\r\n        platform: platform\r\n    } = device;\r\n    let toolbar = \"bottom\";\r\n    let location = \"before\";\r\n    if (\"ios\" === platform) {\r\n        switch (name) {\r\n            case \"cancel\":\r\n                toolbar = \"top\";\r\n                break;\r\n            case \"clear\":\r\n                toolbar = \"top\";\r\n                location = \"after\";\r\n                break;\r\n            case \"done\":\r\n                location = \"after\"\r\n        }\r\n    } else if (\"android\" === platform) {\r\n        switch (name) {\r\n            case \"cancel\":\r\n            case \"done\":\r\n                location = \"after\"\r\n        }\r\n    }\r\n    return {\r\n        toolbar: toolbar,\r\n        location: location\r\n    }\r\n};\r\nclass Popup extends Overlay {\r\n    _supportedKeys() {\r\n        return _extends({}, super._supportedKeys(), {\r\n            upArrow: e => {\r\n                var _this$_drag;\r\n                null === (_this$_drag = this._drag) || void 0 === _this$_drag || _this$_drag.moveUp(e)\r\n            },\r\n            downArrow: e => {\r\n                var _this$_drag2;\r\n                null === (_this$_drag2 = this._drag) || void 0 === _this$_drag2 || _this$_drag2.moveDown(e)\r\n            },\r\n            leftArrow: e => {\r\n                var _this$_drag3;\r\n                null === (_this$_drag3 = this._drag) || void 0 === _this$_drag3 || _this$_drag3.moveLeft(e)\r\n            },\r\n            rightArrow: e => {\r\n                var _this$_drag4;\r\n                null === (_this$_drag4 = this._drag) || void 0 === _this$_drag4 || _this$_drag4.moveRight(e)\r\n            }\r\n        })\r\n    }\r\n    _getDefaultOptions() {\r\n        return _extends({}, super._getDefaultOptions(), {\r\n            fullScreen: false,\r\n            title: \"\",\r\n            showTitle: true,\r\n            titleTemplate: \"title\",\r\n            onTitleRendered: null,\r\n            dragOutsideBoundary: false,\r\n            dragEnabled: false,\r\n            enableBodyScroll: true,\r\n            outsideDragFactor: 0,\r\n            onResizeStart: null,\r\n            onResize: null,\r\n            onResizeEnd: null,\r\n            resizeEnabled: false,\r\n            toolbarItems: [],\r\n            showCloseButton: false,\r\n            bottomTemplate: \"bottom\",\r\n            useDefaultToolbarButtons: false,\r\n            useFlatToolbarButtons: false,\r\n            autoResizeEnabled: true\r\n        })\r\n    }\r\n    _defaultOptionsRules() {\r\n        return super._defaultOptionsRules().concat([{\r\n            device: {\r\n                platform: \"ios\"\r\n            },\r\n            options: {\r\n                animation: this._iosAnimation\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"android\"\r\n            },\r\n            options: {\r\n                animation: this._androidAnimation\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"generic\"\r\n            },\r\n            options: {\r\n                showCloseButton: true\r\n            }\r\n        }, {\r\n            device: device => \"desktop\" === devices.real().deviceType && \"generic\" === device.platform,\r\n            options: {\r\n                dragEnabled: true\r\n            }\r\n        }, {\r\n            device: () => \"desktop\" === devices.real().deviceType && !devices.isSimulator(),\r\n            options: {\r\n                focusStateEnabled: true\r\n            }\r\n        }, {\r\n            device: () => isMaterialBased(),\r\n            options: {\r\n                useFlatToolbarButtons: true\r\n            }\r\n        }, {\r\n            device: () => isMaterial(),\r\n            options: {\r\n                useDefaultToolbarButtons: true,\r\n                showCloseButton: false\r\n            }\r\n        }])\r\n    }\r\n    _iosAnimation() {\r\n        return {\r\n            show: {\r\n                type: \"slide\",\r\n                duration: 400,\r\n                from: {\r\n                    position: {\r\n                        my: \"top\",\r\n                        at: \"bottom\"\r\n                    }\r\n                },\r\n                to: {\r\n                    position: {\r\n                        my: \"center\",\r\n                        at: \"center\"\r\n                    }\r\n                }\r\n            },\r\n            hide: {\r\n                type: \"slide\",\r\n                duration: 400,\r\n                from: {\r\n                    opacity: 1,\r\n                    position: {\r\n                        my: \"center\",\r\n                        at: \"center\"\r\n                    }\r\n                },\r\n                to: {\r\n                    opacity: 1,\r\n                    position: {\r\n                        my: \"top\",\r\n                        at: \"bottom\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _androidAnimation() {\r\n        return this.option(\"fullScreen\") ? {\r\n            show: {\r\n                type: \"slide\",\r\n                duration: 300,\r\n                from: {\r\n                    top: \"30%\",\r\n                    opacity: 0\r\n                },\r\n                to: {\r\n                    top: 0,\r\n                    opacity: 1\r\n                }\r\n            },\r\n            hide: {\r\n                type: \"slide\",\r\n                duration: 300,\r\n                from: {\r\n                    top: 0,\r\n                    opacity: 1\r\n                },\r\n                to: {\r\n                    top: \"30%\",\r\n                    opacity: 0\r\n                }\r\n            }\r\n        } : {\r\n            show: {\r\n                type: \"fade\",\r\n                duration: 400,\r\n                from: 0,\r\n                to: 1\r\n            },\r\n            hide: {\r\n                type: \"fade\",\r\n                duration: 400,\r\n                from: 1,\r\n                to: 0\r\n            }\r\n        }\r\n    }\r\n    _init() {\r\n        const {\r\n            _wrapperClassExternal: popupWrapperClassExternal\r\n        } = this.option();\r\n        const popupWrapperClasses = popupWrapperClassExternal ? `dx-popup-wrapper ${popupWrapperClassExternal}` : \"dx-popup-wrapper\";\r\n        super._init();\r\n        this._createBodyOverflowManager();\r\n        this._updateResizeCallbackSkipCondition();\r\n        this.$element().addClass(\"dx-popup\");\r\n        this.$wrapper().addClass(popupWrapperClasses);\r\n        this._$popupContent = this._$content.wrapInner($(\"<div>\").addClass(\"dx-popup-content\")).children().eq(0);\r\n        this._toggleContentScrollClass();\r\n        this.$overlayContent().attr(\"role\", \"dialog\")\r\n    }\r\n    _render() {\r\n        const isFullscreen = this.option(\"fullScreen\");\r\n        this._toggleFullScreenClass(isFullscreen);\r\n        super._render()\r\n    }\r\n    _createBodyOverflowManager() {\r\n        this._bodyOverflowManager = createBodyOverflowManager()\r\n    }\r\n    _toggleFullScreenClass(value) {\r\n        this.$overlayContent().toggleClass(\"dx-popup-fullscreen\", value).toggleClass(\"dx-popup-normal\", !value)\r\n    }\r\n    _initTemplates() {\r\n        super._initTemplates();\r\n        this._templateManager.addDefaultTemplates({\r\n            title: new EmptyTemplate,\r\n            bottom: new EmptyTemplate\r\n        })\r\n    }\r\n    _getActionsList() {\r\n        return super._getActionsList().concat([\"onResizeStart\", \"onResize\", \"onResizeEnd\"])\r\n    }\r\n    _contentResizeHandler(entry) {\r\n        if (!this._shouldSkipContentResize(entry)) {\r\n            this._renderGeometry({\r\n                shouldOnlyReposition: true\r\n            })\r\n        }\r\n    }\r\n    _doesShowAnimationChangeDimensions() {\r\n        const animation = this.option(\"animation\");\r\n        return [\"to\", \"from\"].some((prop => {\r\n            var _animation$show;\r\n            const config = null === animation || void 0 === animation || null === (_animation$show = animation.show) || void 0 === _animation$show ? void 0 : _animation$show[prop];\r\n            return isObject(config) && (\"width\" in config || \"height\" in config)\r\n        }))\r\n    }\r\n    _updateResizeCallbackSkipCondition() {\r\n        const doesShowAnimationChangeDimensions = this._doesShowAnimationChangeDimensions();\r\n        this._shouldSkipContentResize = entry => doesShowAnimationChangeDimensions && this._showAnimationProcessing || this._areContentDimensionsRendered(entry)\r\n    }\r\n    _observeContentResize(shouldObserve) {\r\n        if (!this.option(\"useResizeObserver\")) {\r\n            return\r\n        }\r\n        const contentElement = this._$content.get(0);\r\n        if (shouldObserve) {\r\n            resizeObserverSingleton.observe(contentElement, (entry => {\r\n                this._contentResizeHandler(entry)\r\n            }))\r\n        } else {\r\n            resizeObserverSingleton.unobserve(contentElement)\r\n        }\r\n    }\r\n    _areContentDimensionsRendered(entry) {\r\n        var _entry$contentBoxSize, _this$_renderedDimens3, _this$_renderedDimens4;\r\n        const contentBox = null === (_entry$contentBoxSize = entry.contentBoxSize) || void 0 === _entry$contentBoxSize ? void 0 : _entry$contentBoxSize[0];\r\n        if (contentBox) {\r\n            var _this$_renderedDimens, _this$_renderedDimens2;\r\n            return parseInt(contentBox.inlineSize, 10) === (null === (_this$_renderedDimens = this._renderedDimensions) || void 0 === _this$_renderedDimens ? void 0 : _this$_renderedDimens.width) && parseInt(contentBox.blockSize, 10) === (null === (_this$_renderedDimens2 = this._renderedDimensions) || void 0 === _this$_renderedDimens2 ? void 0 : _this$_renderedDimens2.height)\r\n        }\r\n        const {\r\n            contentRect: contentRect\r\n        } = entry;\r\n        return parseInt(contentRect.width, 10) === (null === (_this$_renderedDimens3 = this._renderedDimensions) || void 0 === _this$_renderedDimens3 ? void 0 : _this$_renderedDimens3.width) && parseInt(contentRect.height, 10) === (null === (_this$_renderedDimens4 = this._renderedDimensions) || void 0 === _this$_renderedDimens4 ? void 0 : _this$_renderedDimens4.height)\r\n    }\r\n    _renderContent() {\r\n        super._renderContent();\r\n        this._observeContentResize(true)\r\n    }\r\n    _renderContentImpl() {\r\n        this._renderTitle();\r\n        super._renderContentImpl();\r\n        this._renderResize();\r\n        this._renderBottom()\r\n    }\r\n    _renderTitle() {\r\n        const items = this._getToolbarItems(\"top\");\r\n        const {\r\n            title: title,\r\n            showTitle: showTitle\r\n        } = this.option();\r\n        if (showTitle && !!title) {\r\n            items.unshift({\r\n                location: devices.current().ios ? \"center\" : \"before\",\r\n                text: title\r\n            })\r\n        }\r\n        if (showTitle || items.length > 0) {\r\n            if (this._$title) {\r\n                this._$title.remove()\r\n            }\r\n            const $title = $(\"<div>\").addClass(\"dx-popup-title\").insertBefore(this.$content());\r\n            this._$title = this._renderTemplateByType(\"titleTemplate\", items, $title).addClass(\"dx-popup-title\");\r\n            this._renderDrag();\r\n            this._executeTitleRenderAction(this._$title);\r\n            this._$title.toggleClass(\"dx-has-close-button\", this._hasCloseButton())\r\n        } else if (this._$title) {\r\n            this._$title.detach()\r\n        }\r\n        this._toggleAriaLabel()\r\n    }\r\n    _toggleAriaLabel() {\r\n        var _this$_$title;\r\n        const {\r\n            title: title,\r\n            showTitle: showTitle\r\n        } = this.option();\r\n        const shouldSetAriaLabel = showTitle && !!title;\r\n        const titleId = shouldSetAriaLabel ? new Guid : null;\r\n        null === (_this$_$title = this._$title) || void 0 === _this$_$title || _this$_$title.find(\".dx-toolbar-label\").eq(0).attr(\"id\", titleId);\r\n        this.$overlayContent().attr(\"aria-labelledby\", titleId)\r\n    }\r\n    _renderTemplateByType(optionName, data, $container, additionalToolbarOptions) {\r\n        const {\r\n            rtlEnabled: rtlEnabled,\r\n            useDefaultToolbarButtons: useDefaultToolbarButtons,\r\n            useFlatToolbarButtons: useFlatToolbarButtons,\r\n            disabled: disabled\r\n        } = this.option();\r\n        const template = this._getTemplateByOption(optionName);\r\n        const toolbarTemplate = template instanceof EmptyTemplate;\r\n        if (toolbarTemplate) {\r\n            const integrationOptions = extend({}, this.option(\"integrationOptions\"), {\r\n                skipTemplates: [\"content\", \"title\"]\r\n            });\r\n            const toolbarOptions = extend(additionalToolbarOptions, {\r\n                items: data,\r\n                rtlEnabled: rtlEnabled,\r\n                useDefaultButtons: useDefaultToolbarButtons,\r\n                useFlatButtons: useFlatToolbarButtons,\r\n                disabled: disabled,\r\n                integrationOptions: integrationOptions\r\n            });\r\n            this._getTemplate(\"dx-polymorph-widget\").render({\r\n                container: $container,\r\n                model: {\r\n                    widget: this._getToolbarName(),\r\n                    options: toolbarOptions\r\n                }\r\n            });\r\n            const $toolbar = $container.children(\"div\");\r\n            $container.replaceWith($toolbar);\r\n            return $toolbar\r\n        }\r\n        const $result = $(template.render({\r\n            container: getPublicElement($container)\r\n        }));\r\n        if ($result.hasClass(\"dx-template-wrapper\")) {\r\n            $container.replaceWith($result);\r\n            $container = $result\r\n        }\r\n        return $container\r\n    }\r\n    _getToolbarName() {\r\n        return \"dxToolbarBase\"\r\n    }\r\n    _renderVisibilityAnimate(visible) {\r\n        return super._renderVisibilityAnimate(visible)\r\n    }\r\n    _hide() {\r\n        this._observeContentResize(false);\r\n        return super._hide()\r\n    }\r\n    _executeTitleRenderAction($titleElement) {\r\n        this._getTitleRenderAction()({\r\n            titleElement: getPublicElement($titleElement)\r\n        })\r\n    }\r\n    _getTitleRenderAction() {\r\n        return this._titleRenderAction || this._createTitleRenderAction()\r\n    }\r\n    _createTitleRenderAction() {\r\n        return this._titleRenderAction = this._createActionByOption(\"onTitleRendered\", {\r\n            element: this.element(),\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    }\r\n    _getCloseButton() {\r\n        return {\r\n            toolbar: \"top\",\r\n            location: \"after\",\r\n            template: this._getCloseButtonRenderer()\r\n        }\r\n    }\r\n    _getCloseButtonRenderer() {\r\n        return (_, __, container) => {\r\n            const $button = $(\"<div>\").addClass(\"dx-closebutton\");\r\n            this._createComponent($button, Button, {\r\n                icon: \"close\",\r\n                onClick: this._createToolbarItemAction(void 0),\r\n                stylingMode: \"text\",\r\n                integrationOptions: {}\r\n            });\r\n            $(container).append($button)\r\n        }\r\n    }\r\n    _getToolbarItems(toolbar) {\r\n        const toolbarItems = this.option(\"toolbarItems\");\r\n        const toolbarsItems = [];\r\n        this._toolbarItemClasses = [];\r\n        const currentPlatform = devices.current().platform;\r\n        let index = 0;\r\n        each(toolbarItems, ((_, data) => {\r\n            const isShortcut = isDefined(data.shortcut);\r\n            const item = isShortcut ? getButtonPlace(data.shortcut) : data;\r\n            if (isShortcut && \"ios\" === currentPlatform && index < 2) {\r\n                item.toolbar = \"top\";\r\n                index++\r\n            }\r\n            item.toolbar = data.toolbar || item.toolbar || \"top\";\r\n            if (item && item.toolbar === toolbar) {\r\n                if (isShortcut) {\r\n                    extend(item, {\r\n                        location: data.location\r\n                    }, this._getToolbarItemByAlias(data))\r\n                }\r\n                const isLTROrder = \"generic\" === currentPlatform;\r\n                if (\"done\" === data.shortcut && isLTROrder || \"cancel\" === data.shortcut && !isLTROrder) {\r\n                    toolbarsItems.unshift(item)\r\n                } else {\r\n                    toolbarsItems.push(item)\r\n                }\r\n            }\r\n        }));\r\n        if (\"top\" === toolbar && this._hasCloseButton()) {\r\n            toolbarsItems.push(this._getCloseButton())\r\n        }\r\n        return toolbarsItems\r\n    }\r\n    _hasCloseButton() {\r\n        const {\r\n            showCloseButton: showCloseButton,\r\n            showTitle: showTitle\r\n        } = this.option();\r\n        return showCloseButton && showTitle\r\n    }\r\n    _getLocalizationKey(itemType) {\r\n        return \"done\" === itemType.toLowerCase() ? \"OK\" : camelize(itemType, true)\r\n    }\r\n    _getToolbarButtonStylingMode(shortcut) {\r\n        if (isFluent()) {\r\n            return \"done\" === shortcut ? \"contained\" : \"outlined\"\r\n        }\r\n        return this.option(\"useFlatToolbarButtons\") ? \"text\" : \"contained\"\r\n    }\r\n    _getToolbarButtonType(shortcut) {\r\n        if (isFluent() && \"done\" === shortcut || this.option(\"useDefaultToolbarButtons\")) {\r\n            return \"default\"\r\n        }\r\n        return \"normal\"\r\n    }\r\n    _getToolbarItemByAlias(data) {\r\n        const that = this;\r\n        const itemType = data.shortcut;\r\n        if (!ALLOWED_TOOLBAR_ITEM_ALIASES.includes(itemType)) {\r\n            return false\r\n        }\r\n        const itemConfig = extend({\r\n            text: messageLocalization.format(this._getLocalizationKey(itemType)),\r\n            onClick: this._createToolbarItemAction(data.onClick),\r\n            integrationOptions: {},\r\n            type: this._getToolbarButtonType(itemType),\r\n            stylingMode: this._getToolbarButtonStylingMode(itemType)\r\n        }, data.options || {});\r\n        const itemClass = `dx-popup-${itemType}`;\r\n        this._toolbarItemClasses.push(itemClass);\r\n        return {\r\n            template(_, __, container) {\r\n                const $toolbarItem = $(\"<div>\").addClass(itemClass).appendTo(container);\r\n                that._createComponent($toolbarItem, Button, itemConfig)\r\n            }\r\n        }\r\n    }\r\n    _createToolbarItemAction(clickAction) {\r\n        return this._createAction(clickAction, {\r\n            afterExecute(e) {\r\n                e.component.hide()\r\n            }\r\n        })\r\n    }\r\n    _renderBottom() {\r\n        const items = this._getToolbarItems(\"bottom\");\r\n        if (items.length) {\r\n            var _this$_$bottom;\r\n            null === (_this$_$bottom = this._$bottom) || void 0 === _this$_$bottom || _this$_$bottom.remove();\r\n            const $bottom = $(\"<div>\").addClass(\"dx-popup-bottom\").insertAfter(this.$content());\r\n            this._$bottom = this._renderTemplateByType(\"bottomTemplate\", items, $bottom, {\r\n                compactMode: true\r\n            }).addClass(\"dx-popup-bottom\");\r\n            this._toggleClasses()\r\n        } else {\r\n            var _this$_$bottom2;\r\n            null === (_this$_$bottom2 = this._$bottom) || void 0 === _this$_$bottom2 || _this$_$bottom2.detach()\r\n        }\r\n    }\r\n    _toggleDisabledState(value) {\r\n        super._toggleDisabledState(...arguments);\r\n        this.$content().toggleClass(\"dx-state-disabled\", Boolean(value))\r\n    }\r\n    _toggleClasses() {\r\n        const aliases = ALLOWED_TOOLBAR_ITEM_ALIASES;\r\n        each(aliases, ((_, alias) => {\r\n            const className = `dx-popup-${alias}`;\r\n            if (this._toolbarItemClasses.includes(className)) {\r\n                var _this$_$bottom3;\r\n                this.$wrapper().addClass(`${className}-visible`);\r\n                null === (_this$_$bottom3 = this._$bottom) || void 0 === _this$_$bottom3 || _this$_$bottom3.addClass(className)\r\n            } else {\r\n                var _this$_$bottom4;\r\n                this.$wrapper().removeClass(`${className}-visible`);\r\n                null === (_this$_$bottom4 = this._$bottom) || void 0 === _this$_$bottom4 || _this$_$bottom4.removeClass(className)\r\n            }\r\n        }))\r\n    }\r\n    _toggleFocusClass(isFocused, $element) {\r\n        super._toggleFocusClass(isFocused, $element);\r\n        if (isFocused && !zIndexPool.isLastZIndexInStack(this._zIndex)) {\r\n            const zIndex = zIndexPool.create(this._zIndexInitValue());\r\n            zIndexPool.remove(this._zIndex);\r\n            this._zIndex = zIndex;\r\n            this._$wrapper.css(\"zIndex\", zIndex);\r\n            this._$content.css(\"zIndex\", zIndex)\r\n        }\r\n    }\r\n    _toggleContentScrollClass() {\r\n        const isNativeScrollingEnabled = !this.option(\"preventScrollEvents\");\r\n        this.$content().toggleClass(\"dx-popup-content-scrollable\", isNativeScrollingEnabled)\r\n    }\r\n    _getPositionControllerConfig() {\r\n        const {\r\n            fullScreen: fullScreen,\r\n            forceApplyBindings: forceApplyBindings,\r\n            dragOutsideBoundary: dragOutsideBoundary,\r\n            dragAndResizeArea: dragAndResizeArea,\r\n            outsideDragFactor: outsideDragFactor\r\n        } = this.option();\r\n        return _extends({}, super._getPositionControllerConfig(), {\r\n            fullScreen: fullScreen,\r\n            forceApplyBindings: forceApplyBindings,\r\n            dragOutsideBoundary: dragOutsideBoundary,\r\n            dragAndResizeArea: dragAndResizeArea,\r\n            outsideDragFactor: outsideDragFactor\r\n        })\r\n    }\r\n    _initPositionController() {\r\n        this._positionController = new PopupPositionController(this._getPositionControllerConfig())\r\n    }\r\n    _getDragTarget() {\r\n        return this.topToolbar()\r\n    }\r\n    _renderGeometry(options) {\r\n        const {\r\n            visible: visible,\r\n            useResizeObserver: useResizeObserver\r\n        } = this.option();\r\n        if (visible && windowUtils.hasWindow()) {\r\n            const isAnimated = this._showAnimationProcessing;\r\n            const shouldRepeatAnimation = isAnimated && !(null !== options && void 0 !== options && options.forceStopAnimation) && useResizeObserver;\r\n            this._isAnimationPaused = shouldRepeatAnimation || void 0;\r\n            this._stopAnimation();\r\n            if (null !== options && void 0 !== options && options.shouldOnlyReposition) {\r\n                this._renderPosition(false)\r\n            } else {\r\n                this._renderGeometryImpl(null === options || void 0 === options ? void 0 : options.isDimensionChange)\r\n            }\r\n            if (shouldRepeatAnimation) {\r\n                this._animateShowing();\r\n                this._isAnimationPaused = void 0\r\n            }\r\n        }\r\n    }\r\n    _cacheDimensions() {\r\n        if (!this.option(\"useResizeObserver\")) {\r\n            return\r\n        }\r\n        this._renderedDimensions = {\r\n            width: parseInt(getWidth(this._$content), 10),\r\n            height: parseInt(getHeight(this._$content), 10)\r\n        }\r\n    }\r\n    _renderGeometryImpl() {\r\n        let isDimensionChange = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : false;\r\n        if (!isDimensionChange) {\r\n            this._resetContentHeight()\r\n        }\r\n        super._renderGeometryImpl();\r\n        this._cacheDimensions();\r\n        this._setContentHeight()\r\n    }\r\n    _resetContentHeight() {\r\n        const height = this._getOptionValue(\"height\");\r\n        if (\"auto\" === height) {\r\n            this.$content().css({\r\n                height: \"auto\",\r\n                maxHeight: \"none\"\r\n            })\r\n        }\r\n    }\r\n    _renderDrag() {\r\n        const $dragTarget = this._getDragTarget();\r\n        const {\r\n            dragEnabled: dragEnabled\r\n        } = this.option();\r\n        if (!$dragTarget) {\r\n            return\r\n        }\r\n        const config = {\r\n            dragEnabled: dragEnabled,\r\n            handle: $dragTarget.get(0),\r\n            draggableElement: this._$content.get(0),\r\n            positionController: this._positionController\r\n        };\r\n        if (this._drag) {\r\n            this._drag.init(config)\r\n        } else {\r\n            this._drag = new PopupDrag(config)\r\n        }\r\n        this.$overlayContent().toggleClass(\"dx-popup-draggable\", dragEnabled)\r\n    }\r\n    _renderResize() {\r\n        this._resizable = this._createComponent(this._$content, Resizable, {\r\n            handles: this.option(\"resizeEnabled\") ? \"all\" : \"none\",\r\n            onResizeEnd: e => {\r\n                this._resizeEndHandler(e);\r\n                this._observeContentResize(true)\r\n            },\r\n            onResize: e => {\r\n                this._setContentHeight();\r\n                this._actions.onResize(e)\r\n            },\r\n            onResizeStart: e => {\r\n                this._observeContentResize(false);\r\n                this._actions.onResizeStart(e)\r\n            },\r\n            minHeight: 100,\r\n            minWidth: 100,\r\n            area: this._positionController.$dragResizeContainer,\r\n            keepAspectRatio: false\r\n        })\r\n    }\r\n    _resizeEndHandler(e) {\r\n        const width = this._resizable.option(\"width\");\r\n        const height = this._resizable.option(\"height\");\r\n        width && this._setOptionWithoutOptionChange(\"width\", width);\r\n        height && this._setOptionWithoutOptionChange(\"height\", height);\r\n        this._cacheDimensions();\r\n        this._positionController.resizeHandled();\r\n        this._positionController.detectVisualPositionChange(e.event);\r\n        this._actions.onResizeEnd(e)\r\n    }\r\n    _setContentHeight() {\r\n        const {\r\n            forceApplyBindings: forceApplyBindings\r\n        } = this.option();\r\n        (forceApplyBindings || noop)();\r\n        const overlayContent = this.$overlayContent().get(0);\r\n        const currentHeightStrategyClass = this._chooseHeightStrategy(overlayContent);\r\n        this.$content().css(this._getHeightCssStyles(currentHeightStrategyClass, overlayContent));\r\n        this._setHeightClasses(this.$overlayContent(), currentHeightStrategyClass)\r\n    }\r\n    _heightStrategyChangeOffset(currentHeightStrategyClass, popupVerticalPaddings) {\r\n        return currentHeightStrategyClass === HEIGHT_STRATEGIES.flex ? -popupVerticalPaddings : 0\r\n    }\r\n    _chooseHeightStrategy(overlayContent) {\r\n        const isAutoWidth = \"auto\" === overlayContent.style.width || \"\" === overlayContent.style.width;\r\n        let currentHeightStrategyClass = HEIGHT_STRATEGIES.static;\r\n        if (this._isAutoHeight() && this.option(\"autoResizeEnabled\")) {\r\n            if (isAutoWidth || IS_OLD_SAFARI) {\r\n                currentHeightStrategyClass = HEIGHT_STRATEGIES.inherit\r\n            } else {\r\n                currentHeightStrategyClass = HEIGHT_STRATEGIES.flex\r\n            }\r\n        }\r\n        return currentHeightStrategyClass\r\n    }\r\n    _getHeightCssStyles(currentHeightStrategyClass, overlayContent) {\r\n        let cssStyles = {};\r\n        const contentMaxHeight = this._getOptionValue(\"maxHeight\", overlayContent);\r\n        const contentMinHeight = this._getOptionValue(\"minHeight\", overlayContent);\r\n        const popupHeightParts = this._splitPopupHeight();\r\n        const toolbarsAndVerticalOffsetsHeight = popupHeightParts.header + popupHeightParts.footer + popupHeightParts.contentVerticalOffsets + popupHeightParts.popupVerticalOffsets + this._heightStrategyChangeOffset(currentHeightStrategyClass, popupHeightParts.popupVerticalPaddings);\r\n        if (currentHeightStrategyClass === HEIGHT_STRATEGIES.static) {\r\n            if (!this._isAutoHeight() || contentMaxHeight || contentMinHeight) {\r\n                const overlayHeight = this.option(\"fullScreen\") ? Math.min(getBoundingRect(overlayContent).height, windowUtils.getWindow().innerHeight) : getBoundingRect(overlayContent).height;\r\n                const contentHeight = overlayHeight - toolbarsAndVerticalOffsetsHeight;\r\n                cssStyles = {\r\n                    height: Math.max(0, contentHeight),\r\n                    minHeight: \"auto\",\r\n                    maxHeight: \"auto\"\r\n                }\r\n            }\r\n        } else {\r\n            const container = $(this._positionController.$visualContainer).get(0);\r\n            const maxHeightValue = addOffsetToMaxHeight(contentMaxHeight, -toolbarsAndVerticalOffsetsHeight, container);\r\n            const minHeightValue = addOffsetToMinHeight(contentMinHeight, -toolbarsAndVerticalOffsetsHeight, container);\r\n            cssStyles = {\r\n                height: \"auto\",\r\n                minHeight: minHeightValue,\r\n                maxHeight: maxHeightValue\r\n            }\r\n        }\r\n        return cssStyles\r\n    }\r\n    _setHeightClasses($container, currentClass) {\r\n        let excessClasses = \"\";\r\n        for (const name in HEIGHT_STRATEGIES) {\r\n            if (HEIGHT_STRATEGIES[name] !== currentClass) {\r\n                excessClasses += ` ${HEIGHT_STRATEGIES[name]}`\r\n            }\r\n        }\r\n        $container.removeClass(excessClasses).addClass(currentClass)\r\n    }\r\n    _isAutoHeight() {\r\n        return \"auto\" === this.$overlayContent().get(0).style.height\r\n    }\r\n    _splitPopupHeight() {\r\n        const topToolbar = this.topToolbar();\r\n        const bottomToolbar = this.bottomToolbar();\r\n        return {\r\n            header: getVisibleHeight(null === topToolbar || void 0 === topToolbar ? void 0 : topToolbar.get(0)),\r\n            footer: getVisibleHeight(null === bottomToolbar || void 0 === bottomToolbar ? void 0 : bottomToolbar.get(0)),\r\n            contentVerticalOffsets: getVerticalOffsets(this.$overlayContent().get(0), true),\r\n            popupVerticalOffsets: getVerticalOffsets(this.$content().get(0), true),\r\n            popupVerticalPaddings: getVerticalOffsets(this.$content().get(0), false)\r\n        }\r\n    }\r\n    _isAllWindowCovered() {\r\n        const {\r\n            fullScreen: fullScreen\r\n        } = this.option();\r\n        return super._isAllWindowCovered() || fullScreen\r\n    }\r\n    _renderDimensions() {\r\n        if (this.option(\"fullScreen\")) {\r\n            this.$overlayContent().css({\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                minWidth: \"\",\r\n                maxWidth: \"\",\r\n                minHeight: \"\",\r\n                maxHeight: \"\"\r\n            })\r\n        } else {\r\n            super._renderDimensions()\r\n        }\r\n        if (windowUtils.hasWindow()) {\r\n            this._renderFullscreenWidthClass()\r\n        }\r\n    }\r\n    _dimensionChanged() {\r\n        this._renderGeometry({\r\n            isDimensionChange: true\r\n        })\r\n    }\r\n    _clean() {\r\n        super._clean();\r\n        this._observeContentResize(false)\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        this._toggleBodyScroll(true)\r\n    }\r\n    _renderFullscreenWidthClass() {\r\n        const isFullScreen = getOuterWidth(this.$overlayContent()) === getWidth(window);\r\n        this.$overlayContent().toggleClass(\"dx-popup-fullscreen-width\", isFullScreen)\r\n    }\r\n    _toggleSafariScrolling() {\r\n        if (!this.option(\"enableBodyScroll\")) {\r\n            return\r\n        }\r\n        super._toggleSafariScrolling()\r\n    }\r\n    _toggleBodyScroll(enabled) {\r\n        if (!this._bodyOverflowManager) {\r\n            return\r\n        }\r\n        const {\r\n            setOverflow: setOverflow,\r\n            restoreOverflow: restoreOverflow\r\n        } = this._bodyOverflowManager;\r\n        if (enabled) {\r\n            restoreOverflow()\r\n        } else {\r\n            setOverflow()\r\n        }\r\n    }\r\n    refreshPosition() {\r\n        this._renderPosition()\r\n    }\r\n    _optionChanged(args) {\r\n        var _this$_resizable2;\r\n        const {\r\n            value: value,\r\n            name: name\r\n        } = args;\r\n        switch (name) {\r\n            case \"disabled\":\r\n                super._optionChanged(args);\r\n                this._renderTitle();\r\n                this._renderBottom();\r\n                break;\r\n            case \"animation\":\r\n                this._updateResizeCallbackSkipCondition();\r\n                break;\r\n            case \"enableBodyScroll\":\r\n                if (this.option(\"visible\")) {\r\n                    this._toggleBodyScroll(value)\r\n                }\r\n                break;\r\n            case \"showTitle\":\r\n            case \"title\":\r\n            case \"titleTemplate\":\r\n                this._renderTitle();\r\n                this._renderGeometry();\r\n                triggerResizeEvent(this.$overlayContent());\r\n                break;\r\n            case \"bottomTemplate\":\r\n                this._renderBottom();\r\n                this._renderGeometry();\r\n                triggerResizeEvent(this.$overlayContent());\r\n                break;\r\n            case \"container\":\r\n                super._optionChanged(args);\r\n                if (this.option(\"resizeEnabled\")) {\r\n                    var _this$_resizable;\r\n                    null === (_this$_resizable = this._resizable) || void 0 === _this$_resizable || _this$_resizable.option(\"area\", this._positionController.$dragResizeContainer)\r\n                }\r\n                break;\r\n            case \"width\":\r\n            case \"height\":\r\n                super._optionChanged(args);\r\n                null === (_this$_resizable2 = this._resizable) || void 0 === _this$_resizable2 || _this$_resizable2.option(name, value);\r\n                break;\r\n            case \"onTitleRendered\":\r\n                this._createTitleRenderAction();\r\n                break;\r\n            case \"toolbarItems\":\r\n            case \"useDefaultToolbarButtons\":\r\n            case \"useFlatToolbarButtons\": {\r\n                const shouldRenderGeometry = !args.fullName.match(/^toolbarItems((\\[\\d+\\])(\\.(options|visible).*)?)?$/);\r\n                this._renderTitle();\r\n                this._renderBottom();\r\n                if (shouldRenderGeometry) {\r\n                    this._renderGeometry();\r\n                    triggerResizeEvent(this.$overlayContent())\r\n                }\r\n                break\r\n            }\r\n            case \"dragEnabled\":\r\n                this._renderDrag();\r\n                break;\r\n            case \"dragAndResizeArea\":\r\n                this._positionController.dragAndResizeArea = value;\r\n                if (this.option(\"resizeEnabled\")) {\r\n                    this._resizable.option(\"area\", this._positionController.$dragResizeContainer)\r\n                }\r\n                this._positionController.positionContent();\r\n                break;\r\n            case \"dragOutsideBoundary\":\r\n                this._positionController.dragOutsideBoundary = value;\r\n                if (this.option(\"resizeEnabled\")) {\r\n                    this._resizable.option(\"area\", this._positionController.$dragResizeContainer)\r\n                }\r\n                break;\r\n            case \"outsideDragFactor\":\r\n                this._positionController.outsideDragFactor = value;\r\n                break;\r\n            case \"resizeEnabled\":\r\n                this._renderResize();\r\n                this._renderGeometry();\r\n                break;\r\n            case \"autoResizeEnabled\":\r\n                this._renderGeometry();\r\n                triggerResizeEvent(this.$overlayContent());\r\n                break;\r\n            case \"fullScreen\":\r\n                this._positionController.fullScreen = value;\r\n                this._toggleFullScreenClass(value);\r\n                this._toggleSafariScrolling();\r\n                this._renderGeometry();\r\n                triggerResizeEvent(this.$overlayContent());\r\n                break;\r\n            case \"showCloseButton\":\r\n                this._renderTitle();\r\n                break;\r\n            case \"preventScrollEvents\":\r\n                super._optionChanged(args);\r\n                this._toggleContentScrollClass();\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    bottomToolbar() {\r\n        return this._$bottom\r\n    }\r\n    topToolbar() {\r\n        return this._$title\r\n    }\r\n    $content() {\r\n        return this._$popupContent\r\n    }\r\n    content() {\r\n        return getPublicElement(this.$content())\r\n    }\r\n    $overlayContent() {\r\n        return this._$content\r\n    }\r\n    getFocusableElements() {\r\n        return this.$wrapper().find(\"[tabindex]\").filter(((index, item) => item.getAttribute(\"tabindex\") >= 0))\r\n    }\r\n}\r\nregisterComponent(\"dxPopup\", Popup);\r\nexport default Popup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}