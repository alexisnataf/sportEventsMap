{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/ui/popup/m_popup_drag.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { locate, move } from \"../../../common/core/animation/translator\";\nimport eventsEngine from \"../../../common/core/events/core/events_engine\";\nimport { end as dragEndEvent, move as dragMoveEvent, start as dragStartEvent } from \"../../../common/core/events/drag\";\nimport { addNamespace } from \"../../../common/core/events/utils/index\";\nimport domAdapter from \"../../../core/dom_adapter\";\nimport { fitIntoRange } from \"../../../core/utils/math\";\nimport { getOffset, getOuterHeight, getOuterWidth } from \"../../../core/utils/size\";\nimport { isWindow } from \"../../../core/utils/type\";\nconst KEYBOARD_DRAG_STEP = 5;\nclass PopupDrag {\n  constructor(config) {\n    this.init(config);\n  }\n  init(_ref) {\n    let {\n      dragEnabled: dragEnabled,\n      handle: handle,\n      draggableElement: draggableElement,\n      positionController: positionController\n    } = _ref;\n    this._positionController = positionController;\n    this._draggableElement = draggableElement;\n    this._handle = handle;\n    this._dragEnabled = dragEnabled;\n    this.unsubscribe();\n    if (!dragEnabled) {\n      return;\n    }\n    this.subscribe();\n  }\n  moveDown(e) {\n    this._moveTo(5, 0, e);\n  }\n  moveUp(e) {\n    this._moveTo(-5, 0, e);\n  }\n  moveLeft(e) {\n    this._moveTo(0, -5, e);\n  }\n  moveRight(e) {\n    this._moveTo(0, 5, e);\n  }\n  subscribe() {\n    const eventNames = this._getEventNames();\n    eventsEngine.on(this._handle, eventNames.startEventName, e => {\n      this._dragStartHandler(e);\n    });\n    eventsEngine.on(this._handle, eventNames.updateEventName, e => {\n      this._dragUpdateHandler(e);\n    });\n    eventsEngine.on(this._handle, eventNames.endEventName, e => {\n      this._dragEndHandler(e);\n    });\n  }\n  unsubscribe() {\n    const eventNames = this._getEventNames();\n    eventsEngine.off(this._handle, eventNames.startEventName);\n    eventsEngine.off(this._handle, eventNames.updateEventName);\n    eventsEngine.off(this._handle, eventNames.endEventName);\n  }\n  _getEventNames() {\n    const startEventName = addNamespace(dragStartEvent, \"overlayDrag\");\n    const updateEventName = addNamespace(dragMoveEvent, \"overlayDrag\");\n    const endEventName = addNamespace(dragEndEvent, \"overlayDrag\");\n    return {\n      startEventName: startEventName,\n      updateEventName: updateEventName,\n      endEventName: endEventName\n    };\n  }\n  _dragStartHandler(e) {\n    const allowedOffsets = this._getAllowedOffsets();\n    this._prevOffset = {\n      x: 0,\n      y: 0\n    };\n    e.targetElements = [];\n    e.maxTopOffset = allowedOffsets.top;\n    e.maxBottomOffset = allowedOffsets.bottom;\n    e.maxLeftOffset = allowedOffsets.left;\n    e.maxRightOffset = allowedOffsets.right;\n  }\n  _dragUpdateHandler(e) {\n    const targetOffset = {\n      top: e.offset.y - this._prevOffset.y,\n      left: e.offset.x - this._prevOffset.x\n    };\n    this._moveByOffset(targetOffset);\n    this._prevOffset = e.offset;\n  }\n  _dragEndHandler(event) {\n    this._positionController.dragHandled();\n    this._positionController.detectVisualPositionChange(event);\n  }\n  _moveTo(top, left, e) {\n    if (!this._dragEnabled) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const offset = this._fitOffsetIntoAllowedRange(top, left);\n    this._moveByOffset(offset);\n    this._dragEndHandler(e);\n  }\n  _fitOffsetIntoAllowedRange(top, left) {\n    const allowedOffsets = this._getAllowedOffsets();\n    return {\n      top: fitIntoRange(top, -allowedOffsets.top, allowedOffsets.bottom),\n      left: fitIntoRange(left, -allowedOffsets.left, allowedOffsets.right)\n    };\n  }\n  _getContainerDimensions() {\n    const document = domAdapter.getDocument();\n    const container = this._positionController.$dragResizeContainer.get(0);\n    let containerWidth = getOuterWidth(container);\n    let containerHeight = getOuterHeight(container);\n    if (isWindow(container)) {\n      containerHeight = Math.max(document.body.clientHeight, containerHeight);\n      containerWidth = Math.max(document.body.clientWidth, containerWidth);\n    }\n    return {\n      width: containerWidth,\n      height: containerHeight\n    };\n  }\n  _getContainerPosition() {\n    const container = this._positionController.$dragResizeContainer.get(0);\n    return isWindow(container) ? {\n      top: 0,\n      left: 0\n    } : getOffset(container);\n  }\n  _getElementPosition() {\n    return getOffset(this._draggableElement);\n  }\n  _getInnerDelta() {\n    const containerDimensions = this._getContainerDimensions();\n    const elementDimensions = this._getElementDimensions();\n    return {\n      x: containerDimensions.width - elementDimensions.width,\n      y: containerDimensions.height - elementDimensions.height\n    };\n  }\n  _getOuterDelta() {\n    const {\n      width: width,\n      height: height\n    } = this._getElementDimensions();\n    const {\n      outsideDragFactor: outsideDragFactor\n    } = this._positionController;\n    return {\n      x: width * outsideDragFactor,\n      y: height * outsideDragFactor\n    };\n  }\n  _getFullDelta() {\n    const fullDelta = this._getInnerDelta();\n    const outerDelta = this._getOuterDelta();\n    return {\n      x: fullDelta.x + outerDelta.x,\n      y: fullDelta.y + outerDelta.y\n    };\n  }\n  _getElementDimensions() {\n    return {\n      width: this._draggableElement.offsetWidth,\n      height: this._draggableElement.offsetHeight\n    };\n  }\n  _getAllowedOffsets() {\n    const fullDelta = this._getFullDelta();\n    const isDragAllowed = fullDelta.y >= 0 && fullDelta.x >= 0;\n    if (!isDragAllowed) {\n      return {\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0\n      };\n    }\n    const elementPosition = this._getElementPosition();\n    const containerPosition = this._getContainerPosition();\n    const outerDelta = this._getOuterDelta();\n    return {\n      top: elementPosition.top - containerPosition.top + outerDelta.y,\n      bottom: -elementPosition.top + containerPosition.top + fullDelta.y,\n      left: elementPosition.left - containerPosition.left + outerDelta.x,\n      right: -elementPosition.left + containerPosition.left + fullDelta.x\n    };\n  }\n  _moveByOffset(offset) {\n    const currentPosition = locate(this._draggableElement);\n    const newPosition = {\n      left: currentPosition.left + offset.left,\n      top: currentPosition.top + offset.top\n    };\n    move(this._draggableElement, newPosition);\n  }\n}\nexport default PopupDrag;","map":{"version":3,"names":["locate","move","eventsEngine","end","dragEndEvent","dragMoveEvent","start","dragStartEvent","addNamespace","domAdapter","fitIntoRange","getOffset","getOuterHeight","getOuterWidth","isWindow","KEYBOARD_DRAG_STEP","PopupDrag","constructor","config","init","_ref","dragEnabled","handle","draggableElement","positionController","_positionController","_draggableElement","_handle","_dragEnabled","unsubscribe","subscribe","moveDown","e","_moveTo","moveUp","moveLeft","moveRight","eventNames","_getEventNames","on","startEventName","_dragStartHandler","updateEventName","_dragUpdateHandler","endEventName","_dragEndHandler","off","allowedOffsets","_getAllowedOffsets","_prevOffset","x","y","targetElements","maxTopOffset","top","maxBottomOffset","bottom","maxLeftOffset","left","maxRightOffset","right","targetOffset","offset","_moveByOffset","event","dragHandled","detectVisualPositionChange","preventDefault","stopPropagation","_fitOffsetIntoAllowedRange","_getContainerDimensions","document","getDocument","container","$dragResizeContainer","get","containerWidth","containerHeight","Math","max","body","clientHeight","clientWidth","width","height","_getContainerPosition","_getElementPosition","_getInnerDelta","containerDimensions","elementDimensions","_getElementDimensions","_getOuterDelta","outsideDragFactor","_getFullDelta","fullDelta","outerDelta","offsetWidth","offsetHeight","isDragAllowed","elementPosition","containerPosition","currentPosition","newPosition"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/ui/popup/m_popup_drag.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/ui/popup/m_popup_drag.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    locate,\r\n    move\r\n} from \"../../../common/core/animation/translator\";\r\nimport eventsEngine from \"../../../common/core/events/core/events_engine\";\r\nimport {\r\n    end as dragEndEvent,\r\n    move as dragMoveEvent,\r\n    start as dragStartEvent\r\n} from \"../../../common/core/events/drag\";\r\nimport {\r\n    addNamespace\r\n} from \"../../../common/core/events/utils/index\";\r\nimport domAdapter from \"../../../core/dom_adapter\";\r\nimport {\r\n    fitIntoRange\r\n} from \"../../../core/utils/math\";\r\nimport {\r\n    getOffset,\r\n    getOuterHeight,\r\n    getOuterWidth\r\n} from \"../../../core/utils/size\";\r\nimport {\r\n    isWindow\r\n} from \"../../../core/utils/type\";\r\nconst KEYBOARD_DRAG_STEP = 5;\r\nclass PopupDrag {\r\n    constructor(config) {\r\n        this.init(config)\r\n    }\r\n    init(_ref) {\r\n        let {\r\n            dragEnabled: dragEnabled,\r\n            handle: handle,\r\n            draggableElement: draggableElement,\r\n            positionController: positionController\r\n        } = _ref;\r\n        this._positionController = positionController;\r\n        this._draggableElement = draggableElement;\r\n        this._handle = handle;\r\n        this._dragEnabled = dragEnabled;\r\n        this.unsubscribe();\r\n        if (!dragEnabled) {\r\n            return\r\n        }\r\n        this.subscribe()\r\n    }\r\n    moveDown(e) {\r\n        this._moveTo(5, 0, e)\r\n    }\r\n    moveUp(e) {\r\n        this._moveTo(-5, 0, e)\r\n    }\r\n    moveLeft(e) {\r\n        this._moveTo(0, -5, e)\r\n    }\r\n    moveRight(e) {\r\n        this._moveTo(0, 5, e)\r\n    }\r\n    subscribe() {\r\n        const eventNames = this._getEventNames();\r\n        eventsEngine.on(this._handle, eventNames.startEventName, (e => {\r\n            this._dragStartHandler(e)\r\n        }));\r\n        eventsEngine.on(this._handle, eventNames.updateEventName, (e => {\r\n            this._dragUpdateHandler(e)\r\n        }));\r\n        eventsEngine.on(this._handle, eventNames.endEventName, (e => {\r\n            this._dragEndHandler(e)\r\n        }))\r\n    }\r\n    unsubscribe() {\r\n        const eventNames = this._getEventNames();\r\n        eventsEngine.off(this._handle, eventNames.startEventName);\r\n        eventsEngine.off(this._handle, eventNames.updateEventName);\r\n        eventsEngine.off(this._handle, eventNames.endEventName)\r\n    }\r\n    _getEventNames() {\r\n        const startEventName = addNamespace(dragStartEvent, \"overlayDrag\");\r\n        const updateEventName = addNamespace(dragMoveEvent, \"overlayDrag\");\r\n        const endEventName = addNamespace(dragEndEvent, \"overlayDrag\");\r\n        return {\r\n            startEventName: startEventName,\r\n            updateEventName: updateEventName,\r\n            endEventName: endEventName\r\n        }\r\n    }\r\n    _dragStartHandler(e) {\r\n        const allowedOffsets = this._getAllowedOffsets();\r\n        this._prevOffset = {\r\n            x: 0,\r\n            y: 0\r\n        };\r\n        e.targetElements = [];\r\n        e.maxTopOffset = allowedOffsets.top;\r\n        e.maxBottomOffset = allowedOffsets.bottom;\r\n        e.maxLeftOffset = allowedOffsets.left;\r\n        e.maxRightOffset = allowedOffsets.right\r\n    }\r\n    _dragUpdateHandler(e) {\r\n        const targetOffset = {\r\n            top: e.offset.y - this._prevOffset.y,\r\n            left: e.offset.x - this._prevOffset.x\r\n        };\r\n        this._moveByOffset(targetOffset);\r\n        this._prevOffset = e.offset\r\n    }\r\n    _dragEndHandler(event) {\r\n        this._positionController.dragHandled();\r\n        this._positionController.detectVisualPositionChange(event)\r\n    }\r\n    _moveTo(top, left, e) {\r\n        if (!this._dragEnabled) {\r\n            return\r\n        }\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const offset = this._fitOffsetIntoAllowedRange(top, left);\r\n        this._moveByOffset(offset);\r\n        this._dragEndHandler(e)\r\n    }\r\n    _fitOffsetIntoAllowedRange(top, left) {\r\n        const allowedOffsets = this._getAllowedOffsets();\r\n        return {\r\n            top: fitIntoRange(top, -allowedOffsets.top, allowedOffsets.bottom),\r\n            left: fitIntoRange(left, -allowedOffsets.left, allowedOffsets.right)\r\n        }\r\n    }\r\n    _getContainerDimensions() {\r\n        const document = domAdapter.getDocument();\r\n        const container = this._positionController.$dragResizeContainer.get(0);\r\n        let containerWidth = getOuterWidth(container);\r\n        let containerHeight = getOuterHeight(container);\r\n        if (isWindow(container)) {\r\n            containerHeight = Math.max(document.body.clientHeight, containerHeight);\r\n            containerWidth = Math.max(document.body.clientWidth, containerWidth)\r\n        }\r\n        return {\r\n            width: containerWidth,\r\n            height: containerHeight\r\n        }\r\n    }\r\n    _getContainerPosition() {\r\n        const container = this._positionController.$dragResizeContainer.get(0);\r\n        return isWindow(container) ? {\r\n            top: 0,\r\n            left: 0\r\n        } : getOffset(container)\r\n    }\r\n    _getElementPosition() {\r\n        return getOffset(this._draggableElement)\r\n    }\r\n    _getInnerDelta() {\r\n        const containerDimensions = this._getContainerDimensions();\r\n        const elementDimensions = this._getElementDimensions();\r\n        return {\r\n            x: containerDimensions.width - elementDimensions.width,\r\n            y: containerDimensions.height - elementDimensions.height\r\n        }\r\n    }\r\n    _getOuterDelta() {\r\n        const {\r\n            width: width,\r\n            height: height\r\n        } = this._getElementDimensions();\r\n        const {\r\n            outsideDragFactor: outsideDragFactor\r\n        } = this._positionController;\r\n        return {\r\n            x: width * outsideDragFactor,\r\n            y: height * outsideDragFactor\r\n        }\r\n    }\r\n    _getFullDelta() {\r\n        const fullDelta = this._getInnerDelta();\r\n        const outerDelta = this._getOuterDelta();\r\n        return {\r\n            x: fullDelta.x + outerDelta.x,\r\n            y: fullDelta.y + outerDelta.y\r\n        }\r\n    }\r\n    _getElementDimensions() {\r\n        return {\r\n            width: this._draggableElement.offsetWidth,\r\n            height: this._draggableElement.offsetHeight\r\n        }\r\n    }\r\n    _getAllowedOffsets() {\r\n        const fullDelta = this._getFullDelta();\r\n        const isDragAllowed = fullDelta.y >= 0 && fullDelta.x >= 0;\r\n        if (!isDragAllowed) {\r\n            return {\r\n                top: 0,\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0\r\n            }\r\n        }\r\n        const elementPosition = this._getElementPosition();\r\n        const containerPosition = this._getContainerPosition();\r\n        const outerDelta = this._getOuterDelta();\r\n        return {\r\n            top: elementPosition.top - containerPosition.top + outerDelta.y,\r\n            bottom: -elementPosition.top + containerPosition.top + fullDelta.y,\r\n            left: elementPosition.left - containerPosition.left + outerDelta.x,\r\n            right: -elementPosition.left + containerPosition.left + fullDelta.x\r\n        }\r\n    }\r\n    _moveByOffset(offset) {\r\n        const currentPosition = locate(this._draggableElement);\r\n        const newPosition = {\r\n            left: currentPosition.left + offset.left,\r\n            top: currentPosition.top + offset.top\r\n        };\r\n        move(this._draggableElement, newPosition)\r\n    }\r\n}\r\nexport default PopupDrag;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}