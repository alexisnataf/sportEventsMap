{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/events/utils/index.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport eventsEngine from \"../../../common/core/events/core/events_engine\";\nimport $ from \"../../../core/renderer\";\nimport { extend } from \"../../../core/utils/extend\";\nimport { each } from \"../../../core/utils/iterator\";\nimport { focused } from \"../../../ui/widget/selectors\";\nimport mappedAddNamespace from \"./m_add_namespace\";\nconst KEY_MAP = {\n  backspace: \"backspace\",\n  tab: \"tab\",\n  enter: \"enter\",\n  escape: \"escape\",\n  pageup: \"pageUp\",\n  pagedown: \"pageDown\",\n  end: \"end\",\n  home: \"home\",\n  arrowleft: \"leftArrow\",\n  arrowup: \"upArrow\",\n  arrowright: \"rightArrow\",\n  arrowdown: \"downArrow\",\n  delete: \"del\",\n  \" \": \"space\",\n  f: \"F\",\n  a: \"A\",\n  \"*\": \"asterisk\",\n  \"-\": \"minus\",\n  alt: \"alt\",\n  control: \"control\",\n  shift: \"shift\"\n};\nconst LEGACY_KEY_CODES = {\n  8: \"backspace\",\n  9: \"tab\",\n  13: \"enter\",\n  27: \"escape\",\n  33: \"pageUp\",\n  34: \"pageDown\",\n  35: \"end\",\n  36: \"home\",\n  37: \"leftArrow\",\n  38: \"upArrow\",\n  39: \"rightArrow\",\n  40: \"downArrow\",\n  46: \"del\",\n  32: \"space\",\n  70: \"F\",\n  65: \"A\",\n  106: \"asterisk\",\n  109: \"minus\",\n  189: \"minus\",\n  173: \"minus\",\n  16: \"shift\",\n  17: \"control\",\n  18: \"alt\"\n};\nconst EVENT_SOURCES_REGEX = {\n  dx: /^dx/i,\n  mouse: /(mouse|wheel)/i,\n  touch: /^touch/i,\n  keyboard: /^key/i,\n  pointer: /^(ms)?pointer/i\n};\nexport const eventSource = _ref => {\n  let {\n    type: type\n  } = _ref;\n  let result = \"other\";\n  each(EVENT_SOURCES_REGEX, function (key) {\n    if (this.test(type)) {\n      result = key;\n      return false;\n    }\n  });\n  return result;\n};\nlet fixMethod = e => e;\nconst getEvent = originalEvent => eventsEngine.Event(originalEvent, originalEvent);\nconst copyEvent = originalEvent => fixMethod(getEvent(originalEvent), originalEvent);\nconst isDxEvent = e => \"dx\" === eventSource(e);\nconst isNativeMouseEvent = e => \"mouse\" === eventSource(e);\nconst isNativeTouchEvent = e => \"touch\" === eventSource(e);\nexport const isPointerEvent = e => \"pointer\" === eventSource(e);\nexport const isMouseEvent = e => isNativeMouseEvent(e) || (isPointerEvent(e) || isDxEvent(e)) && \"mouse\" === e.pointerType;\nexport const isDxMouseWheelEvent = e => e && \"dxmousewheel\" === e.type;\nexport const isTouchEvent = e => isNativeTouchEvent(e) || (isPointerEvent(e) || isDxEvent(e)) && \"touch\" === e.pointerType;\nexport const isKeyboardEvent = e => \"keyboard\" === eventSource(e);\nexport const isFakeClickEvent = _ref2 => {\n  let {\n    screenX: screenX,\n    offsetX: offsetX,\n    pageX: pageX\n  } = _ref2;\n  return 0 === screenX && !offsetX && 0 === pageX;\n};\nexport const eventData = _ref3 => {\n  let {\n    pageX: pageX,\n    pageY: pageY,\n    timeStamp: timeStamp\n  } = _ref3;\n  return {\n    x: pageX,\n    y: pageY,\n    time: timeStamp\n  };\n};\nexport const eventDelta = (from, to) => ({\n  x: to.x - from.x,\n  y: to.y - from.y,\n  time: to.time - from.time || 1\n});\nexport const hasTouches = e => {\n  const {\n    originalEvent: originalEvent,\n    pointers: pointers\n  } = e;\n  if (isNativeTouchEvent(e)) {\n    return (originalEvent.touches || []).length;\n  }\n  if (isDxEvent(e)) {\n    return (pointers || []).length;\n  }\n  return 0;\n};\nlet skipEvents = false;\nexport const forceSkipEvents = () => {\n  skipEvents = true;\n};\nexport const stopEventsSkipping = () => {\n  skipEvents = false;\n};\nexport const needSkipEvent = e => {\n  if (skipEvents) {\n    return true;\n  }\n  const {\n    target: target\n  } = e;\n  const $target = $(target);\n  const isContentEditable = (null === target || void 0 === target ? void 0 : target.isContentEditable) || (null === target || void 0 === target ? void 0 : target.hasAttribute(\"contenteditable\"));\n  const touchInEditable = $target.is(\"input, textarea, select\") || isContentEditable;\n  if (isDxMouseWheelEvent(e)) {\n    const isTextArea = $target.is(\"textarea\") && $target.hasClass(\"dx-texteditor-input\");\n    if (isTextArea || isContentEditable) {\n      return false;\n    }\n    const isInputFocused = $target.is(\"input[type='number'], textarea, select\") && $target.is(\":focus\");\n    return isInputFocused;\n  }\n  if (isMouseEvent(e)) {\n    return touchInEditable || e.which > 1;\n  }\n  if (isTouchEvent(e)) {\n    return touchInEditable && focused($target);\n  }\n};\nexport const setEventFixMethod = func => {\n  fixMethod = func;\n};\nexport const createEvent = (originalEvent, args) => {\n  const event = copyEvent(originalEvent);\n  if (args) {\n    extend(event, args);\n  }\n  return event;\n};\nexport const fireEvent = props => {\n  const {\n    originalEvent: originalEvent,\n    delegateTarget: delegateTarget\n  } = props;\n  const event = createEvent(originalEvent, props);\n  eventsEngine.trigger(delegateTarget || event.target, event);\n  return event;\n};\nexport const normalizeKeyName = _ref4 => {\n  let {\n    key: key,\n    which: which\n  } = _ref4;\n  const normalizedKey = KEY_MAP[null === key || void 0 === key ? void 0 : key.toLowerCase()] || key;\n  const normalizedKeyFromWhich = LEGACY_KEY_CODES[which];\n  if (normalizedKeyFromWhich && normalizedKey === key) {\n    return normalizedKeyFromWhich;\n  }\n  if (!normalizedKey && which) {\n    return String.fromCharCode(which);\n  }\n  return normalizedKey;\n};\nexport const getChar = _ref5 => {\n  let {\n    key: key,\n    which: which\n  } = _ref5;\n  return key || String.fromCharCode(which);\n};\nexport const addNamespace = mappedAddNamespace;\nexport const isCommandKeyPressed = _ref6 => {\n  let {\n    ctrlKey: ctrlKey,\n    metaKey: metaKey\n  } = _ref6;\n  return ctrlKey || metaKey;\n};","map":{"version":3,"names":["eventsEngine","$","extend","each","focused","mappedAddNamespace","KEY_MAP","backspace","tab","enter","escape","pageup","pagedown","end","home","arrowleft","arrowup","arrowright","arrowdown","delete","f","a","alt","control","shift","LEGACY_KEY_CODES","EVENT_SOURCES_REGEX","dx","mouse","touch","keyboard","pointer","eventSource","_ref","type","result","key","test","fixMethod","e","getEvent","originalEvent","Event","copyEvent","isDxEvent","isNativeMouseEvent","isNativeTouchEvent","isPointerEvent","isMouseEvent","pointerType","isDxMouseWheelEvent","isTouchEvent","isKeyboardEvent","isFakeClickEvent","_ref2","screenX","offsetX","pageX","eventData","_ref3","pageY","timeStamp","x","y","time","eventDelta","from","to","hasTouches","pointers","touches","length","skipEvents","forceSkipEvents","stopEventsSkipping","needSkipEvent","target","$target","isContentEditable","hasAttribute","touchInEditable","is","isTextArea","hasClass","isInputFocused","which","setEventFixMethod","func","createEvent","args","event","fireEvent","props","delegateTarget","trigger","normalizeKeyName","_ref4","normalizedKey","toLowerCase","normalizedKeyFromWhich","String","fromCharCode","getChar","_ref5","addNamespace","isCommandKeyPressed","_ref6","ctrlKey","metaKey"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/events/utils/index.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/events/utils/index.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport eventsEngine from \"../../../common/core/events/core/events_engine\";\r\nimport $ from \"../../../core/renderer\";\r\nimport {\r\n    extend\r\n} from \"../../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../../core/utils/iterator\";\r\nimport {\r\n    focused\r\n} from \"../../../ui/widget/selectors\";\r\nimport mappedAddNamespace from \"./m_add_namespace\";\r\nconst KEY_MAP = {\r\n    backspace: \"backspace\",\r\n    tab: \"tab\",\r\n    enter: \"enter\",\r\n    escape: \"escape\",\r\n    pageup: \"pageUp\",\r\n    pagedown: \"pageDown\",\r\n    end: \"end\",\r\n    home: \"home\",\r\n    arrowleft: \"leftArrow\",\r\n    arrowup: \"upArrow\",\r\n    arrowright: \"rightArrow\",\r\n    arrowdown: \"downArrow\",\r\n    delete: \"del\",\r\n    \" \": \"space\",\r\n    f: \"F\",\r\n    a: \"A\",\r\n    \"*\": \"asterisk\",\r\n    \"-\": \"minus\",\r\n    alt: \"alt\",\r\n    control: \"control\",\r\n    shift: \"shift\"\r\n};\r\nconst LEGACY_KEY_CODES = {\r\n    8: \"backspace\",\r\n    9: \"tab\",\r\n    13: \"enter\",\r\n    27: \"escape\",\r\n    33: \"pageUp\",\r\n    34: \"pageDown\",\r\n    35: \"end\",\r\n    36: \"home\",\r\n    37: \"leftArrow\",\r\n    38: \"upArrow\",\r\n    39: \"rightArrow\",\r\n    40: \"downArrow\",\r\n    46: \"del\",\r\n    32: \"space\",\r\n    70: \"F\",\r\n    65: \"A\",\r\n    106: \"asterisk\",\r\n    109: \"minus\",\r\n    189: \"minus\",\r\n    173: \"minus\",\r\n    16: \"shift\",\r\n    17: \"control\",\r\n    18: \"alt\"\r\n};\r\nconst EVENT_SOURCES_REGEX = {\r\n    dx: /^dx/i,\r\n    mouse: /(mouse|wheel)/i,\r\n    touch: /^touch/i,\r\n    keyboard: /^key/i,\r\n    pointer: /^(ms)?pointer/i\r\n};\r\nexport const eventSource = _ref => {\r\n    let {\r\n        type: type\r\n    } = _ref;\r\n    let result = \"other\";\r\n    each(EVENT_SOURCES_REGEX, (function(key) {\r\n        if (this.test(type)) {\r\n            result = key;\r\n            return false\r\n        }\r\n    }));\r\n    return result\r\n};\r\nlet fixMethod = e => e;\r\nconst getEvent = originalEvent => eventsEngine.Event(originalEvent, originalEvent);\r\nconst copyEvent = originalEvent => fixMethod(getEvent(originalEvent), originalEvent);\r\nconst isDxEvent = e => \"dx\" === eventSource(e);\r\nconst isNativeMouseEvent = e => \"mouse\" === eventSource(e);\r\nconst isNativeTouchEvent = e => \"touch\" === eventSource(e);\r\nexport const isPointerEvent = e => \"pointer\" === eventSource(e);\r\nexport const isMouseEvent = e => isNativeMouseEvent(e) || (isPointerEvent(e) || isDxEvent(e)) && \"mouse\" === e.pointerType;\r\nexport const isDxMouseWheelEvent = e => e && \"dxmousewheel\" === e.type;\r\nexport const isTouchEvent = e => isNativeTouchEvent(e) || (isPointerEvent(e) || isDxEvent(e)) && \"touch\" === e.pointerType;\r\nexport const isKeyboardEvent = e => \"keyboard\" === eventSource(e);\r\nexport const isFakeClickEvent = _ref2 => {\r\n    let {\r\n        screenX: screenX,\r\n        offsetX: offsetX,\r\n        pageX: pageX\r\n    } = _ref2;\r\n    return 0 === screenX && !offsetX && 0 === pageX\r\n};\r\nexport const eventData = _ref3 => {\r\n    let {\r\n        pageX: pageX,\r\n        pageY: pageY,\r\n        timeStamp: timeStamp\r\n    } = _ref3;\r\n    return {\r\n        x: pageX,\r\n        y: pageY,\r\n        time: timeStamp\r\n    }\r\n};\r\nexport const eventDelta = (from, to) => ({\r\n    x: to.x - from.x,\r\n    y: to.y - from.y,\r\n    time: to.time - from.time || 1\r\n});\r\nexport const hasTouches = e => {\r\n    const {\r\n        originalEvent: originalEvent,\r\n        pointers: pointers\r\n    } = e;\r\n    if (isNativeTouchEvent(e)) {\r\n        return (originalEvent.touches || []).length\r\n    }\r\n    if (isDxEvent(e)) {\r\n        return (pointers || []).length\r\n    }\r\n    return 0\r\n};\r\nlet skipEvents = false;\r\nexport const forceSkipEvents = () => {\r\n    skipEvents = true\r\n};\r\nexport const stopEventsSkipping = () => {\r\n    skipEvents = false\r\n};\r\nexport const needSkipEvent = e => {\r\n    if (skipEvents) {\r\n        return true\r\n    }\r\n    const {\r\n        target: target\r\n    } = e;\r\n    const $target = $(target);\r\n    const isContentEditable = (null === target || void 0 === target ? void 0 : target.isContentEditable) || (null === target || void 0 === target ? void 0 : target.hasAttribute(\"contenteditable\"));\r\n    const touchInEditable = $target.is(\"input, textarea, select\") || isContentEditable;\r\n    if (isDxMouseWheelEvent(e)) {\r\n        const isTextArea = $target.is(\"textarea\") && $target.hasClass(\"dx-texteditor-input\");\r\n        if (isTextArea || isContentEditable) {\r\n            return false\r\n        }\r\n        const isInputFocused = $target.is(\"input[type='number'], textarea, select\") && $target.is(\":focus\");\r\n        return isInputFocused\r\n    }\r\n    if (isMouseEvent(e)) {\r\n        return touchInEditable || e.which > 1\r\n    }\r\n    if (isTouchEvent(e)) {\r\n        return touchInEditable && focused($target)\r\n    }\r\n};\r\nexport const setEventFixMethod = func => {\r\n    fixMethod = func\r\n};\r\nexport const createEvent = (originalEvent, args) => {\r\n    const event = copyEvent(originalEvent);\r\n    if (args) {\r\n        extend(event, args)\r\n    }\r\n    return event\r\n};\r\nexport const fireEvent = props => {\r\n    const {\r\n        originalEvent: originalEvent,\r\n        delegateTarget: delegateTarget\r\n    } = props;\r\n    const event = createEvent(originalEvent, props);\r\n    eventsEngine.trigger(delegateTarget || event.target, event);\r\n    return event\r\n};\r\nexport const normalizeKeyName = _ref4 => {\r\n    let {\r\n        key: key,\r\n        which: which\r\n    } = _ref4;\r\n    const normalizedKey = KEY_MAP[null === key || void 0 === key ? void 0 : key.toLowerCase()] || key;\r\n    const normalizedKeyFromWhich = LEGACY_KEY_CODES[which];\r\n    if (normalizedKeyFromWhich && normalizedKey === key) {\r\n        return normalizedKeyFromWhich\r\n    }\r\n    if (!normalizedKey && which) {\r\n        return String.fromCharCode(which)\r\n    }\r\n    return normalizedKey\r\n};\r\nexport const getChar = _ref5 => {\r\n    let {\r\n        key: key,\r\n        which: which\r\n    } = _ref5;\r\n    return key || String.fromCharCode(which)\r\n};\r\nexport const addNamespace = mappedAddNamespace;\r\nexport const isCommandKeyPressed = _ref6 => {\r\n    let {\r\n        ctrlKey: ctrlKey,\r\n        metaKey: metaKey\r\n    } = _ref6;\r\n    return ctrlKey || metaKey\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}