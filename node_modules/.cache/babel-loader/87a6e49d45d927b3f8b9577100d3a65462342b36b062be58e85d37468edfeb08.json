{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/ui/shared/m_grouped_data_converter_mixin.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { isObject } from \"../../../core/utils/type\";\nconst isCorrectStructure = data => Array.isArray(data) && data.every(item => {\n  const hasTwoFields = 2 === Object.keys(item).length;\n  const hasCorrectFields = \"key\" in item && \"items\" in item;\n  return hasTwoFields && hasCorrectFields && Array.isArray(item.items);\n});\nexport default {\n  _getSpecificDataSourceOption() {\n    let dataSource = this.option(\"dataSource\");\n    let hasSimpleItems = false;\n    let data = {};\n    if (this._getGroupedOption() && isCorrectStructure(dataSource)) {\n      data = dataSource.reduce((accumulator, item) => {\n        const items = item.items.map(innerItem => {\n          if (!isObject(innerItem)) {\n            innerItem = {\n              text: innerItem\n            };\n            hasSimpleItems = true;\n          }\n          if (!(\"key\" in innerItem)) {\n            innerItem.key = item.key;\n          }\n          return innerItem;\n        });\n        return accumulator.concat(items);\n      }, []);\n      dataSource = {\n        store: {\n          type: \"array\",\n          data: data\n        },\n        group: {\n          selector: \"key\",\n          keepInitialKeyOrder: true\n        }\n      };\n      if (hasSimpleItems) {\n        dataSource.searchExpr = \"text\";\n      }\n    }\n    return dataSource;\n  }\n};","map":{"version":3,"names":["isObject","isCorrectStructure","data","Array","isArray","every","item","hasTwoFields","Object","keys","length","hasCorrectFields","items","_getSpecificDataSourceOption","dataSource","option","hasSimpleItems","_getGroupedOption","reduce","accumulator","map","innerItem","text","key","concat","store","type","group","selector","keepInitialKeyOrder","searchExpr"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/ui/shared/m_grouped_data_converter_mixin.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/ui/shared/m_grouped_data_converter_mixin.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isObject\r\n} from \"../../../core/utils/type\";\r\nconst isCorrectStructure = data => Array.isArray(data) && data.every((item => {\r\n    const hasTwoFields = 2 === Object.keys(item).length;\r\n    const hasCorrectFields = \"key\" in item && \"items\" in item;\r\n    return hasTwoFields && hasCorrectFields && Array.isArray(item.items)\r\n}));\r\nexport default {\r\n    _getSpecificDataSourceOption() {\r\n        let dataSource = this.option(\"dataSource\");\r\n        let hasSimpleItems = false;\r\n        let data = {};\r\n        if (this._getGroupedOption() && isCorrectStructure(dataSource)) {\r\n            data = dataSource.reduce(((accumulator, item) => {\r\n                const items = item.items.map((innerItem => {\r\n                    if (!isObject(innerItem)) {\r\n                        innerItem = {\r\n                            text: innerItem\r\n                        };\r\n                        hasSimpleItems = true\r\n                    }\r\n                    if (!(\"key\" in innerItem)) {\r\n                        innerItem.key = item.key\r\n                    }\r\n                    return innerItem\r\n                }));\r\n                return accumulator.concat(items)\r\n            }), []);\r\n            dataSource = {\r\n                store: {\r\n                    type: \"array\",\r\n                    data: data\r\n                },\r\n                group: {\r\n                    selector: \"key\",\r\n                    keepInitialKeyOrder: true\r\n                }\r\n            };\r\n            if (hasSimpleItems) {\r\n                dataSource.searchExpr = \"text\"\r\n            }\r\n        }\r\n        return dataSource\r\n    }\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,QAAQ,QACL,0BAA0B;AACjC,MAAMC,kBAAkB,GAAGC,IAAI,IAAIC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,IAAIA,IAAI,CAACG,KAAK,CAAEC,IAAI,IAAI;EAC1E,MAAMC,YAAY,GAAG,CAAC,KAAKC,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC,CAACI,MAAM;EACnD,MAAMC,gBAAgB,GAAG,KAAK,IAAIL,IAAI,IAAI,OAAO,IAAIA,IAAI;EACzD,OAAOC,YAAY,IAAII,gBAAgB,IAAIR,KAAK,CAACC,OAAO,CAACE,IAAI,CAACM,KAAK,CAAC;AACxE,CAAE,CAAC;AACH,eAAe;EACXC,4BAA4BA,CAAA,EAAG;IAC3B,IAAIC,UAAU,GAAG,IAAI,CAACC,MAAM,CAAC,YAAY,CAAC;IAC1C,IAAIC,cAAc,GAAG,KAAK;IAC1B,IAAId,IAAI,GAAG,CAAC,CAAC;IACb,IAAI,IAAI,CAACe,iBAAiB,CAAC,CAAC,IAAIhB,kBAAkB,CAACa,UAAU,CAAC,EAAE;MAC5DZ,IAAI,GAAGY,UAAU,CAACI,MAAM,CAAE,CAACC,WAAW,EAAEb,IAAI,KAAK;QAC7C,MAAMM,KAAK,GAAGN,IAAI,CAACM,KAAK,CAACQ,GAAG,CAAEC,SAAS,IAAI;UACvC,IAAI,CAACrB,QAAQ,CAACqB,SAAS,CAAC,EAAE;YACtBA,SAAS,GAAG;cACRC,IAAI,EAAED;YACV,CAAC;YACDL,cAAc,GAAG,IAAI;UACzB;UACA,IAAI,EAAE,KAAK,IAAIK,SAAS,CAAC,EAAE;YACvBA,SAAS,CAACE,GAAG,GAAGjB,IAAI,CAACiB,GAAG;UAC5B;UACA,OAAOF,SAAS;QACpB,CAAE,CAAC;QACH,OAAOF,WAAW,CAACK,MAAM,CAACZ,KAAK,CAAC;MACpC,CAAC,EAAG,EAAE,CAAC;MACPE,UAAU,GAAG;QACTW,KAAK,EAAE;UACHC,IAAI,EAAE,OAAO;UACbxB,IAAI,EAAEA;QACV,CAAC;QACDyB,KAAK,EAAE;UACHC,QAAQ,EAAE,KAAK;UACfC,mBAAmB,EAAE;QACzB;MACJ,CAAC;MACD,IAAIb,cAAc,EAAE;QAChBF,UAAU,CAACgB,UAAU,GAAG,MAAM;MAClC;IACJ;IACA,OAAOhB,UAAU;EACrB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}