{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/ui/selection/m_selection.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { noop } from \"../../../core/utils/common\";\nimport { Deferred, when } from \"../../../core/utils/deferred\";\nimport { extend } from \"../../../core/utils/extend\";\nimport { isDefined } from \"../../../core/utils/type\";\nimport deferredStrategy from \"./m_selection.strategy.deferred\";\nimport standardStrategy from \"./m_selection.strategy.standard\";\nexport default class Selection {\n  constructor(options) {\n    this.options = extend(this._getDefaultOptions(), options, {\n      selectedItemKeys: options.selectedKeys || []\n    });\n    this._selectionStrategy = this.options.deferred ? new deferredStrategy(this.options) : new standardStrategy(this.options);\n    this._focusedItemIndex = -1;\n    if (!this.options.equalByReference) {\n      this._selectionStrategy.updateSelectedItemKeyHash(this.options.selectedItemKeys);\n    }\n  }\n  _getDefaultOptions() {\n    return {\n      allowNullValue: false,\n      deferred: false,\n      equalByReference: false,\n      mode: \"multiple\",\n      selectedItems: [],\n      selectionFilter: [],\n      maxFilterLengthInRequest: 0,\n      onSelectionChanged: noop,\n      key: noop,\n      keyOf: item => item,\n      load: () => Deferred().resolve([]),\n      totalCount: () => -1,\n      isSelectableItem: () => true,\n      isItemSelected: () => false,\n      getItemData: item => item,\n      dataFields: noop,\n      filter: noop\n    };\n  }\n  validate() {\n    this._selectionStrategy.validate();\n  }\n  getSelectedItemKeys() {\n    return this._selectionStrategy.getSelectedItemKeys();\n  }\n  getSelectedItems() {\n    return this._selectionStrategy.getSelectedItems();\n  }\n  selectionFilter(value) {\n    if (void 0 === value) {\n      return this.options.selectionFilter;\n    }\n    const filterIsChanged = this.options.selectionFilter !== value && JSON.stringify(this.options.selectionFilter) !== JSON.stringify(value);\n    this.options.selectionFilter = value;\n    filterIsChanged && this.onSelectionChanged();\n  }\n  setSelection(keys, updatedKeys) {\n    return this.selectedItemKeys(keys, false, false, false, updatedKeys);\n  }\n  select(keys) {\n    return this.selectedItemKeys(keys, true);\n  }\n  deselect(keys) {\n    return this.selectedItemKeys(keys, true, true);\n  }\n  selectedItemKeys(keys, preserve, isDeselect, isSelectAll, updatedKeys) {\n    keys = keys ?? [];\n    keys = Array.isArray(keys) ? keys : [keys];\n    this.validate();\n    return this._selectionStrategy.selectedItemKeys(keys, preserve, isDeselect, isSelectAll, updatedKeys);\n  }\n  clearSelection() {\n    return this.selectedItemKeys([]);\n  }\n  _addSelectedItem(itemData, key) {\n    this._selectionStrategy.addSelectedItem(key, itemData);\n  }\n  _removeSelectedItem(key) {\n    this._selectionStrategy.removeSelectedItem(key);\n  }\n  _setSelectedItems(keys, items) {\n    this._selectionStrategy.setSelectedItems(keys, items);\n  }\n  onSelectionChanged() {\n    this._selectionStrategy.onSelectionChanged();\n  }\n  changeItemSelection(itemIndex, keys, setFocusOnly) {\n    var _this$options$allowLo, _this$options;\n    let isSelectedItemsChanged;\n    const items = this.options.plainItems();\n    const item = items[itemIndex];\n    let deferred;\n    const {\n      isVirtualPaging: isVirtualPaging\n    } = this.options;\n    const allowLoadByRange = null === (_this$options$allowLo = (_this$options = this.options).allowLoadByRange) || void 0 === _this$options$allowLo ? void 0 : _this$options$allowLo.call(_this$options);\n    const {\n      alwaysSelectByShift: alwaysSelectByShift\n    } = this.options;\n    let indexOffset;\n    let focusedItemNotInLoadedRange = false;\n    let shiftFocusedItemNotInLoadedRange = false;\n    const itemIsNotInLoadedRange = index => index >= 0 && !items.filter(it => it.loadIndex === index).length;\n    if (isVirtualPaging && isDefined(item)) {\n      if (allowLoadByRange) {\n        indexOffset = item.loadIndex - itemIndex;\n        itemIndex = item.loadIndex;\n      }\n      focusedItemNotInLoadedRange = itemIsNotInLoadedRange(this._focusedItemIndex);\n      if (isDefined(this._shiftFocusedItemIndex)) {\n        shiftFocusedItemNotInLoadedRange = itemIsNotInLoadedRange(this._shiftFocusedItemIndex);\n      }\n    }\n    if (!this.isSelectable() || !this.isDataItem(item)) {\n      return false;\n    }\n    const itemData = this.options.getItemData(item);\n    const itemKey = this.options.keyOf(itemData);\n    keys = keys || {};\n    let allowSelectByShift = keys.shift;\n    if (false === alwaysSelectByShift && allowSelectByShift) {\n      allowSelectByShift = false !== allowLoadByRange || !focusedItemNotInLoadedRange && !shiftFocusedItemNotInLoadedRange;\n    }\n    if (allowSelectByShift && \"multiple\" === this.options.mode && this._focusedItemIndex >= 0) {\n      if (allowLoadByRange && (focusedItemNotInLoadedRange || shiftFocusedItemNotInLoadedRange)) {\n        isSelectedItemsChanged = itemIndex !== this._shiftFocusedItemIndex || this._focusedItemIndex !== this._shiftFocusedItemIndex;\n        if (isSelectedItemsChanged) {\n          deferred = this.changeItemSelectionWhenShiftKeyInVirtualPaging(itemIndex);\n        }\n      } else {\n        isSelectedItemsChanged = this.changeItemSelectionWhenShiftKeyPressed(itemIndex, items, indexOffset);\n      }\n    } else if (keys.control) {\n      this._resetItemSelectionWhenShiftKeyPressed();\n      if (!setFocusOnly) {\n        const isSelected = this._selectionStrategy.isItemDataSelected(itemData);\n        if (\"single\" === this.options.mode) {\n          this.clearSelectedItems();\n        }\n        if (isSelected) {\n          this._removeSelectedItem(itemKey);\n        } else {\n          this._addSelectedItem(itemData, itemKey);\n        }\n      }\n      isSelectedItemsChanged = true;\n    } else {\n      this._resetItemSelectionWhenShiftKeyPressed();\n      const isKeysEqual = this._selectionStrategy.equalKeys(this.options.selectedItemKeys[0], itemKey);\n      if (1 !== this.options.selectedItemKeys.length || !isKeysEqual) {\n        this._setSelectedItems([itemKey], [itemData]);\n        isSelectedItemsChanged = true;\n      }\n    }\n    if (isSelectedItemsChanged) {\n      when(deferred).done(() => {\n        this._focusedItemIndex = itemIndex;\n        !setFocusOnly && this.onSelectionChanged();\n      });\n      return true;\n    }\n  }\n  isDataItem(item) {\n    return this.options.isSelectableItem(item);\n  }\n  isSelectable() {\n    return \"single\" === this.options.mode || \"multiple\" === this.options.mode;\n  }\n  isItemDataSelected(data) {\n    return this._selectionStrategy.isItemDataSelected(data, {\n      checkPending: true\n    });\n  }\n  isItemSelected(arg, options) {\n    return this._selectionStrategy.isItemKeySelected(arg, options);\n  }\n  _resetItemSelectionWhenShiftKeyPressed() {\n    delete this._shiftFocusedItemIndex;\n  }\n  _resetFocusedItemIndex() {\n    this._focusedItemIndex = -1;\n  }\n  changeItemSelectionWhenShiftKeyInVirtualPaging(loadIndex) {\n    const loadOptions = this.options.getLoadOptions(loadIndex, this._focusedItemIndex, this._shiftFocusedItemIndex);\n    const deferred = Deferred();\n    const indexOffset = loadOptions.skip;\n    this.options.load(loadOptions).done(items => {\n      this.changeItemSelectionWhenShiftKeyPressed(loadIndex, items, indexOffset);\n      deferred.resolve();\n    });\n    return deferred.promise();\n  }\n  changeItemSelectionWhenShiftKeyPressed(itemIndex, items, indexOffset) {\n    let isSelectedItemsChanged = false;\n    let itemIndexStep;\n    const indexOffsetDefined = isDefined(indexOffset);\n    let index = indexOffsetDefined ? this._focusedItemIndex - indexOffset : this._focusedItemIndex;\n    const {\n      keyOf: keyOf\n    } = this.options;\n    const focusedItem = items[index];\n    const focusedData = this.options.getItemData(focusedItem);\n    const focusedKey = keyOf(focusedData);\n    const isFocusedItemSelected = focusedItem && this.isItemDataSelected(focusedData);\n    if (!isDefined(this._shiftFocusedItemIndex)) {\n      this._shiftFocusedItemIndex = this._focusedItemIndex;\n    }\n    let data;\n    let itemKey;\n    let startIndex;\n    let endIndex;\n    if (this._shiftFocusedItemIndex !== this._focusedItemIndex) {\n      itemIndexStep = this._focusedItemIndex < this._shiftFocusedItemIndex ? 1 : -1;\n      startIndex = indexOffsetDefined ? this._focusedItemIndex - indexOffset : this._focusedItemIndex;\n      endIndex = indexOffsetDefined ? this._shiftFocusedItemIndex - indexOffset : this._shiftFocusedItemIndex;\n      for (index = startIndex; index !== endIndex; index += itemIndexStep) {\n        if (indexOffsetDefined || this.isDataItem(items[index])) {\n          itemKey = keyOf(this.options.getItemData(items[index]));\n          this._removeSelectedItem(itemKey);\n          isSelectedItemsChanged = true;\n        }\n      }\n    }\n    if (itemIndex !== this._shiftFocusedItemIndex) {\n      itemIndexStep = itemIndex < this._shiftFocusedItemIndex ? 1 : -1;\n      startIndex = indexOffsetDefined ? itemIndex - indexOffset : itemIndex;\n      endIndex = indexOffsetDefined ? this._shiftFocusedItemIndex - indexOffset : this._shiftFocusedItemIndex;\n      for (index = startIndex; index !== endIndex; index += itemIndexStep) {\n        if (indexOffsetDefined || this.isDataItem(items[index])) {\n          data = this.options.getItemData(items[index]);\n          itemKey = keyOf(data);\n          this._addSelectedItem(data, itemKey);\n          isSelectedItemsChanged = true;\n        }\n      }\n    }\n    if ((indexOffsetDefined || this.isDataItem(focusedItem)) && !isFocusedItemSelected) {\n      this._addSelectedItem(focusedData, focusedKey);\n      isSelectedItemsChanged = true;\n    }\n    return isSelectedItemsChanged;\n  }\n  clearSelectedItems() {\n    this._setSelectedItems([], []);\n  }\n  selectAll(isOnePage) {\n    this._resetFocusedItemIndex();\n    if (isOnePage) {\n      return this._selectionStrategy._onePageSelectAll(false);\n    }\n    return this.selectedItemKeys([], true, false, true);\n  }\n  deselectAll(isOnePage) {\n    this._resetFocusedItemIndex();\n    if (isOnePage) {\n      return this._selectionStrategy._onePageSelectAll(true);\n    }\n    return this.selectedItemKeys([], true, true, true);\n  }\n  getSelectAllState(visibleOnly) {\n    return this._selectionStrategy.getSelectAllState(visibleOnly);\n  }\n  loadSelectedItemsWithFilter() {\n    return this._selectionStrategy.loadSelectedItemsWithFilter();\n  }\n}","map":{"version":3,"names":["noop","Deferred","when","extend","isDefined","deferredStrategy","standardStrategy","Selection","constructor","options","_getDefaultOptions","selectedItemKeys","selectedKeys","_selectionStrategy","deferred","_focusedItemIndex","equalByReference","updateSelectedItemKeyHash","allowNullValue","mode","selectedItems","selectionFilter","maxFilterLengthInRequest","onSelectionChanged","key","keyOf","item","load","resolve","totalCount","isSelectableItem","isItemSelected","getItemData","dataFields","filter","validate","getSelectedItemKeys","getSelectedItems","value","filterIsChanged","JSON","stringify","setSelection","keys","updatedKeys","select","deselect","preserve","isDeselect","isSelectAll","Array","isArray","clearSelection","_addSelectedItem","itemData","addSelectedItem","_removeSelectedItem","removeSelectedItem","_setSelectedItems","items","setSelectedItems","changeItemSelection","itemIndex","setFocusOnly","_this$options$allowLo","_this$options","isSelectedItemsChanged","plainItems","isVirtualPaging","allowLoadByRange","call","alwaysSelectByShift","indexOffset","focusedItemNotInLoadedRange","shiftFocusedItemNotInLoadedRange","itemIsNotInLoadedRange","index","it","loadIndex","length","_shiftFocusedItemIndex","isSelectable","isDataItem","itemKey","allowSelectByShift","shift","changeItemSelectionWhenShiftKeyInVirtualPaging","changeItemSelectionWhenShiftKeyPressed","control","_resetItemSelectionWhenShiftKeyPressed","isSelected","isItemDataSelected","clearSelectedItems","isKeysEqual","equalKeys","done","data","checkPending","arg","isItemKeySelected","_resetFocusedItemIndex","loadOptions","getLoadOptions","skip","promise","itemIndexStep","indexOffsetDefined","focusedItem","focusedData","focusedKey","isFocusedItemSelected","startIndex","endIndex","selectAll","isOnePage","_onePageSelectAll","deselectAll","getSelectAllState","visibleOnly","loadSelectedItemsWithFilter"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/ui/selection/m_selection.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/ui/selection/m_selection.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    noop\r\n} from \"../../../core/utils/common\";\r\nimport {\r\n    Deferred,\r\n    when\r\n} from \"../../../core/utils/deferred\";\r\nimport {\r\n    extend\r\n} from \"../../../core/utils/extend\";\r\nimport {\r\n    isDefined\r\n} from \"../../../core/utils/type\";\r\nimport deferredStrategy from \"./m_selection.strategy.deferred\";\r\nimport standardStrategy from \"./m_selection.strategy.standard\";\r\nexport default class Selection {\r\n    constructor(options) {\r\n        this.options = extend(this._getDefaultOptions(), options, {\r\n            selectedItemKeys: options.selectedKeys || []\r\n        });\r\n        this._selectionStrategy = this.options.deferred ? new deferredStrategy(this.options) : new standardStrategy(this.options);\r\n        this._focusedItemIndex = -1;\r\n        if (!this.options.equalByReference) {\r\n            this._selectionStrategy.updateSelectedItemKeyHash(this.options.selectedItemKeys)\r\n        }\r\n    }\r\n    _getDefaultOptions() {\r\n        return {\r\n            allowNullValue: false,\r\n            deferred: false,\r\n            equalByReference: false,\r\n            mode: \"multiple\",\r\n            selectedItems: [],\r\n            selectionFilter: [],\r\n            maxFilterLengthInRequest: 0,\r\n            onSelectionChanged: noop,\r\n            key: noop,\r\n            keyOf: item => item,\r\n            load: () => Deferred().resolve([]),\r\n            totalCount: () => -1,\r\n            isSelectableItem: () => true,\r\n            isItemSelected: () => false,\r\n            getItemData: item => item,\r\n            dataFields: noop,\r\n            filter: noop\r\n        }\r\n    }\r\n    validate() {\r\n        this._selectionStrategy.validate()\r\n    }\r\n    getSelectedItemKeys() {\r\n        return this._selectionStrategy.getSelectedItemKeys()\r\n    }\r\n    getSelectedItems() {\r\n        return this._selectionStrategy.getSelectedItems()\r\n    }\r\n    selectionFilter(value) {\r\n        if (void 0 === value) {\r\n            return this.options.selectionFilter\r\n        }\r\n        const filterIsChanged = this.options.selectionFilter !== value && JSON.stringify(this.options.selectionFilter) !== JSON.stringify(value);\r\n        this.options.selectionFilter = value;\r\n        filterIsChanged && this.onSelectionChanged()\r\n    }\r\n    setSelection(keys, updatedKeys) {\r\n        return this.selectedItemKeys(keys, false, false, false, updatedKeys)\r\n    }\r\n    select(keys) {\r\n        return this.selectedItemKeys(keys, true)\r\n    }\r\n    deselect(keys) {\r\n        return this.selectedItemKeys(keys, true, true)\r\n    }\r\n    selectedItemKeys(keys, preserve, isDeselect, isSelectAll, updatedKeys) {\r\n        keys = keys ?? [];\r\n        keys = Array.isArray(keys) ? keys : [keys];\r\n        this.validate();\r\n        return this._selectionStrategy.selectedItemKeys(keys, preserve, isDeselect, isSelectAll, updatedKeys)\r\n    }\r\n    clearSelection() {\r\n        return this.selectedItemKeys([])\r\n    }\r\n    _addSelectedItem(itemData, key) {\r\n        this._selectionStrategy.addSelectedItem(key, itemData)\r\n    }\r\n    _removeSelectedItem(key) {\r\n        this._selectionStrategy.removeSelectedItem(key)\r\n    }\r\n    _setSelectedItems(keys, items) {\r\n        this._selectionStrategy.setSelectedItems(keys, items)\r\n    }\r\n    onSelectionChanged() {\r\n        this._selectionStrategy.onSelectionChanged()\r\n    }\r\n    changeItemSelection(itemIndex, keys, setFocusOnly) {\r\n        var _this$options$allowLo, _this$options;\r\n        let isSelectedItemsChanged;\r\n        const items = this.options.plainItems();\r\n        const item = items[itemIndex];\r\n        let deferred;\r\n        const {\r\n            isVirtualPaging: isVirtualPaging\r\n        } = this.options;\r\n        const allowLoadByRange = null === (_this$options$allowLo = (_this$options = this.options).allowLoadByRange) || void 0 === _this$options$allowLo ? void 0 : _this$options$allowLo.call(_this$options);\r\n        const {\r\n            alwaysSelectByShift: alwaysSelectByShift\r\n        } = this.options;\r\n        let indexOffset;\r\n        let focusedItemNotInLoadedRange = false;\r\n        let shiftFocusedItemNotInLoadedRange = false;\r\n        const itemIsNotInLoadedRange = index => index >= 0 && !items.filter((it => it.loadIndex === index)).length;\r\n        if (isVirtualPaging && isDefined(item)) {\r\n            if (allowLoadByRange) {\r\n                indexOffset = item.loadIndex - itemIndex;\r\n                itemIndex = item.loadIndex\r\n            }\r\n            focusedItemNotInLoadedRange = itemIsNotInLoadedRange(this._focusedItemIndex);\r\n            if (isDefined(this._shiftFocusedItemIndex)) {\r\n                shiftFocusedItemNotInLoadedRange = itemIsNotInLoadedRange(this._shiftFocusedItemIndex)\r\n            }\r\n        }\r\n        if (!this.isSelectable() || !this.isDataItem(item)) {\r\n            return false\r\n        }\r\n        const itemData = this.options.getItemData(item);\r\n        const itemKey = this.options.keyOf(itemData);\r\n        keys = keys || {};\r\n        let allowSelectByShift = keys.shift;\r\n        if (false === alwaysSelectByShift && allowSelectByShift) {\r\n            allowSelectByShift = false !== allowLoadByRange || !focusedItemNotInLoadedRange && !shiftFocusedItemNotInLoadedRange\r\n        }\r\n        if (allowSelectByShift && \"multiple\" === this.options.mode && this._focusedItemIndex >= 0) {\r\n            if (allowLoadByRange && (focusedItemNotInLoadedRange || shiftFocusedItemNotInLoadedRange)) {\r\n                isSelectedItemsChanged = itemIndex !== this._shiftFocusedItemIndex || this._focusedItemIndex !== this._shiftFocusedItemIndex;\r\n                if (isSelectedItemsChanged) {\r\n                    deferred = this.changeItemSelectionWhenShiftKeyInVirtualPaging(itemIndex)\r\n                }\r\n            } else {\r\n                isSelectedItemsChanged = this.changeItemSelectionWhenShiftKeyPressed(itemIndex, items, indexOffset)\r\n            }\r\n        } else if (keys.control) {\r\n            this._resetItemSelectionWhenShiftKeyPressed();\r\n            if (!setFocusOnly) {\r\n                const isSelected = this._selectionStrategy.isItemDataSelected(itemData);\r\n                if (\"single\" === this.options.mode) {\r\n                    this.clearSelectedItems()\r\n                }\r\n                if (isSelected) {\r\n                    this._removeSelectedItem(itemKey)\r\n                } else {\r\n                    this._addSelectedItem(itemData, itemKey)\r\n                }\r\n            }\r\n            isSelectedItemsChanged = true\r\n        } else {\r\n            this._resetItemSelectionWhenShiftKeyPressed();\r\n            const isKeysEqual = this._selectionStrategy.equalKeys(this.options.selectedItemKeys[0], itemKey);\r\n            if (1 !== this.options.selectedItemKeys.length || !isKeysEqual) {\r\n                this._setSelectedItems([itemKey], [itemData]);\r\n                isSelectedItemsChanged = true\r\n            }\r\n        }\r\n        if (isSelectedItemsChanged) {\r\n            when(deferred).done((() => {\r\n                this._focusedItemIndex = itemIndex;\r\n                !setFocusOnly && this.onSelectionChanged()\r\n            }));\r\n            return true\r\n        }\r\n    }\r\n    isDataItem(item) {\r\n        return this.options.isSelectableItem(item)\r\n    }\r\n    isSelectable() {\r\n        return \"single\" === this.options.mode || \"multiple\" === this.options.mode\r\n    }\r\n    isItemDataSelected(data) {\r\n        return this._selectionStrategy.isItemDataSelected(data, {\r\n            checkPending: true\r\n        })\r\n    }\r\n    isItemSelected(arg, options) {\r\n        return this._selectionStrategy.isItemKeySelected(arg, options)\r\n    }\r\n    _resetItemSelectionWhenShiftKeyPressed() {\r\n        delete this._shiftFocusedItemIndex\r\n    }\r\n    _resetFocusedItemIndex() {\r\n        this._focusedItemIndex = -1\r\n    }\r\n    changeItemSelectionWhenShiftKeyInVirtualPaging(loadIndex) {\r\n        const loadOptions = this.options.getLoadOptions(loadIndex, this._focusedItemIndex, this._shiftFocusedItemIndex);\r\n        const deferred = Deferred();\r\n        const indexOffset = loadOptions.skip;\r\n        this.options.load(loadOptions).done((items => {\r\n            this.changeItemSelectionWhenShiftKeyPressed(loadIndex, items, indexOffset);\r\n            deferred.resolve()\r\n        }));\r\n        return deferred.promise()\r\n    }\r\n    changeItemSelectionWhenShiftKeyPressed(itemIndex, items, indexOffset) {\r\n        let isSelectedItemsChanged = false;\r\n        let itemIndexStep;\r\n        const indexOffsetDefined = isDefined(indexOffset);\r\n        let index = indexOffsetDefined ? this._focusedItemIndex - indexOffset : this._focusedItemIndex;\r\n        const {\r\n            keyOf: keyOf\r\n        } = this.options;\r\n        const focusedItem = items[index];\r\n        const focusedData = this.options.getItemData(focusedItem);\r\n        const focusedKey = keyOf(focusedData);\r\n        const isFocusedItemSelected = focusedItem && this.isItemDataSelected(focusedData);\r\n        if (!isDefined(this._shiftFocusedItemIndex)) {\r\n            this._shiftFocusedItemIndex = this._focusedItemIndex\r\n        }\r\n        let data;\r\n        let itemKey;\r\n        let startIndex;\r\n        let endIndex;\r\n        if (this._shiftFocusedItemIndex !== this._focusedItemIndex) {\r\n            itemIndexStep = this._focusedItemIndex < this._shiftFocusedItemIndex ? 1 : -1;\r\n            startIndex = indexOffsetDefined ? this._focusedItemIndex - indexOffset : this._focusedItemIndex;\r\n            endIndex = indexOffsetDefined ? this._shiftFocusedItemIndex - indexOffset : this._shiftFocusedItemIndex;\r\n            for (index = startIndex; index !== endIndex; index += itemIndexStep) {\r\n                if (indexOffsetDefined || this.isDataItem(items[index])) {\r\n                    itemKey = keyOf(this.options.getItemData(items[index]));\r\n                    this._removeSelectedItem(itemKey);\r\n                    isSelectedItemsChanged = true\r\n                }\r\n            }\r\n        }\r\n        if (itemIndex !== this._shiftFocusedItemIndex) {\r\n            itemIndexStep = itemIndex < this._shiftFocusedItemIndex ? 1 : -1;\r\n            startIndex = indexOffsetDefined ? itemIndex - indexOffset : itemIndex;\r\n            endIndex = indexOffsetDefined ? this._shiftFocusedItemIndex - indexOffset : this._shiftFocusedItemIndex;\r\n            for (index = startIndex; index !== endIndex; index += itemIndexStep) {\r\n                if (indexOffsetDefined || this.isDataItem(items[index])) {\r\n                    data = this.options.getItemData(items[index]);\r\n                    itemKey = keyOf(data);\r\n                    this._addSelectedItem(data, itemKey);\r\n                    isSelectedItemsChanged = true\r\n                }\r\n            }\r\n        }\r\n        if ((indexOffsetDefined || this.isDataItem(focusedItem)) && !isFocusedItemSelected) {\r\n            this._addSelectedItem(focusedData, focusedKey);\r\n            isSelectedItemsChanged = true\r\n        }\r\n        return isSelectedItemsChanged\r\n    }\r\n    clearSelectedItems() {\r\n        this._setSelectedItems([], [])\r\n    }\r\n    selectAll(isOnePage) {\r\n        this._resetFocusedItemIndex();\r\n        if (isOnePage) {\r\n            return this._selectionStrategy._onePageSelectAll(false)\r\n        }\r\n        return this.selectedItemKeys([], true, false, true)\r\n    }\r\n    deselectAll(isOnePage) {\r\n        this._resetFocusedItemIndex();\r\n        if (isOnePage) {\r\n            return this._selectionStrategy._onePageSelectAll(true)\r\n        }\r\n        return this.selectedItemKeys([], true, true, true)\r\n    }\r\n    getSelectAllState(visibleOnly) {\r\n        return this._selectionStrategy.getSelectAllState(visibleOnly)\r\n    }\r\n    loadSelectedItemsWithFilter() {\r\n        return this._selectionStrategy.loadSelectedItemsWithFilter()\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}