{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/core/utils/m_variable_wrapper.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { logger } from \"../../../core/utils/console\";\nimport dependencyInjector from \"../../../core/utils/dependency_injector\";\nconst variableWrapper = dependencyInjector({\n  isWrapped: function () {\n    return false;\n  },\n  isWritableWrapped: function () {\n    return false;\n  },\n  wrap: function (value) {\n    return value;\n  },\n  unwrap: function (value) {\n    return value;\n  },\n  assign: function () {\n    logger.error(\"Method 'assign' should not be used for not wrapped variables. Use 'isWrapped' method for ensuring.\");\n  }\n});\nexport { variableWrapper };","map":{"version":3,"names":["logger","dependencyInjector","variableWrapper","isWrapped","isWritableWrapped","wrap","value","unwrap","assign","error"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/core/utils/m_variable_wrapper.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/core/utils/m_variable_wrapper.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    logger\r\n} from \"../../../core/utils/console\";\r\nimport dependencyInjector from \"../../../core/utils/dependency_injector\";\r\nconst variableWrapper = dependencyInjector({\r\n    isWrapped: function() {\r\n        return false\r\n    },\r\n    isWritableWrapped: function() {\r\n        return false\r\n    },\r\n    wrap: function(value) {\r\n        return value\r\n    },\r\n    unwrap: function(value) {\r\n        return value\r\n    },\r\n    assign: function() {\r\n        logger.error(\"Method 'assign' should not be used for not wrapped variables. Use 'isWrapped' method for ensuring.\")\r\n    }\r\n});\r\nexport {\r\n    variableWrapper\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,MAAM,QACH,6BAA6B;AACpC,OAAOC,kBAAkB,MAAM,yCAAyC;AACxE,MAAMC,eAAe,GAAGD,kBAAkB,CAAC;EACvCE,SAAS,EAAE,SAAAA,CAAA,EAAW;IAClB,OAAO,KAAK;EAChB,CAAC;EACDC,iBAAiB,EAAE,SAAAA,CAAA,EAAW;IAC1B,OAAO,KAAK;EAChB,CAAC;EACDC,IAAI,EAAE,SAAAA,CAASC,KAAK,EAAE;IAClB,OAAOA,KAAK;EAChB,CAAC;EACDC,MAAM,EAAE,SAAAA,CAASD,KAAK,EAAE;IACpB,OAAOA,KAAK;EAChB,CAAC;EACDE,MAAM,EAAE,SAAAA,CAAA,EAAW;IACfR,MAAM,CAACS,KAAK,CAAC,oGAAoG,CAAC;EACtH;AACJ,CAAC,CAAC;AACF,SACIP,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}