{"ast":null,"code":"/**\r\n * DevExtreme (esm/common/core/environment/init_mobile_viewport/init_mobile_viewport.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getWidth, setWidth } from \"../../../../core/utils/size\";\nimport $ from \"../../../../core/renderer\";\nimport { getWindow } from \"../../../../core/utils/window\";\nconst window = getWindow();\nimport eventsEngine from \"../../events/core/events_engine\";\nimport { extend } from \"../../../../core/utils/extend\";\nimport resizeCallbacks from \"../../../../core/utils/resize_callbacks\";\nimport { styleProp } from \"../../../../core/utils/style\";\nimport devices from \"../../../../__internal/core/m_devices\";\nimport domAdapter from \"../../../../__internal/core/m_dom_adapter\";\nimport supportUtils from \"../../../../__internal/core/utils/m_support\";\nexport const initMobileViewport = function (options) {\n  options = extend({}, options);\n  let realDevice = devices.real();\n  const allowZoom = options.allowZoom;\n  const allowPan = options.allowPan;\n  const allowSelection = \"allowSelection\" in options ? options.allowSelection : \"generic\" === realDevice.platform;\n  if (!$(\"meta[name=viewport]\").length) {\n    $(\"<meta>\").attr(\"name\", \"viewport\").appendTo(\"head\");\n  }\n  const metaVerbs = [\"width=device-width\"];\n  const msTouchVerbs = [];\n  if (allowZoom) {\n    msTouchVerbs.push(\"pinch-zoom\");\n  } else {\n    metaVerbs.push(\"initial-scale=1.0\", \"maximum-scale=1.0, user-scalable=no\");\n  }\n  if (allowPan) {\n    msTouchVerbs.push(\"pan-x\", \"pan-y\");\n  }\n  if (!allowPan && !allowZoom) {\n    $(\"html, body\").css({\n      msContentZooming: \"none\",\n      msUserSelect: \"none\",\n      overflow: \"hidden\"\n    });\n  } else {\n    $(\"html\").css(\"msOverflowStyle\", \"-ms-autohiding-scrollbar\");\n  }\n  if (!allowSelection && supportUtils.supportProp(\"userSelect\")) {\n    $(\".dx-viewport\").css(styleProp(\"userSelect\"), \"none\");\n  }\n  $(\"meta[name=viewport]\").attr(\"content\", metaVerbs.join());\n  $(\"html\").css(\"msTouchAction\", msTouchVerbs.join(\" \") || \"none\");\n  realDevice = devices.real();\n  if (supportUtils.touch) {\n    eventsEngine.off(domAdapter.getDocument(), \".dxInitMobileViewport\");\n    eventsEngine.on(domAdapter.getDocument(), \"dxpointermove.dxInitMobileViewport\", function (e) {\n      const count = e.pointers.length;\n      const isTouchEvent = \"touch\" === e.pointerType;\n      const zoomDisabled = !allowZoom && count > 1;\n      const panDisabled = !allowPan && 1 === count && !e.isScrollingEvent;\n      if (isTouchEvent && (zoomDisabled || panDisabled)) {\n        e.preventDefault();\n      }\n    });\n  }\n  if (realDevice.ios) {\n    const isPhoneGap = \"file:\" === domAdapter.getLocation().protocol;\n    if (!isPhoneGap) {\n      resizeCallbacks.add(function () {\n        const windowWidth = getWidth(window);\n        setWidth($(\"body\"), windowWidth);\n      });\n    }\n  }\n  if (realDevice.android) {\n    resizeCallbacks.add(function () {\n      setTimeout(function () {\n        const activeElement = domAdapter.getActiveElement();\n        activeElement.scrollIntoViewIfNeeded ? activeElement.scrollIntoViewIfNeeded() : activeElement.scrollIntoView(false);\n      });\n    });\n  }\n};","map":{"version":3,"names":["getWidth","setWidth","$","getWindow","window","eventsEngine","extend","resizeCallbacks","styleProp","devices","domAdapter","supportUtils","initMobileViewport","options","realDevice","real","allowZoom","allowPan","allowSelection","platform","length","attr","appendTo","metaVerbs","msTouchVerbs","push","css","msContentZooming","msUserSelect","overflow","supportProp","join","touch","off","getDocument","on","e","count","pointers","isTouchEvent","pointerType","zoomDisabled","panDisabled","isScrollingEvent","preventDefault","ios","isPhoneGap","getLocation","protocol","add","windowWidth","android","setTimeout","activeElement","getActiveElement","scrollIntoViewIfNeeded","scrollIntoView"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/common/core/environment/init_mobile_viewport/init_mobile_viewport.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/common/core/environment/init_mobile_viewport/init_mobile_viewport.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getWidth,\r\n    setWidth\r\n} from \"../../../../core/utils/size\";\r\nimport $ from \"../../../../core/renderer\";\r\nimport {\r\n    getWindow\r\n} from \"../../../../core/utils/window\";\r\nconst window = getWindow();\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    extend\r\n} from \"../../../../core/utils/extend\";\r\nimport resizeCallbacks from \"../../../../core/utils/resize_callbacks\";\r\nimport {\r\n    styleProp\r\n} from \"../../../../core/utils/style\";\r\nimport devices from \"../../../../__internal/core/m_devices\";\r\nimport domAdapter from \"../../../../__internal/core/m_dom_adapter\";\r\nimport supportUtils from \"../../../../__internal/core/utils/m_support\";\r\nexport const initMobileViewport = function(options) {\r\n    options = extend({}, options);\r\n    let realDevice = devices.real();\r\n    const allowZoom = options.allowZoom;\r\n    const allowPan = options.allowPan;\r\n    const allowSelection = \"allowSelection\" in options ? options.allowSelection : \"generic\" === realDevice.platform;\r\n    if (!$(\"meta[name=viewport]\").length) {\r\n        $(\"<meta>\").attr(\"name\", \"viewport\").appendTo(\"head\")\r\n    }\r\n    const metaVerbs = [\"width=device-width\"];\r\n    const msTouchVerbs = [];\r\n    if (allowZoom) {\r\n        msTouchVerbs.push(\"pinch-zoom\")\r\n    } else {\r\n        metaVerbs.push(\"initial-scale=1.0\", \"maximum-scale=1.0, user-scalable=no\")\r\n    }\r\n    if (allowPan) {\r\n        msTouchVerbs.push(\"pan-x\", \"pan-y\")\r\n    }\r\n    if (!allowPan && !allowZoom) {\r\n        $(\"html, body\").css({\r\n            msContentZooming: \"none\",\r\n            msUserSelect: \"none\",\r\n            overflow: \"hidden\"\r\n        })\r\n    } else {\r\n        $(\"html\").css(\"msOverflowStyle\", \"-ms-autohiding-scrollbar\")\r\n    }\r\n    if (!allowSelection && supportUtils.supportProp(\"userSelect\")) {\r\n        $(\".dx-viewport\").css(styleProp(\"userSelect\"), \"none\")\r\n    }\r\n    $(\"meta[name=viewport]\").attr(\"content\", metaVerbs.join());\r\n    $(\"html\").css(\"msTouchAction\", msTouchVerbs.join(\" \") || \"none\");\r\n    realDevice = devices.real();\r\n    if (supportUtils.touch) {\r\n        eventsEngine.off(domAdapter.getDocument(), \".dxInitMobileViewport\");\r\n        eventsEngine.on(domAdapter.getDocument(), \"dxpointermove.dxInitMobileViewport\", (function(e) {\r\n            const count = e.pointers.length;\r\n            const isTouchEvent = \"touch\" === e.pointerType;\r\n            const zoomDisabled = !allowZoom && count > 1;\r\n            const panDisabled = !allowPan && 1 === count && !e.isScrollingEvent;\r\n            if (isTouchEvent && (zoomDisabled || panDisabled)) {\r\n                e.preventDefault()\r\n            }\r\n        }))\r\n    }\r\n    if (realDevice.ios) {\r\n        const isPhoneGap = \"file:\" === domAdapter.getLocation().protocol;\r\n        if (!isPhoneGap) {\r\n            resizeCallbacks.add((function() {\r\n                const windowWidth = getWidth(window);\r\n                setWidth($(\"body\"), windowWidth)\r\n            }))\r\n        }\r\n    }\r\n    if (realDevice.android) {\r\n        resizeCallbacks.add((function() {\r\n            setTimeout((function() {\r\n                const activeElement = domAdapter.getActiveElement();\r\n                activeElement.scrollIntoViewIfNeeded ? activeElement.scrollIntoViewIfNeeded() : activeElement.scrollIntoView(false)\r\n            }))\r\n        }))\r\n    }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}