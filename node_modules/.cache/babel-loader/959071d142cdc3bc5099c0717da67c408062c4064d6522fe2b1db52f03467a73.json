{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/core/m_template_manager.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { EmptyTemplate } from \"../../core/templates/empty_template\";\nimport { FunctionTemplate } from \"../../core/templates/function_template\";\nimport { noop } from \"../../core/utils/common\";\nimport { extend } from \"../../core/utils/extend\";\nimport { acquireTemplate, defaultCreateElement, findTemplates, getNormalizedTemplateArgs, suitableTemplatesByName, templateKey, validateTemplateSource } from \"../../core/utils/template_manager\";\nimport { isDefined, isFunction, isRenderer } from \"../../core/utils/type\";\nconst TEXT_NODE = 3;\nconst ANONYMOUS_TEMPLATE_NAME = \"template\";\nconst TEMPLATE_OPTIONS_NAME = \"dxTemplate\";\nconst TEMPLATE_WRAPPER_CLASS = \"dx-template-wrapper\";\nconst DX_POLYMORPH_WIDGET_TEMPLATE = new FunctionTemplate(_ref => {\n  let {\n    model: model,\n    parent: parent\n  } = _ref;\n  const widgetName = model.widget;\n  if (!widgetName) {\n    return $();\n  }\n  const widgetElement = $(\"<div>\");\n  const widgetOptions = model.options || {};\n  if (parent) {\n    parent._createComponent(widgetElement, widgetName, widgetOptions);\n  } else {\n    widgetElement[widgetName](widgetOptions);\n  }\n  return widgetElement;\n});\nexport class TemplateManager {\n  constructor(createElement, anonymousTemplateName) {\n    this._tempTemplates = [];\n    this._defaultTemplates = {};\n    this._anonymousTemplateName = anonymousTemplateName || \"template\";\n    this._createElement = createElement || defaultCreateElement;\n    this._createTemplateIfNeeded = this._createTemplateIfNeeded.bind(this);\n  }\n  static createDefaultOptions() {\n    return {\n      integrationOptions: {\n        watchMethod: function (fn, callback) {\n          let options = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};\n          if (!options.skipImmediate) {\n            callback(fn());\n          }\n          return noop;\n        },\n        templates: {\n          \"dx-polymorph-widget\": DX_POLYMORPH_WIDGET_TEMPLATE\n        },\n        useDeferUpdateForTemplates: true\n      }\n    };\n  }\n  get anonymousTemplateName() {\n    return this._anonymousTemplateName;\n  }\n  addDefaultTemplates(templates) {\n    this._defaultTemplates = extend({}, this._defaultTemplates, templates);\n  }\n  dispose() {\n    this._tempTemplates.forEach(tempTemplate => {\n      tempTemplate.template.dispose && tempTemplate.template.dispose();\n    });\n    this._tempTemplates = [];\n  }\n  extractTemplates($el) {\n    const templates = this._extractTemplates($el);\n    const anonymousTemplateMeta = this._extractAnonymousTemplate($el);\n    return {\n      templates: templates,\n      anonymousTemplateMeta: anonymousTemplateMeta\n    };\n  }\n  _extractTemplates($el) {\n    const templates = findTemplates($el, \"dxTemplate\");\n    const suitableTemplates = suitableTemplatesByName(templates);\n    templates.forEach(_ref2 => {\n      let {\n        element: element,\n        options: {\n          name: name\n        }\n      } = _ref2;\n      if (element === suitableTemplates[name]) {\n        $(element).addClass(\"dx-template-wrapper\").detach();\n      } else {\n        $(element).remove();\n      }\n    });\n    return Object.keys(suitableTemplates).map(name => ({\n      name: name,\n      template: this._createTemplate(suitableTemplates[name])\n    }));\n  }\n  _extractAnonymousTemplate($el) {\n    const $anonymousTemplate = $el.contents().detach();\n    const $notJunkTemplateContent = $anonymousTemplate.filter((_, element) => {\n      const isTextNode = 3 === element.nodeType;\n      const isEmptyText = $(element).text().trim().length < 1;\n      return !(isTextNode && isEmptyText);\n    });\n    return $notJunkTemplateContent.length > 0 ? {\n      template: this._createTemplate($anonymousTemplate),\n      name: this._anonymousTemplateName\n    } : {};\n  }\n  _createTemplateIfNeeded(templateSource) {\n    const cachedTemplate = this._tempTemplates.filter(tempTemplate => tempTemplate.source === templateKey(templateSource))[0];\n    if (cachedTemplate) {\n      return cachedTemplate.template;\n    }\n    const template = this._createTemplate(templateSource);\n    this._tempTemplates.push({\n      template: template,\n      source: templateKey(templateSource)\n    });\n    return template;\n  }\n  _createTemplate(templateSource) {\n    return this._createElement(validateTemplateSource(templateSource));\n  }\n  getTemplate(templateSource, templates, _ref3, context) {\n    let {\n      isAsyncTemplate: isAsyncTemplate,\n      skipTemplates: skipTemplates\n    } = _ref3;\n    if (!isFunction(templateSource)) {\n      return acquireTemplate(templateSource, this._createTemplateIfNeeded, templates, isAsyncTemplate, skipTemplates, this._defaultTemplates);\n    }\n    return new FunctionTemplate(options => {\n      const templateSourceResult = templateSource.apply(context, getNormalizedTemplateArgs(options));\n      if (!isDefined(templateSourceResult)) {\n        return new EmptyTemplate();\n      }\n      let dispose = false;\n      const template = acquireTemplate(templateSourceResult, templateSource => {\n        if (templateSource.nodeType || isRenderer(templateSource) && !$(templateSource).is(\"script\")) {\n          return new FunctionTemplate(() => templateSource);\n        }\n        dispose = true;\n        return this._createTemplate(templateSource);\n      }, templates, isAsyncTemplate, skipTemplates, this._defaultTemplates);\n      const result = template.render(options);\n      dispose && template.dispose && template.dispose();\n      return result;\n    });\n  }\n}\nexport default {\n  TemplateManager: TemplateManager\n};","map":{"version":3,"names":["$","EmptyTemplate","FunctionTemplate","noop","extend","acquireTemplate","defaultCreateElement","findTemplates","getNormalizedTemplateArgs","suitableTemplatesByName","templateKey","validateTemplateSource","isDefined","isFunction","isRenderer","TEXT_NODE","ANONYMOUS_TEMPLATE_NAME","TEMPLATE_OPTIONS_NAME","TEMPLATE_WRAPPER_CLASS","DX_POLYMORPH_WIDGET_TEMPLATE","_ref","model","parent","widgetName","widget","widgetElement","widgetOptions","options","_createComponent","TemplateManager","constructor","createElement","anonymousTemplateName","_tempTemplates","_defaultTemplates","_anonymousTemplateName","_createElement","_createTemplateIfNeeded","bind","createDefaultOptions","integrationOptions","watchMethod","fn","callback","arguments","length","skipImmediate","templates","useDeferUpdateForTemplates","addDefaultTemplates","dispose","forEach","tempTemplate","template","extractTemplates","$el","_extractTemplates","anonymousTemplateMeta","_extractAnonymousTemplate","suitableTemplates","_ref2","element","name","addClass","detach","remove","Object","keys","map","_createTemplate","$anonymousTemplate","contents","$notJunkTemplateContent","filter","_","isTextNode","nodeType","isEmptyText","text","trim","templateSource","cachedTemplate","source","push","getTemplate","_ref3","context","isAsyncTemplate","skipTemplates","templateSourceResult","apply","is","result","render"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/core/m_template_manager.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/core/m_template_manager.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    EmptyTemplate\r\n} from \"../../core/templates/empty_template\";\r\nimport {\r\n    FunctionTemplate\r\n} from \"../../core/templates/function_template\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    acquireTemplate,\r\n    defaultCreateElement,\r\n    findTemplates,\r\n    getNormalizedTemplateArgs,\r\n    suitableTemplatesByName,\r\n    templateKey,\r\n    validateTemplateSource\r\n} from \"../../core/utils/template_manager\";\r\nimport {\r\n    isDefined,\r\n    isFunction,\r\n    isRenderer\r\n} from \"../../core/utils/type\";\r\nconst TEXT_NODE = 3;\r\nconst ANONYMOUS_TEMPLATE_NAME = \"template\";\r\nconst TEMPLATE_OPTIONS_NAME = \"dxTemplate\";\r\nconst TEMPLATE_WRAPPER_CLASS = \"dx-template-wrapper\";\r\nconst DX_POLYMORPH_WIDGET_TEMPLATE = new FunctionTemplate((_ref => {\r\n    let {\r\n        model: model,\r\n        parent: parent\r\n    } = _ref;\r\n    const widgetName = model.widget;\r\n    if (!widgetName) {\r\n        return $()\r\n    }\r\n    const widgetElement = $(\"<div>\");\r\n    const widgetOptions = model.options || {};\r\n    if (parent) {\r\n        parent._createComponent(widgetElement, widgetName, widgetOptions)\r\n    } else {\r\n        widgetElement[widgetName](widgetOptions)\r\n    }\r\n    return widgetElement\r\n}));\r\nexport class TemplateManager {\r\n    constructor(createElement, anonymousTemplateName) {\r\n        this._tempTemplates = [];\r\n        this._defaultTemplates = {};\r\n        this._anonymousTemplateName = anonymousTemplateName || \"template\";\r\n        this._createElement = createElement || defaultCreateElement;\r\n        this._createTemplateIfNeeded = this._createTemplateIfNeeded.bind(this)\r\n    }\r\n    static createDefaultOptions() {\r\n        return {\r\n            integrationOptions: {\r\n                watchMethod: function(fn, callback) {\r\n                    let options = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};\r\n                    if (!options.skipImmediate) {\r\n                        callback(fn())\r\n                    }\r\n                    return noop\r\n                },\r\n                templates: {\r\n                    \"dx-polymorph-widget\": DX_POLYMORPH_WIDGET_TEMPLATE\r\n                },\r\n                useDeferUpdateForTemplates: true\r\n            }\r\n        }\r\n    }\r\n    get anonymousTemplateName() {\r\n        return this._anonymousTemplateName\r\n    }\r\n    addDefaultTemplates(templates) {\r\n        this._defaultTemplates = extend({}, this._defaultTemplates, templates)\r\n    }\r\n    dispose() {\r\n        this._tempTemplates.forEach((tempTemplate => {\r\n            tempTemplate.template.dispose && tempTemplate.template.dispose()\r\n        }));\r\n        this._tempTemplates = []\r\n    }\r\n    extractTemplates($el) {\r\n        const templates = this._extractTemplates($el);\r\n        const anonymousTemplateMeta = this._extractAnonymousTemplate($el);\r\n        return {\r\n            templates: templates,\r\n            anonymousTemplateMeta: anonymousTemplateMeta\r\n        }\r\n    }\r\n    _extractTemplates($el) {\r\n        const templates = findTemplates($el, \"dxTemplate\");\r\n        const suitableTemplates = suitableTemplatesByName(templates);\r\n        templates.forEach((_ref2 => {\r\n            let {\r\n                element: element,\r\n                options: {\r\n                    name: name\r\n                }\r\n            } = _ref2;\r\n            if (element === suitableTemplates[name]) {\r\n                $(element).addClass(\"dx-template-wrapper\").detach()\r\n            } else {\r\n                $(element).remove()\r\n            }\r\n        }));\r\n        return Object.keys(suitableTemplates).map((name => ({\r\n            name: name,\r\n            template: this._createTemplate(suitableTemplates[name])\r\n        })))\r\n    }\r\n    _extractAnonymousTemplate($el) {\r\n        const $anonymousTemplate = $el.contents().detach();\r\n        const $notJunkTemplateContent = $anonymousTemplate.filter(((_, element) => {\r\n            const isTextNode = 3 === element.nodeType;\r\n            const isEmptyText = $(element).text().trim().length < 1;\r\n            return !(isTextNode && isEmptyText)\r\n        }));\r\n        return $notJunkTemplateContent.length > 0 ? {\r\n            template: this._createTemplate($anonymousTemplate),\r\n            name: this._anonymousTemplateName\r\n        } : {}\r\n    }\r\n    _createTemplateIfNeeded(templateSource) {\r\n        const cachedTemplate = this._tempTemplates.filter((tempTemplate => tempTemplate.source === templateKey(templateSource)))[0];\r\n        if (cachedTemplate) {\r\n            return cachedTemplate.template\r\n        }\r\n        const template = this._createTemplate(templateSource);\r\n        this._tempTemplates.push({\r\n            template: template,\r\n            source: templateKey(templateSource)\r\n        });\r\n        return template\r\n    }\r\n    _createTemplate(templateSource) {\r\n        return this._createElement(validateTemplateSource(templateSource))\r\n    }\r\n    getTemplate(templateSource, templates, _ref3, context) {\r\n        let {\r\n            isAsyncTemplate: isAsyncTemplate,\r\n            skipTemplates: skipTemplates\r\n        } = _ref3;\r\n        if (!isFunction(templateSource)) {\r\n            return acquireTemplate(templateSource, this._createTemplateIfNeeded, templates, isAsyncTemplate, skipTemplates, this._defaultTemplates)\r\n        }\r\n        return new FunctionTemplate((options => {\r\n            const templateSourceResult = templateSource.apply(context, getNormalizedTemplateArgs(options));\r\n            if (!isDefined(templateSourceResult)) {\r\n                return new EmptyTemplate\r\n            }\r\n            let dispose = false;\r\n            const template = acquireTemplate(templateSourceResult, (templateSource => {\r\n                if (templateSource.nodeType || isRenderer(templateSource) && !$(templateSource).is(\"script\")) {\r\n                    return new FunctionTemplate((() => templateSource))\r\n                }\r\n                dispose = true;\r\n                return this._createTemplate(templateSource)\r\n            }), templates, isAsyncTemplate, skipTemplates, this._defaultTemplates);\r\n            const result = template.render(options);\r\n            dispose && template.dispose && template.dispose();\r\n            return result\r\n        }))\r\n    }\r\n}\r\nexport default {\r\n    TemplateManager: TemplateManager\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}