{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/ui/date_box/m_date_view_roller.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { fx } from \"../../../common/core/animation\";\nimport { resetPosition } from \"../../../common/core/animation/translator\";\nimport { name as clickEventName } from \"../../../common/core/events/click\";\nimport eventsEngine from \"../../../common/core/events/core/events_engine\";\nimport { addNamespace } from \"../../../common/core/events/utils/index\";\nimport registerComponent from \"../../../core/component_registrator\";\nimport devices from \"../../../core/devices\";\nimport $ from \"../../../core/renderer\";\nimport { each } from \"../../../core/utils/iterator\";\nimport { getHeight } from \"../../../core/utils/size\";\nimport { convertToLocation } from \"../../ui/scroll_view/utils/convert_location\";\nimport Scrollable from \"../scroll_view/m_scrollable\";\nconst DATEVIEW_ROLLER_CLASS = \"dx-dateviewroller\";\nconst DATEVIEW_ROLLER_ACTIVE_CLASS = \"dx-state-active\";\nconst DATEVIEW_ROLLER_CURRENT_CLASS = \"dx-dateviewroller-current\";\nconst DATEVIEW_ROLLER_ITEM_CLASS = \"dx-dateview-item\";\nconst DATEVIEW_ROLLER_ITEM_SELECTED_CLASS = \"dx-dateview-item-selected\";\nconst DATEVIEW_ROLLER_ITEM_SELECTED_FRAME_CLASS = \"dx-dateview-item-selected-frame\";\nconst DATEVIEW_ROLLER_ITEM_SELECTED_BORDER_CLASS = \"dx-dateview-item-selected-border\";\nclass DateViewRoller extends Scrollable {\n  _getDefaultOptions() {\n    return _extends({}, super._getDefaultOptions(), {\n      showScrollbar: \"never\",\n      useNative: false,\n      selectedIndex: 0,\n      bounceEnabled: false,\n      items: [],\n      showOnClick: false,\n      onClick: null,\n      onSelectedIndexChanged: null,\n      scrollByContent: true\n    });\n  }\n  _init() {\n    super._init();\n    this.option(\"onVisibilityChange\", this._visibilityChangedHandler.bind(this));\n    this.option(\"onEnd\", this._endActionHandler.bind(this));\n  }\n  _render() {\n    super._render();\n    this._renderSelectedItemFrame();\n    this.$element().addClass(\"dx-dateviewroller\");\n    this._renderContainerClick();\n    this._renderItems();\n    this._renderSelectedValue();\n    this._renderItemsClick();\n    this._renderWheelEvent();\n    this._renderSelectedIndexChanged();\n  }\n  _renderSelectedIndexChanged() {\n    this._selectedIndexChanged = this._createActionByOption(\"onSelectedIndexChanged\");\n  }\n  _renderWheelEvent() {\n    eventsEngine.on($(this.container()), \"dxmousewheel\", e => {\n      this._isWheelScrolled = true;\n    });\n  }\n  _renderContainerClick() {\n    if (!this.option(\"showOnClick\")) {\n      return;\n    }\n    const eventName = addNamespace(clickEventName, this.NAME);\n    const clickAction = this._createActionByOption(\"onClick\");\n    eventsEngine.off($(this.container()), eventName);\n    eventsEngine.on($(this.container()), eventName, e => {\n      clickAction({\n        event: e\n      });\n    });\n  }\n  _renderItems() {\n    const items = this.option(\"items\") || [];\n    let $items = $();\n    $(this.content()).empty();\n    items.forEach(item => {\n      $items = $items.add($(\"<div>\").addClass(\"dx-dateview-item\").append(item));\n    });\n    $(this.content()).append($items);\n    this._$items = $items;\n    this.update();\n  }\n  _renderSelectedItemFrame() {\n    $(\"<div>\").addClass(\"dx-dateview-item-selected-frame\").append($(\"<div>\").addClass(\"dx-dateview-item-selected-border\")).appendTo($(this.container()));\n  }\n  _renderSelectedValue(selectedIndex) {\n    const index = this._fitIndex(selectedIndex ?? this.option(\"selectedIndex\"));\n    this._moveTo({\n      top: this._getItemPosition(index)\n    });\n    this._renderActiveStateItem();\n  }\n  _fitIndex(index) {\n    const items = this.option(\"items\") || [];\n    const itemCount = items.length;\n    if (index >= itemCount) {\n      return itemCount - 1;\n    }\n    if (index < 0) {\n      return 0;\n    }\n    return index;\n  }\n  _getItemPosition(index) {\n    return Math.round(this._itemHeight() * index);\n  }\n  _renderItemsClick() {\n    const itemSelector = this._getItemSelector();\n    const eventName = addNamespace(clickEventName, this.NAME);\n    eventsEngine.off(this.$element(), eventName, itemSelector);\n    eventsEngine.on(this.$element(), eventName, itemSelector, this._itemClickHandler.bind(this));\n  }\n  _getItemSelector() {\n    return \".dx-dateview-item\";\n  }\n  _itemClickHandler(e) {\n    this.option(\"selectedIndex\", this._itemElementIndex(e.currentTarget));\n  }\n  _itemElementIndex(itemElement) {\n    return this._itemElements().index(itemElement);\n  }\n  _itemElements() {\n    return this.$element().find(this._getItemSelector());\n  }\n  _renderActiveStateItem() {\n    const selectedIndex = this.option(\"selectedIndex\");\n    each(this._$items, function (index) {\n      $(this).toggleClass(\"dx-dateview-item-selected\", selectedIndex === index);\n    });\n  }\n  _shouldScrollToNeighborItem() {\n    return \"desktop\" === devices.real().deviceType && this._isWheelScrolled;\n  }\n  _moveTo(targetLocation) {\n    const {\n      top: top,\n      left: left\n    } = convertToLocation(targetLocation);\n    const location = this.scrollOffset();\n    const delta = {\n      x: location.left - left,\n      y: location.top - top\n    };\n    if (this._isVisible() && (delta.x || delta.y)) {\n      this._prepareDirections(true);\n      if (this._animation && !this._shouldScrollToNeighborItem()) {\n        const that = this;\n        fx.stop($(this.content()));\n        fx.animate($(this.content()), {\n          duration: 200,\n          type: \"slide\",\n          to: {\n            top: Math.floor(delta.y)\n          },\n          complete() {\n            resetPosition($(that.content()));\n            that.handleMove({\n              delta: delta\n            });\n          }\n        });\n        delete this._animation;\n      } else {\n        this.handleMove({\n          delta: delta\n        });\n      }\n    }\n  }\n  _validate(e) {\n    return this._moveIsAllowed(e);\n  }\n  _fitSelectedIndexInRange(index) {\n    const itemsCount = this.option(\"items\").length;\n    return Math.max(Math.min(index, itemsCount - 1), 0);\n  }\n  _isInNullNeighborhood(x) {\n    return -.1 <= x && x <= .1;\n  }\n  _getSelectedIndexAfterScroll(currentSelectedIndex) {\n    const locationTop = this.scrollOffset().top;\n    const currentSelectedIndexPosition = currentSelectedIndex * this._itemHeight();\n    const dy = locationTop - currentSelectedIndexPosition;\n    if (this._isInNullNeighborhood(dy)) {\n      return currentSelectedIndex;\n    }\n    const direction = dy > 0 ? 1 : -1;\n    const newSelectedIndex = this._fitSelectedIndexInRange(currentSelectedIndex + direction);\n    return newSelectedIndex;\n  }\n  _getNewSelectedIndex(currentSelectedIndex) {\n    if (this._shouldScrollToNeighborItem()) {\n      return this._getSelectedIndexAfterScroll(currentSelectedIndex);\n    }\n    this._animation = true;\n    const ratio = this.scrollOffset().top / this._itemHeight();\n    return Math.round(ratio);\n  }\n  _endActionHandler() {\n    const currentSelectedIndex = this.option(\"selectedIndex\");\n    const newSelectedIndex = this._getNewSelectedIndex(currentSelectedIndex);\n    if (newSelectedIndex === currentSelectedIndex) {\n      this._renderSelectedValue(newSelectedIndex);\n    } else {\n      this.option(\"selectedIndex\", newSelectedIndex);\n    }\n    this._isWheelScrolled = false;\n  }\n  _itemHeight() {\n    const $item = this._$items.first();\n    return getHeight($item);\n  }\n  _toggleActive(state) {\n    this.$element().toggleClass(\"dx-state-active\", state);\n  }\n  _isVisible() {\n    return $(this.container()).is(\":visible\");\n  }\n  _fireSelectedIndexChanged(value, previousValue) {\n    var _this$_selectedIndexC;\n    null === (_this$_selectedIndexC = this._selectedIndexChanged) || void 0 === _this$_selectedIndexC || _this$_selectedIndexC.call(this, {\n      value: value,\n      previousValue: previousValue,\n      event: void 0\n    });\n  }\n  _visibilityChanged(visible) {\n    super._visibilityChanged(visible);\n    this._visibilityChangedHandler(visible);\n  }\n  _visibilityChangedHandler(visible) {\n    if (visible) {\n      this._visibilityTimer = setTimeout(() => {\n        this._renderSelectedValue(this.option(\"selectedIndex\"));\n      });\n    }\n    this.toggleActiveState(false);\n  }\n  toggleActiveState(state) {\n    this.$element().toggleClass(\"dx-dateviewroller-current\", state);\n  }\n  _refreshSelectedIndex() {\n    const selectedIndex = this.option(\"selectedIndex\");\n    const fitIndex = this._fitIndex(selectedIndex);\n    if (fitIndex === selectedIndex) {\n      this._renderActiveStateItem();\n    } else {\n      this.option(\"selectedIndex\", fitIndex);\n    }\n  }\n  _optionChanged(args) {\n    switch (args.name) {\n      case \"selectedIndex\":\n        this._fireSelectedIndexChanged(args.value, args.previousValue);\n        this._renderSelectedValue(args.value);\n        break;\n      case \"items\":\n        this._renderItems();\n        this._refreshSelectedIndex();\n        break;\n      case \"onClick\":\n      case \"showOnClick\":\n        this._renderContainerClick();\n        break;\n      case \"onSelectedIndexChanged\":\n        this._renderSelectedIndexChanged();\n        break;\n      default:\n        super._optionChanged(args);\n    }\n  }\n  _dispose() {\n    clearTimeout(this._visibilityTimer);\n    super._dispose();\n  }\n}\nregisterComponent(\"dxDateViewRoller\", DateViewRoller);\nexport default DateViewRoller;","map":{"version":3,"names":["_extends","fx","resetPosition","name","clickEventName","eventsEngine","addNamespace","registerComponent","devices","$","each","getHeight","convertToLocation","Scrollable","DATEVIEW_ROLLER_CLASS","DATEVIEW_ROLLER_ACTIVE_CLASS","DATEVIEW_ROLLER_CURRENT_CLASS","DATEVIEW_ROLLER_ITEM_CLASS","DATEVIEW_ROLLER_ITEM_SELECTED_CLASS","DATEVIEW_ROLLER_ITEM_SELECTED_FRAME_CLASS","DATEVIEW_ROLLER_ITEM_SELECTED_BORDER_CLASS","DateViewRoller","_getDefaultOptions","showScrollbar","useNative","selectedIndex","bounceEnabled","items","showOnClick","onClick","onSelectedIndexChanged","scrollByContent","_init","option","_visibilityChangedHandler","bind","_endActionHandler","_render","_renderSelectedItemFrame","$element","addClass","_renderContainerClick","_renderItems","_renderSelectedValue","_renderItemsClick","_renderWheelEvent","_renderSelectedIndexChanged","_selectedIndexChanged","_createActionByOption","on","container","e","_isWheelScrolled","eventName","NAME","clickAction","off","event","$items","content","empty","forEach","item","add","append","_$items","update","appendTo","index","_fitIndex","_moveTo","top","_getItemPosition","_renderActiveStateItem","itemCount","length","Math","round","_itemHeight","itemSelector","_getItemSelector","_itemClickHandler","_itemElementIndex","currentTarget","itemElement","_itemElements","find","toggleClass","_shouldScrollToNeighborItem","real","deviceType","targetLocation","left","location","scrollOffset","delta","x","y","_isVisible","_prepareDirections","_animation","that","stop","animate","duration","type","to","floor","complete","handleMove","_validate","_moveIsAllowed","_fitSelectedIndexInRange","itemsCount","max","min","_isInNullNeighborhood","_getSelectedIndexAfterScroll","currentSelectedIndex","locationTop","currentSelectedIndexPosition","dy","direction","newSelectedIndex","_getNewSelectedIndex","ratio","$item","first","_toggleActive","state","is","_fireSelectedIndexChanged","value","previousValue","_this$_selectedIndexC","call","_visibilityChanged","visible","_visibilityTimer","setTimeout","toggleActiveState","_refreshSelectedIndex","fitIndex","_optionChanged","args","_dispose","clearTimeout"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/ui/date_box/m_date_view_roller.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/ui/date_box/m_date_view_roller.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    fx\r\n} from \"../../../common/core/animation\";\r\nimport {\r\n    resetPosition\r\n} from \"../../../common/core/animation/translator\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../../common/core/events/click\";\r\nimport eventsEngine from \"../../../common/core/events/core/events_engine\";\r\nimport {\r\n    addNamespace\r\n} from \"../../../common/core/events/utils/index\";\r\nimport registerComponent from \"../../../core/component_registrator\";\r\nimport devices from \"../../../core/devices\";\r\nimport $ from \"../../../core/renderer\";\r\nimport {\r\n    each\r\n} from \"../../../core/utils/iterator\";\r\nimport {\r\n    getHeight\r\n} from \"../../../core/utils/size\";\r\nimport {\r\n    convertToLocation\r\n} from \"../../ui/scroll_view/utils/convert_location\";\r\nimport Scrollable from \"../scroll_view/m_scrollable\";\r\nconst DATEVIEW_ROLLER_CLASS = \"dx-dateviewroller\";\r\nconst DATEVIEW_ROLLER_ACTIVE_CLASS = \"dx-state-active\";\r\nconst DATEVIEW_ROLLER_CURRENT_CLASS = \"dx-dateviewroller-current\";\r\nconst DATEVIEW_ROLLER_ITEM_CLASS = \"dx-dateview-item\";\r\nconst DATEVIEW_ROLLER_ITEM_SELECTED_CLASS = \"dx-dateview-item-selected\";\r\nconst DATEVIEW_ROLLER_ITEM_SELECTED_FRAME_CLASS = \"dx-dateview-item-selected-frame\";\r\nconst DATEVIEW_ROLLER_ITEM_SELECTED_BORDER_CLASS = \"dx-dateview-item-selected-border\";\r\nclass DateViewRoller extends Scrollable {\r\n    _getDefaultOptions() {\r\n        return _extends({}, super._getDefaultOptions(), {\r\n            showScrollbar: \"never\",\r\n            useNative: false,\r\n            selectedIndex: 0,\r\n            bounceEnabled: false,\r\n            items: [],\r\n            showOnClick: false,\r\n            onClick: null,\r\n            onSelectedIndexChanged: null,\r\n            scrollByContent: true\r\n        })\r\n    }\r\n    _init() {\r\n        super._init();\r\n        this.option(\"onVisibilityChange\", this._visibilityChangedHandler.bind(this));\r\n        this.option(\"onEnd\", this._endActionHandler.bind(this))\r\n    }\r\n    _render() {\r\n        super._render();\r\n        this._renderSelectedItemFrame();\r\n        this.$element().addClass(\"dx-dateviewroller\");\r\n        this._renderContainerClick();\r\n        this._renderItems();\r\n        this._renderSelectedValue();\r\n        this._renderItemsClick();\r\n        this._renderWheelEvent();\r\n        this._renderSelectedIndexChanged()\r\n    }\r\n    _renderSelectedIndexChanged() {\r\n        this._selectedIndexChanged = this._createActionByOption(\"onSelectedIndexChanged\")\r\n    }\r\n    _renderWheelEvent() {\r\n        eventsEngine.on($(this.container()), \"dxmousewheel\", (e => {\r\n            this._isWheelScrolled = true\r\n        }))\r\n    }\r\n    _renderContainerClick() {\r\n        if (!this.option(\"showOnClick\")) {\r\n            return\r\n        }\r\n        const eventName = addNamespace(clickEventName, this.NAME);\r\n        const clickAction = this._createActionByOption(\"onClick\");\r\n        eventsEngine.off($(this.container()), eventName);\r\n        eventsEngine.on($(this.container()), eventName, (e => {\r\n            clickAction({\r\n                event: e\r\n            })\r\n        }))\r\n    }\r\n    _renderItems() {\r\n        const items = this.option(\"items\") || [];\r\n        let $items = $();\r\n        $(this.content()).empty();\r\n        items.forEach((item => {\r\n            $items = $items.add($(\"<div>\").addClass(\"dx-dateview-item\").append(item))\r\n        }));\r\n        $(this.content()).append($items);\r\n        this._$items = $items;\r\n        this.update()\r\n    }\r\n    _renderSelectedItemFrame() {\r\n        $(\"<div>\").addClass(\"dx-dateview-item-selected-frame\").append($(\"<div>\").addClass(\"dx-dateview-item-selected-border\")).appendTo($(this.container()))\r\n    }\r\n    _renderSelectedValue(selectedIndex) {\r\n        const index = this._fitIndex(selectedIndex ?? this.option(\"selectedIndex\"));\r\n        this._moveTo({\r\n            top: this._getItemPosition(index)\r\n        });\r\n        this._renderActiveStateItem()\r\n    }\r\n    _fitIndex(index) {\r\n        const items = this.option(\"items\") || [];\r\n        const itemCount = items.length;\r\n        if (index >= itemCount) {\r\n            return itemCount - 1\r\n        }\r\n        if (index < 0) {\r\n            return 0\r\n        }\r\n        return index\r\n    }\r\n    _getItemPosition(index) {\r\n        return Math.round(this._itemHeight() * index)\r\n    }\r\n    _renderItemsClick() {\r\n        const itemSelector = this._getItemSelector();\r\n        const eventName = addNamespace(clickEventName, this.NAME);\r\n        eventsEngine.off(this.$element(), eventName, itemSelector);\r\n        eventsEngine.on(this.$element(), eventName, itemSelector, this._itemClickHandler.bind(this))\r\n    }\r\n    _getItemSelector() {\r\n        return \".dx-dateview-item\"\r\n    }\r\n    _itemClickHandler(e) {\r\n        this.option(\"selectedIndex\", this._itemElementIndex(e.currentTarget))\r\n    }\r\n    _itemElementIndex(itemElement) {\r\n        return this._itemElements().index(itemElement)\r\n    }\r\n    _itemElements() {\r\n        return this.$element().find(this._getItemSelector())\r\n    }\r\n    _renderActiveStateItem() {\r\n        const selectedIndex = this.option(\"selectedIndex\");\r\n        each(this._$items, (function(index) {\r\n            $(this).toggleClass(\"dx-dateview-item-selected\", selectedIndex === index)\r\n        }))\r\n    }\r\n    _shouldScrollToNeighborItem() {\r\n        return \"desktop\" === devices.real().deviceType && this._isWheelScrolled\r\n    }\r\n    _moveTo(targetLocation) {\r\n        const {\r\n            top: top,\r\n            left: left\r\n        } = convertToLocation(targetLocation);\r\n        const location = this.scrollOffset();\r\n        const delta = {\r\n            x: location.left - left,\r\n            y: location.top - top\r\n        };\r\n        if (this._isVisible() && (delta.x || delta.y)) {\r\n            this._prepareDirections(true);\r\n            if (this._animation && !this._shouldScrollToNeighborItem()) {\r\n                const that = this;\r\n                fx.stop($(this.content()));\r\n                fx.animate($(this.content()), {\r\n                    duration: 200,\r\n                    type: \"slide\",\r\n                    to: {\r\n                        top: Math.floor(delta.y)\r\n                    },\r\n                    complete() {\r\n                        resetPosition($(that.content()));\r\n                        that.handleMove({\r\n                            delta: delta\r\n                        })\r\n                    }\r\n                });\r\n                delete this._animation\r\n            } else {\r\n                this.handleMove({\r\n                    delta: delta\r\n                })\r\n            }\r\n        }\r\n    }\r\n    _validate(e) {\r\n        return this._moveIsAllowed(e)\r\n    }\r\n    _fitSelectedIndexInRange(index) {\r\n        const itemsCount = this.option(\"items\").length;\r\n        return Math.max(Math.min(index, itemsCount - 1), 0)\r\n    }\r\n    _isInNullNeighborhood(x) {\r\n        return -.1 <= x && x <= .1\r\n    }\r\n    _getSelectedIndexAfterScroll(currentSelectedIndex) {\r\n        const locationTop = this.scrollOffset().top;\r\n        const currentSelectedIndexPosition = currentSelectedIndex * this._itemHeight();\r\n        const dy = locationTop - currentSelectedIndexPosition;\r\n        if (this._isInNullNeighborhood(dy)) {\r\n            return currentSelectedIndex\r\n        }\r\n        const direction = dy > 0 ? 1 : -1;\r\n        const newSelectedIndex = this._fitSelectedIndexInRange(currentSelectedIndex + direction);\r\n        return newSelectedIndex\r\n    }\r\n    _getNewSelectedIndex(currentSelectedIndex) {\r\n        if (this._shouldScrollToNeighborItem()) {\r\n            return this._getSelectedIndexAfterScroll(currentSelectedIndex)\r\n        }\r\n        this._animation = true;\r\n        const ratio = this.scrollOffset().top / this._itemHeight();\r\n        return Math.round(ratio)\r\n    }\r\n    _endActionHandler() {\r\n        const currentSelectedIndex = this.option(\"selectedIndex\");\r\n        const newSelectedIndex = this._getNewSelectedIndex(currentSelectedIndex);\r\n        if (newSelectedIndex === currentSelectedIndex) {\r\n            this._renderSelectedValue(newSelectedIndex)\r\n        } else {\r\n            this.option(\"selectedIndex\", newSelectedIndex)\r\n        }\r\n        this._isWheelScrolled = false\r\n    }\r\n    _itemHeight() {\r\n        const $item = this._$items.first();\r\n        return getHeight($item)\r\n    }\r\n    _toggleActive(state) {\r\n        this.$element().toggleClass(\"dx-state-active\", state)\r\n    }\r\n    _isVisible() {\r\n        return $(this.container()).is(\":visible\")\r\n    }\r\n    _fireSelectedIndexChanged(value, previousValue) {\r\n        var _this$_selectedIndexC;\r\n        null === (_this$_selectedIndexC = this._selectedIndexChanged) || void 0 === _this$_selectedIndexC || _this$_selectedIndexC.call(this, {\r\n            value: value,\r\n            previousValue: previousValue,\r\n            event: void 0\r\n        })\r\n    }\r\n    _visibilityChanged(visible) {\r\n        super._visibilityChanged(visible);\r\n        this._visibilityChangedHandler(visible)\r\n    }\r\n    _visibilityChangedHandler(visible) {\r\n        if (visible) {\r\n            this._visibilityTimer = setTimeout((() => {\r\n                this._renderSelectedValue(this.option(\"selectedIndex\"))\r\n            }))\r\n        }\r\n        this.toggleActiveState(false)\r\n    }\r\n    toggleActiveState(state) {\r\n        this.$element().toggleClass(\"dx-dateviewroller-current\", state)\r\n    }\r\n    _refreshSelectedIndex() {\r\n        const selectedIndex = this.option(\"selectedIndex\");\r\n        const fitIndex = this._fitIndex(selectedIndex);\r\n        if (fitIndex === selectedIndex) {\r\n            this._renderActiveStateItem()\r\n        } else {\r\n            this.option(\"selectedIndex\", fitIndex)\r\n        }\r\n    }\r\n    _optionChanged(args) {\r\n        switch (args.name) {\r\n            case \"selectedIndex\":\r\n                this._fireSelectedIndexChanged(args.value, args.previousValue);\r\n                this._renderSelectedValue(args.value);\r\n                break;\r\n            case \"items\":\r\n                this._renderItems();\r\n                this._refreshSelectedIndex();\r\n                break;\r\n            case \"onClick\":\r\n            case \"showOnClick\":\r\n                this._renderContainerClick();\r\n                break;\r\n            case \"onSelectedIndexChanged\":\r\n                this._renderSelectedIndexChanged();\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    _dispose() {\r\n        clearTimeout(this._visibilityTimer);\r\n        super._dispose()\r\n    }\r\n}\r\nregisterComponent(\"dxDateViewRoller\", DateViewRoller);\r\nexport default DateViewRoller;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}