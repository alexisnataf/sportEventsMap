{"ast":null,"code":"/*!\n * devextreme-react\n * Version: 24.2.7\n * Build date: Mon Apr 28 2025\n *\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n'use client';\n\nimport { memo, useContext, useLayoutEffect } from 'react';\nimport { NestedOptionContext, TemplateRenderingContext } from './contexts';\nimport { getNamedTemplate } from './configuration/react/templates';\nconst Template = memo(props => {\n  const {\n    onNamedTemplateReady,\n    treeUpdateToken\n  } = useContext(NestedOptionContext);\n  const {\n    isTemplateRendering\n  } = useContext(TemplateRenderingContext);\n  const template = getNamedTemplate(props);\n  useLayoutEffect(() => {\n    if (!isTemplateRendering) {\n      onNamedTemplateReady(template, treeUpdateToken);\n    }\n  }, [treeUpdateToken]);\n  return null;\n});\nfunction findProps(child) {\n  if (child.type !== Template) {\n    return undefined;\n  }\n  return {\n    name: child.props.name,\n    render: child.props.render,\n    component: child.props.component,\n    children: child.props.children\n  };\n}\nexport { Template, findProps };","map":{"version":3,"names":["memo","useContext","useLayoutEffect","NestedOptionContext","TemplateRenderingContext","getNamedTemplate","Template","props","onNamedTemplateReady","treeUpdateToken","isTemplateRendering","template","findProps","child","type","undefined","name","render","component","children"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme-react/esm/core/template.js"],"sourcesContent":["/*!\n * devextreme-react\n * Version: 24.2.7\n * Build date: Mon Apr 28 2025\n *\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n'use client';\nimport { memo, useContext, useLayoutEffect } from 'react';\nimport { NestedOptionContext, TemplateRenderingContext } from './contexts';\nimport { getNamedTemplate } from './configuration/react/templates';\nconst Template = memo((props) => {\n    const { onNamedTemplateReady, treeUpdateToken, } = useContext(NestedOptionContext);\n    const { isTemplateRendering } = useContext(TemplateRenderingContext);\n    const template = getNamedTemplate(props);\n    useLayoutEffect(() => {\n        if (!isTemplateRendering) {\n            onNamedTemplateReady(template, treeUpdateToken);\n        }\n    }, [treeUpdateToken]);\n    return null;\n});\nfunction findProps(child) {\n    if (child.type !== Template) {\n        return undefined;\n    }\n    return {\n        name: child.props.name,\n        render: child.props.render,\n        component: child.props.component,\n        children: child.props.children,\n    };\n}\nexport { Template, findProps, };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AACZ,SAASA,IAAI,EAAEC,UAAU,EAAEC,eAAe,QAAQ,OAAO;AACzD,SAASC,mBAAmB,EAAEC,wBAAwB,QAAQ,YAAY;AAC1E,SAASC,gBAAgB,QAAQ,iCAAiC;AAClE,MAAMC,QAAQ,GAAGN,IAAI,CAAEO,KAAK,IAAK;EAC7B,MAAM;IAAEC,oBAAoB;IAAEC;EAAiB,CAAC,GAAGR,UAAU,CAACE,mBAAmB,CAAC;EAClF,MAAM;IAAEO;EAAoB,CAAC,GAAGT,UAAU,CAACG,wBAAwB,CAAC;EACpE,MAAMO,QAAQ,GAAGN,gBAAgB,CAACE,KAAK,CAAC;EACxCL,eAAe,CAAC,MAAM;IAClB,IAAI,CAACQ,mBAAmB,EAAE;MACtBF,oBAAoB,CAACG,QAAQ,EAAEF,eAAe,CAAC;IACnD;EACJ,CAAC,EAAE,CAACA,eAAe,CAAC,CAAC;EACrB,OAAO,IAAI;AACf,CAAC,CAAC;AACF,SAASG,SAASA,CAACC,KAAK,EAAE;EACtB,IAAIA,KAAK,CAACC,IAAI,KAAKR,QAAQ,EAAE;IACzB,OAAOS,SAAS;EACpB;EACA,OAAO;IACHC,IAAI,EAAEH,KAAK,CAACN,KAAK,CAACS,IAAI;IACtBC,MAAM,EAAEJ,KAAK,CAACN,KAAK,CAACU,MAAM;IAC1BC,SAAS,EAAEL,KAAK,CAACN,KAAK,CAACW,SAAS;IAChCC,QAAQ,EAAEN,KAAK,CAACN,KAAK,CAACY;EAC1B,CAAC;AACL;AACA,SAASb,QAAQ,EAAEM,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}