{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/themes.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getOuterHeight } from \"../core/utils/size\";\nimport devices from \"../core/devices\";\nimport domAdapter from \"../core/dom_adapter\";\nimport $ from \"../core/renderer\";\nimport { Deferred, when } from \"../core/utils/deferred\";\nimport { parseHTML } from \"../core/utils/html_parser\";\nimport { each } from \"../core/utils/iterator\";\nimport readyCallbacks from \"../core/utils/ready_callbacks\";\nimport { value as viewPortValue, changeCallback, originalViewPort } from \"../core/utils/view_port\";\nimport { getWindow, hasWindow } from \"../core/utils/window\";\nimport { themeReadyCallback } from \"./themes_callback\";\nimport { uiLayerInitialized } from \"../__internal/core/utils/m_common\";\nimport errors from \"./widget/ui.errors\";\nconst window = getWindow();\nconst ready = readyCallbacks.add;\nconst viewPort = viewPortValue;\nconst viewPortChanged = changeCallback;\nlet initDeferred = new Deferred();\nconst DX_LINK_SELECTOR = \"link[rel=dx-theme]\";\nconst THEME_ATTR = \"data-theme\";\nconst ACTIVE_ATTR = \"data-active\";\nconst DX_HAIRLINES_CLASS = \"dx-hairlines\";\nconst ANY_THEME = \"any\";\nlet context;\nlet $activeThemeLink;\nlet knownThemes;\nlet currentThemeName;\nlet pendingThemeName;\nlet defaultTimeout = 15e3;\nconst THEME_MARKER_PREFIX = \"dx.\";\nfunction readThemeMarker() {\n  if (!hasWindow()) {\n    return null;\n  }\n  const element = $(\"<div>\", context).addClass(\"dx-theme-marker\").appendTo(context.documentElement);\n  let result;\n  try {\n    result = window.getComputedStyle(element.get(0)).fontFamily;\n    if (!result) {\n      return null;\n    }\n    result = result.replace(/[\"']/g, \"\");\n    if (\"dx.\" !== result.substr(0, 3)) {\n      return null;\n    }\n    return result.substr(3);\n  } finally {\n    element.remove();\n  }\n}\nexport function waitForThemeLoad(themeName) {\n  let waitStartTime;\n  let timerId;\n  let intervalCleared = true;\n  pendingThemeName = themeName;\n  function handleLoaded() {\n    pendingThemeName = null;\n    clearInterval(timerId);\n    intervalCleared = true;\n    themeReadyCallback.fire();\n    themeReadyCallback.empty();\n    initDeferred.resolve();\n  }\n  if (isPendingThemeLoaded() || !defaultTimeout) {\n    handleLoaded();\n  } else {\n    if (!intervalCleared) {\n      if (pendingThemeName) {\n        pendingThemeName = themeName;\n      }\n      return;\n    }\n    waitStartTime = Date.now();\n    intervalCleared = false;\n    timerId = setInterval(function () {\n      const isLoaded = isPendingThemeLoaded();\n      const isTimeout = !isLoaded && Date.now() - waitStartTime > defaultTimeout;\n      if (isTimeout) {\n        errors.log(\"W0004\", pendingThemeName);\n      }\n      if (isLoaded || isTimeout) {\n        handleLoaded();\n      }\n    }, 10);\n  }\n}\nexport function isPendingThemeLoaded() {\n  if (!pendingThemeName) {\n    return true;\n  }\n  const anyThemePending = \"any\" === pendingThemeName;\n  if (\"resolved\" === initDeferred.state() && anyThemePending) {\n    return true;\n  }\n  const themeMarker = readThemeMarker();\n  if (themeMarker && anyThemePending) {\n    return true;\n  }\n  return themeMarker === pendingThemeName;\n}\nfunction processMarkup() {\n  const $allThemeLinks = $(DX_LINK_SELECTOR, context);\n  if (!$allThemeLinks.length) {\n    return;\n  }\n  knownThemes = {};\n  $activeThemeLink = $(parseHTML(\"<link rel=stylesheet>\"), context);\n  $allThemeLinks.each(function () {\n    const link = $(this, context);\n    const fullThemeName = link.attr(THEME_ATTR);\n    const url = link.attr(\"href\");\n    const isActive = \"true\" === link.attr(ACTIVE_ATTR);\n    knownThemes[fullThemeName] = {\n      url: url,\n      isActive: isActive\n    };\n  });\n  $allThemeLinks.last().after($activeThemeLink);\n  $allThemeLinks.remove();\n}\nfunction resolveFullThemeName(desiredThemeName) {\n  const desiredThemeParts = desiredThemeName ? desiredThemeName.split(\".\") : [];\n  let result = null;\n  if (knownThemes) {\n    if (desiredThemeName in knownThemes) {\n      return desiredThemeName;\n    }\n    each(knownThemes, function (knownThemeName, themeData) {\n      const knownThemeParts = knownThemeName.split(\".\");\n      if (desiredThemeParts[0] && knownThemeParts[0] !== desiredThemeParts[0]) {\n        return;\n      }\n      if (desiredThemeParts[1] && desiredThemeParts[1] !== knownThemeParts[1]) {\n        return;\n      }\n      if (desiredThemeParts[2] && desiredThemeParts[2] !== knownThemeParts[2]) {\n        return;\n      }\n      if (!result || themeData.isActive) {\n        result = knownThemeName;\n      }\n      if (themeData.isActive) {\n        return false;\n      }\n    });\n  }\n  return result;\n}\nfunction initContext(newContext) {\n  try {\n    if (newContext !== context) {\n      knownThemes = null;\n    }\n  } catch (x) {\n    knownThemes = null;\n  }\n  context = newContext;\n}\nexport function init(options) {\n  options = options || {};\n  initContext(options.context || domAdapter.getDocument());\n  if (!context) {\n    return;\n  }\n  processMarkup();\n  currentThemeName = void 0;\n  current(options);\n}\nexport function current(options) {\n  if (!arguments.length) {\n    currentThemeName = currentThemeName || readThemeMarker();\n    return currentThemeName;\n  }\n  detachCssClasses(viewPort());\n  options = options || {};\n  if (\"string\" === typeof options) {\n    options = {\n      theme: options\n    };\n  }\n  const isAutoInit = options._autoInit;\n  const loadCallback = options.loadCallback;\n  let currentThemeData;\n  currentThemeName = resolveFullThemeName(options.theme || currentThemeName);\n  if (currentThemeName) {\n    currentThemeData = knownThemes[currentThemeName];\n  }\n  if (loadCallback) {\n    themeReadyCallback.add(loadCallback);\n  }\n  if (currentThemeData) {\n    $activeThemeLink.attr(\"href\", knownThemes[currentThemeName].url);\n    if (themeReadyCallback.has() || \"resolved\" !== initDeferred.state() || options._forceTimeout) {\n      waitForThemeLoad(currentThemeName);\n    }\n  } else if (isAutoInit) {\n    if (hasWindow()) {\n      waitForThemeLoad(\"any\");\n    }\n    themeReadyCallback.fire();\n    themeReadyCallback.empty();\n  } else {\n    throw errors.Error(\"E0021\", currentThemeName);\n  }\n  initDeferred.done(() => attachCssClasses(originalViewPort(), currentThemeName));\n}\nfunction getCssClasses(themeName) {\n  themeName = themeName || current();\n  const result = [];\n  const themeNameParts = themeName && themeName.split(\".\");\n  if (themeNameParts) {\n    result.push(\"dx-theme-\" + themeNameParts[0], \"dx-theme-\" + themeNameParts[0] + \"-typography\");\n    if (themeNameParts.length > 1) {\n      result.push(\"dx-color-scheme-\" + themeNameParts[1] + (isMaterialBased(themeName) ? \"-\" + themeNameParts[2] : \"\"));\n    }\n  }\n  return result;\n}\nlet themeClasses;\nfunction _attachCssClasses(element, themeName) {\n  themeClasses = getCssClasses(themeName).join(\" \");\n  $(element).addClass(themeClasses);\n  !function () {\n    const pixelRatio = hasWindow() && window.devicePixelRatio;\n    if (!pixelRatio || pixelRatio < 2) {\n      return;\n    }\n    const $tester = $(\"<div>\");\n    $tester.css(\"border\", \".5px solid transparent\");\n    $(\"body\").append($tester);\n    if (1 === getOuterHeight($tester)) {\n      $(element).addClass(\"dx-hairlines\");\n      themeClasses += \" dx-hairlines\";\n    }\n    $tester.remove();\n  }();\n}\nexport function attachCssClasses(element, themeName) {\n  when(uiLayerInitialized).done(() => {\n    _attachCssClasses(element, themeName);\n  });\n}\nexport function detachCssClasses(element) {\n  when(uiLayerInitialized).done(() => {\n    $(element).removeClass(themeClasses);\n  });\n}\nfunction themeReady(callback) {\n  themeReadyCallback.add(callback);\n}\nfunction isTheme(themeRegExp, themeName) {\n  if (!themeName) {\n    themeName = currentThemeName || readThemeMarker();\n  }\n  return new RegExp(themeRegExp).test(themeName);\n}\nexport function isMaterialBased(themeName) {\n  return isMaterial(themeName) || isFluent(themeName);\n}\nexport function isMaterial(themeName) {\n  return isTheme(\"material\", themeName);\n}\nexport function isFluent(themeName) {\n  return isTheme(\"fluent\", themeName);\n}\nexport function isGeneric(themeName) {\n  return isTheme(\"generic\", themeName);\n}\nexport function isDark(themeName) {\n  return isTheme(\"dark\", themeName);\n}\nexport function isCompact(themeName) {\n  return isTheme(\"compact\", themeName);\n}\nexport function isWebFontLoaded(text, fontWeight) {\n  const document = domAdapter.getDocument();\n  const testElement = document.createElement(\"span\");\n  testElement.style.position = \"absolute\";\n  testElement.style.top = \"-9999px\";\n  testElement.style.left = \"-9999px\";\n  testElement.style.visibility = \"hidden\";\n  testElement.style.fontFamily = \"Arial\";\n  testElement.style.fontSize = \"250px\";\n  testElement.style.fontWeight = fontWeight;\n  testElement.innerHTML = text;\n  document.body.appendChild(testElement);\n  const etalonFontWidth = testElement.offsetWidth;\n  testElement.style.fontFamily = \"Roboto, RobotoFallback, Arial\";\n  const testedFontWidth = testElement.offsetWidth;\n  testElement.parentNode.removeChild(testElement);\n  return etalonFontWidth !== testedFontWidth;\n}\nexport function waitWebFont(text, fontWeight) {\n  return new Promise(resolve => {\n    const clear = () => {\n      clearInterval(intervalId);\n      clearTimeout(timeoutId);\n      resolve();\n    };\n    const intervalId = setInterval(() => {\n      if (isWebFontLoaded(text, fontWeight)) {\n        clear();\n      }\n    }, 15);\n    const timeoutId = setTimeout(clear, 2e3);\n  });\n}\nfunction autoInit() {\n  init({\n    _autoInit: true,\n    _forceTimeout: true\n  });\n  if ($(DX_LINK_SELECTOR, context).length) {\n    throw errors.Error(\"E0022\");\n  }\n}\nif (hasWindow()) {\n  autoInit();\n} else {\n  ready(autoInit);\n}\nviewPortChanged.add(function (viewPort, prevViewPort) {\n  initDeferred.done(function () {\n    detachCssClasses(prevViewPort);\n    attachCssClasses(viewPort);\n  });\n});\ndevices.changed.add(function () {\n  init({\n    _autoInit: true\n  });\n});\nexport { themeReady as ready };\nexport function resetTheme() {\n  $activeThemeLink && $activeThemeLink.attr(\"href\", \"about:blank\");\n  currentThemeName = null;\n  pendingThemeName = null;\n  initDeferred = new Deferred();\n}\nexport function initialized(callback) {\n  initDeferred.done(callback);\n}\nexport function setDefaultTimeout(timeout) {\n  defaultTimeout = timeout;\n}\nexport default {\n  setDefaultTimeout: setDefaultTimeout,\n  initialized: initialized,\n  resetTheme: resetTheme,\n  ready: themeReady,\n  waitWebFont: waitWebFont,\n  isWebFontLoaded: isWebFontLoaded,\n  isCompact: isCompact,\n  isDark: isDark,\n  isGeneric: isGeneric,\n  isMaterial: isMaterial,\n  isFluent: isFluent,\n  isMaterialBased: isMaterialBased,\n  detachCssClasses: detachCssClasses,\n  attachCssClasses: attachCssClasses,\n  current: current,\n  waitForThemeLoad: waitForThemeLoad,\n  isPendingThemeLoaded: isPendingThemeLoaded\n};","map":{"version":3,"names":["getOuterHeight","devices","domAdapter","$","Deferred","when","parseHTML","each","readyCallbacks","value","viewPortValue","changeCallback","originalViewPort","getWindow","hasWindow","themeReadyCallback","uiLayerInitialized","errors","window","ready","add","viewPort","viewPortChanged","initDeferred","DX_LINK_SELECTOR","THEME_ATTR","ACTIVE_ATTR","DX_HAIRLINES_CLASS","ANY_THEME","context","$activeThemeLink","knownThemes","currentThemeName","pendingThemeName","defaultTimeout","THEME_MARKER_PREFIX","readThemeMarker","element","addClass","appendTo","documentElement","result","getComputedStyle","get","fontFamily","replace","substr","remove","waitForThemeLoad","themeName","waitStartTime","timerId","intervalCleared","handleLoaded","clearInterval","fire","empty","resolve","isPendingThemeLoaded","Date","now","setInterval","isLoaded","isTimeout","log","anyThemePending","state","themeMarker","processMarkup","$allThemeLinks","length","link","fullThemeName","attr","url","isActive","last","after","resolveFullThemeName","desiredThemeName","desiredThemeParts","split","knownThemeName","themeData","knownThemeParts","initContext","newContext","x","init","options","getDocument","current","arguments","detachCssClasses","theme","isAutoInit","_autoInit","loadCallback","currentThemeData","has","_forceTimeout","Error","done","attachCssClasses","getCssClasses","themeNameParts","push","isMaterialBased","themeClasses","_attachCssClasses","join","pixelRatio","devicePixelRatio","$tester","css","append","removeClass","themeReady","callback","isTheme","themeRegExp","RegExp","test","isMaterial","isFluent","isGeneric","isDark","isCompact","isWebFontLoaded","text","fontWeight","document","testElement","createElement","style","position","top","left","visibility","fontSize","innerHTML","body","appendChild","etalonFontWidth","offsetWidth","testedFontWidth","parentNode","removeChild","waitWebFont","Promise","clear","intervalId","clearTimeout","timeoutId","setTimeout","autoInit","prevViewPort","changed","resetTheme","initialized","setDefaultTimeout","timeout"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/ui/themes.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/themes.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterHeight\r\n} from \"../core/utils/size\";\r\nimport devices from \"../core/devices\";\r\nimport domAdapter from \"../core/dom_adapter\";\r\nimport $ from \"../core/renderer\";\r\nimport {\r\n    Deferred,\r\n    when\r\n} from \"../core/utils/deferred\";\r\nimport {\r\n    parseHTML\r\n} from \"../core/utils/html_parser\";\r\nimport {\r\n    each\r\n} from \"../core/utils/iterator\";\r\nimport readyCallbacks from \"../core/utils/ready_callbacks\";\r\nimport {\r\n    value as viewPortValue,\r\n    changeCallback,\r\n    originalViewPort\r\n} from \"../core/utils/view_port\";\r\nimport {\r\n    getWindow,\r\n    hasWindow\r\n} from \"../core/utils/window\";\r\nimport {\r\n    themeReadyCallback\r\n} from \"./themes_callback\";\r\nimport {\r\n    uiLayerInitialized\r\n} from \"../__internal/core/utils/m_common\";\r\nimport errors from \"./widget/ui.errors\";\r\nconst window = getWindow();\r\nconst ready = readyCallbacks.add;\r\nconst viewPort = viewPortValue;\r\nconst viewPortChanged = changeCallback;\r\nlet initDeferred = new Deferred;\r\nconst DX_LINK_SELECTOR = \"link[rel=dx-theme]\";\r\nconst THEME_ATTR = \"data-theme\";\r\nconst ACTIVE_ATTR = \"data-active\";\r\nconst DX_HAIRLINES_CLASS = \"dx-hairlines\";\r\nconst ANY_THEME = \"any\";\r\nlet context;\r\nlet $activeThemeLink;\r\nlet knownThemes;\r\nlet currentThemeName;\r\nlet pendingThemeName;\r\nlet defaultTimeout = 15e3;\r\nconst THEME_MARKER_PREFIX = \"dx.\";\r\n\r\nfunction readThemeMarker() {\r\n    if (!hasWindow()) {\r\n        return null\r\n    }\r\n    const element = $(\"<div>\", context).addClass(\"dx-theme-marker\").appendTo(context.documentElement);\r\n    let result;\r\n    try {\r\n        result = window.getComputedStyle(element.get(0)).fontFamily;\r\n        if (!result) {\r\n            return null\r\n        }\r\n        result = result.replace(/[\"']/g, \"\");\r\n        if (\"dx.\" !== result.substr(0, 3)) {\r\n            return null\r\n        }\r\n        return result.substr(3)\r\n    } finally {\r\n        element.remove()\r\n    }\r\n}\r\nexport function waitForThemeLoad(themeName) {\r\n    let waitStartTime;\r\n    let timerId;\r\n    let intervalCleared = true;\r\n    pendingThemeName = themeName;\r\n\r\n    function handleLoaded() {\r\n        pendingThemeName = null;\r\n        clearInterval(timerId);\r\n        intervalCleared = true;\r\n        themeReadyCallback.fire();\r\n        themeReadyCallback.empty();\r\n        initDeferred.resolve()\r\n    }\r\n    if (isPendingThemeLoaded() || !defaultTimeout) {\r\n        handleLoaded()\r\n    } else {\r\n        if (!intervalCleared) {\r\n            if (pendingThemeName) {\r\n                pendingThemeName = themeName\r\n            }\r\n            return\r\n        }\r\n        waitStartTime = Date.now();\r\n        intervalCleared = false;\r\n        timerId = setInterval((function() {\r\n            const isLoaded = isPendingThemeLoaded();\r\n            const isTimeout = !isLoaded && Date.now() - waitStartTime > defaultTimeout;\r\n            if (isTimeout) {\r\n                errors.log(\"W0004\", pendingThemeName)\r\n            }\r\n            if (isLoaded || isTimeout) {\r\n                handleLoaded()\r\n            }\r\n        }), 10)\r\n    }\r\n}\r\nexport function isPendingThemeLoaded() {\r\n    if (!pendingThemeName) {\r\n        return true\r\n    }\r\n    const anyThemePending = \"any\" === pendingThemeName;\r\n    if (\"resolved\" === initDeferred.state() && anyThemePending) {\r\n        return true\r\n    }\r\n    const themeMarker = readThemeMarker();\r\n    if (themeMarker && anyThemePending) {\r\n        return true\r\n    }\r\n    return themeMarker === pendingThemeName\r\n}\r\n\r\nfunction processMarkup() {\r\n    const $allThemeLinks = $(DX_LINK_SELECTOR, context);\r\n    if (!$allThemeLinks.length) {\r\n        return\r\n    }\r\n    knownThemes = {};\r\n    $activeThemeLink = $(parseHTML(\"<link rel=stylesheet>\"), context);\r\n    $allThemeLinks.each((function() {\r\n        const link = $(this, context);\r\n        const fullThemeName = link.attr(THEME_ATTR);\r\n        const url = link.attr(\"href\");\r\n        const isActive = \"true\" === link.attr(ACTIVE_ATTR);\r\n        knownThemes[fullThemeName] = {\r\n            url: url,\r\n            isActive: isActive\r\n        }\r\n    }));\r\n    $allThemeLinks.last().after($activeThemeLink);\r\n    $allThemeLinks.remove()\r\n}\r\n\r\nfunction resolveFullThemeName(desiredThemeName) {\r\n    const desiredThemeParts = desiredThemeName ? desiredThemeName.split(\".\") : [];\r\n    let result = null;\r\n    if (knownThemes) {\r\n        if (desiredThemeName in knownThemes) {\r\n            return desiredThemeName\r\n        }\r\n        each(knownThemes, (function(knownThemeName, themeData) {\r\n            const knownThemeParts = knownThemeName.split(\".\");\r\n            if (desiredThemeParts[0] && knownThemeParts[0] !== desiredThemeParts[0]) {\r\n                return\r\n            }\r\n            if (desiredThemeParts[1] && desiredThemeParts[1] !== knownThemeParts[1]) {\r\n                return\r\n            }\r\n            if (desiredThemeParts[2] && desiredThemeParts[2] !== knownThemeParts[2]) {\r\n                return\r\n            }\r\n            if (!result || themeData.isActive) {\r\n                result = knownThemeName\r\n            }\r\n            if (themeData.isActive) {\r\n                return false\r\n            }\r\n        }))\r\n    }\r\n    return result\r\n}\r\n\r\nfunction initContext(newContext) {\r\n    try {\r\n        if (newContext !== context) {\r\n            knownThemes = null\r\n        }\r\n    } catch (x) {\r\n        knownThemes = null\r\n    }\r\n    context = newContext\r\n}\r\nexport function init(options) {\r\n    options = options || {};\r\n    initContext(options.context || domAdapter.getDocument());\r\n    if (!context) {\r\n        return\r\n    }\r\n    processMarkup();\r\n    currentThemeName = void 0;\r\n    current(options)\r\n}\r\nexport function current(options) {\r\n    if (!arguments.length) {\r\n        currentThemeName = currentThemeName || readThemeMarker();\r\n        return currentThemeName\r\n    }\r\n    detachCssClasses(viewPort());\r\n    options = options || {};\r\n    if (\"string\" === typeof options) {\r\n        options = {\r\n            theme: options\r\n        }\r\n    }\r\n    const isAutoInit = options._autoInit;\r\n    const loadCallback = options.loadCallback;\r\n    let currentThemeData;\r\n    currentThemeName = resolveFullThemeName(options.theme || currentThemeName);\r\n    if (currentThemeName) {\r\n        currentThemeData = knownThemes[currentThemeName]\r\n    }\r\n    if (loadCallback) {\r\n        themeReadyCallback.add(loadCallback)\r\n    }\r\n    if (currentThemeData) {\r\n        $activeThemeLink.attr(\"href\", knownThemes[currentThemeName].url);\r\n        if (themeReadyCallback.has() || \"resolved\" !== initDeferred.state() || options._forceTimeout) {\r\n            waitForThemeLoad(currentThemeName)\r\n        }\r\n    } else if (isAutoInit) {\r\n        if (hasWindow()) {\r\n            waitForThemeLoad(\"any\")\r\n        }\r\n        themeReadyCallback.fire();\r\n        themeReadyCallback.empty()\r\n    } else {\r\n        throw errors.Error(\"E0021\", currentThemeName)\r\n    }\r\n    initDeferred.done((() => attachCssClasses(originalViewPort(), currentThemeName)))\r\n}\r\n\r\nfunction getCssClasses(themeName) {\r\n    themeName = themeName || current();\r\n    const result = [];\r\n    const themeNameParts = themeName && themeName.split(\".\");\r\n    if (themeNameParts) {\r\n        result.push(\"dx-theme-\" + themeNameParts[0], \"dx-theme-\" + themeNameParts[0] + \"-typography\");\r\n        if (themeNameParts.length > 1) {\r\n            result.push(\"dx-color-scheme-\" + themeNameParts[1] + (isMaterialBased(themeName) ? \"-\" + themeNameParts[2] : \"\"))\r\n        }\r\n    }\r\n    return result\r\n}\r\nlet themeClasses;\r\n\r\nfunction _attachCssClasses(element, themeName) {\r\n    themeClasses = getCssClasses(themeName).join(\" \");\r\n    $(element).addClass(themeClasses);\r\n    ! function() {\r\n        const pixelRatio = hasWindow() && window.devicePixelRatio;\r\n        if (!pixelRatio || pixelRatio < 2) {\r\n            return\r\n        }\r\n        const $tester = $(\"<div>\");\r\n        $tester.css(\"border\", \".5px solid transparent\");\r\n        $(\"body\").append($tester);\r\n        if (1 === getOuterHeight($tester)) {\r\n            $(element).addClass(\"dx-hairlines\");\r\n            themeClasses += \" dx-hairlines\"\r\n        }\r\n        $tester.remove()\r\n    }()\r\n}\r\nexport function attachCssClasses(element, themeName) {\r\n    when(uiLayerInitialized).done((() => {\r\n        _attachCssClasses(element, themeName)\r\n    }))\r\n}\r\nexport function detachCssClasses(element) {\r\n    when(uiLayerInitialized).done((() => {\r\n        $(element).removeClass(themeClasses)\r\n    }))\r\n}\r\n\r\nfunction themeReady(callback) {\r\n    themeReadyCallback.add(callback)\r\n}\r\n\r\nfunction isTheme(themeRegExp, themeName) {\r\n    if (!themeName) {\r\n        themeName = currentThemeName || readThemeMarker()\r\n    }\r\n    return new RegExp(themeRegExp).test(themeName)\r\n}\r\nexport function isMaterialBased(themeName) {\r\n    return isMaterial(themeName) || isFluent(themeName)\r\n}\r\nexport function isMaterial(themeName) {\r\n    return isTheme(\"material\", themeName)\r\n}\r\nexport function isFluent(themeName) {\r\n    return isTheme(\"fluent\", themeName)\r\n}\r\nexport function isGeneric(themeName) {\r\n    return isTheme(\"generic\", themeName)\r\n}\r\nexport function isDark(themeName) {\r\n    return isTheme(\"dark\", themeName)\r\n}\r\nexport function isCompact(themeName) {\r\n    return isTheme(\"compact\", themeName)\r\n}\r\nexport function isWebFontLoaded(text, fontWeight) {\r\n    const document = domAdapter.getDocument();\r\n    const testElement = document.createElement(\"span\");\r\n    testElement.style.position = \"absolute\";\r\n    testElement.style.top = \"-9999px\";\r\n    testElement.style.left = \"-9999px\";\r\n    testElement.style.visibility = \"hidden\";\r\n    testElement.style.fontFamily = \"Arial\";\r\n    testElement.style.fontSize = \"250px\";\r\n    testElement.style.fontWeight = fontWeight;\r\n    testElement.innerHTML = text;\r\n    document.body.appendChild(testElement);\r\n    const etalonFontWidth = testElement.offsetWidth;\r\n    testElement.style.fontFamily = \"Roboto, RobotoFallback, Arial\";\r\n    const testedFontWidth = testElement.offsetWidth;\r\n    testElement.parentNode.removeChild(testElement);\r\n    return etalonFontWidth !== testedFontWidth\r\n}\r\nexport function waitWebFont(text, fontWeight) {\r\n    return new Promise((resolve => {\r\n        const clear = () => {\r\n            clearInterval(intervalId);\r\n            clearTimeout(timeoutId);\r\n            resolve()\r\n        };\r\n        const intervalId = setInterval((() => {\r\n            if (isWebFontLoaded(text, fontWeight)) {\r\n                clear()\r\n            }\r\n        }), 15);\r\n        const timeoutId = setTimeout(clear, 2e3)\r\n    }))\r\n}\r\n\r\nfunction autoInit() {\r\n    init({\r\n        _autoInit: true,\r\n        _forceTimeout: true\r\n    });\r\n    if ($(DX_LINK_SELECTOR, context).length) {\r\n        throw errors.Error(\"E0022\")\r\n    }\r\n}\r\nif (hasWindow()) {\r\n    autoInit()\r\n} else {\r\n    ready(autoInit)\r\n}\r\nviewPortChanged.add((function(viewPort, prevViewPort) {\r\n    initDeferred.done((function() {\r\n        detachCssClasses(prevViewPort);\r\n        attachCssClasses(viewPort)\r\n    }))\r\n}));\r\ndevices.changed.add((function() {\r\n    init({\r\n        _autoInit: true\r\n    })\r\n}));\r\nexport {\r\n    themeReady as ready\r\n};\r\nexport function resetTheme() {\r\n    $activeThemeLink && $activeThemeLink.attr(\"href\", \"about:blank\");\r\n    currentThemeName = null;\r\n    pendingThemeName = null;\r\n    initDeferred = new Deferred\r\n}\r\nexport function initialized(callback) {\r\n    initDeferred.done(callback)\r\n}\r\nexport function setDefaultTimeout(timeout) {\r\n    defaultTimeout = timeout\r\n}\r\nexport default {\r\n    setDefaultTimeout: setDefaultTimeout,\r\n    initialized: initialized,\r\n    resetTheme: resetTheme,\r\n    ready: themeReady,\r\n    waitWebFont: waitWebFont,\r\n    isWebFontLoaded: isWebFontLoaded,\r\n    isCompact: isCompact,\r\n    isDark: isDark,\r\n    isGeneric: isGeneric,\r\n    isMaterial: isMaterial,\r\n    isFluent: isFluent,\r\n    isMaterialBased: isMaterialBased,\r\n    detachCssClasses: detachCssClasses,\r\n    attachCssClasses: attachCssClasses,\r\n    current: current,\r\n    waitForThemeLoad: waitForThemeLoad,\r\n    isPendingThemeLoaded: isPendingThemeLoaded\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}