{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/core/r1/template_wrapper.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"isEqual\"];\nimport { InfernoComponent, InfernoEffect } from \"@devextreme/runtime/inferno\";\nimport domAdapter from \"../../../core/dom_adapter\";\nimport { getPublicElement } from \"../../../core/element\";\nimport $ from \"../../../core/renderer\";\nimport { replaceWith } from \"../../../core/utils/dom\";\nimport { isDefined } from \"../../../core/utils/type\";\nimport { findDOMfromVNode } from \"inferno\";\nimport { shallowEquals } from \"./utils/shallow_equals\";\nconst isDxElementWrapper = element => !!element.toArray;\nexport const buildTemplateArgs = (model, template) => {\n  const args = {\n    template: template,\n    model: _extends({}, model)\n  };\n  const _ref = model.data ?? {},\n    {\n      isEqual: isEqual\n    } = _ref,\n    data = _objectWithoutPropertiesLoose(_ref, _excluded);\n  if (isEqual) {\n    args.model.data = data;\n    args.isEqual = isEqual;\n  }\n  return args;\n};\nconst renderTemplateContent = (props, container) => {\n  const {\n    data: data,\n    index: index\n  } = props.model ?? {\n    data: {}\n  };\n  if (data) {\n    Object.keys(data).forEach(name => {\n      if (data[name] && domAdapter.isNode(data[name])) {\n        data[name] = getPublicElement($(data[name]));\n      }\n    });\n  }\n  const rendered = props.template.render(_extends({\n    container: container,\n    transclude: props.transclude\n  }, {\n    renovated: props.renovated\n  }, !props.transclude ? {\n    model: data\n  } : {}, !props.transclude && Number.isFinite(index) ? {\n    index: index\n  } : {}));\n  if (void 0 === rendered) {\n    return [];\n  }\n  return isDxElementWrapper(rendered) ? rendered.toArray() : [$(rendered).get(0)];\n};\nconst removeDifferentElements = (oldChildren, newChildren) => {\n  newChildren.forEach(newElement => {\n    const hasOldChild = !!oldChildren.find(oldElement => newElement === oldElement);\n    if (!hasOldChild && newElement.parentNode) {\n      $(newElement).remove();\n    }\n  });\n};\nexport class TemplateWrapper extends InfernoComponent {\n  constructor(props) {\n    super(props);\n    this.renderTemplate = this.renderTemplate.bind(this);\n  }\n  renderTemplate() {\n    const node = findDOMfromVNode(this.$LI, true);\n    if (!(null !== node && void 0 !== node && node.parentNode)) {\n      return () => {};\n    }\n    const container = node.parentNode;\n    const $container = $(container);\n    const $oldContainerContent = $container.contents().toArray();\n    const content = renderTemplateContent(this.props, getPublicElement($container));\n    replaceWith($(node), $(content));\n    return () => {\n      const $actualContainerContent = $(container).contents().toArray();\n      removeDifferentElements($oldContainerContent, $actualContainerContent);\n      container.appendChild(node);\n    };\n  }\n  shouldComponentUpdate(nextProps) {\n    const {\n      template: template,\n      model: model\n    } = this.props;\n    const {\n      template: nextTemplate,\n      model: nextModel,\n      isEqual: isEqual\n    } = nextProps;\n    const equalityComparer = isEqual ?? shallowEquals;\n    if (template !== nextTemplate) {\n      return true;\n    }\n    if (!isDefined(model) || !isDefined(nextModel)) {\n      return model !== nextModel;\n    }\n    const {\n      data: data,\n      index: index\n    } = model;\n    const {\n      data: nextData,\n      index: nextIndex\n    } = nextModel;\n    if (index !== nextIndex) {\n      return true;\n    }\n    if (!isDefined(data) || !isDefined(nextData)) {\n      return model !== nextModel;\n    }\n    return !equalityComparer(data, nextData);\n  }\n  createEffects() {\n    return [new InfernoEffect(this.renderTemplate, [this.props.template, this.props.model])];\n  }\n  updateEffects() {\n    this._effects[0].update([this.props.template, this.props.model]);\n  }\n  componentWillUnmount() {}\n  render() {\n    return null;\n  }\n}","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","_excluded","InfernoComponent","InfernoEffect","domAdapter","getPublicElement","$","replaceWith","isDefined","findDOMfromVNode","shallowEquals","isDxElementWrapper","element","toArray","buildTemplateArgs","model","template","args","_ref","data","isEqual","renderTemplateContent","props","container","index","Object","keys","forEach","name","isNode","rendered","render","transclude","renovated","Number","isFinite","get","removeDifferentElements","oldChildren","newChildren","newElement","hasOldChild","find","oldElement","parentNode","remove","TemplateWrapper","constructor","renderTemplate","bind","node","$LI","$container","$oldContainerContent","contents","content","$actualContainerContent","appendChild","shouldComponentUpdate","nextProps","nextTemplate","nextModel","equalityComparer","nextData","nextIndex","createEffects","updateEffects","_effects","update","componentWillUnmount"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/core/r1/template_wrapper.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/core/r1/template_wrapper.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nconst _excluded = [\"isEqual\"];\r\nimport {\r\n    InfernoComponent,\r\n    InfernoEffect\r\n} from \"@devextreme/runtime/inferno\";\r\nimport domAdapter from \"../../../core/dom_adapter\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../../core/element\";\r\nimport $ from \"../../../core/renderer\";\r\nimport {\r\n    replaceWith\r\n} from \"../../../core/utils/dom\";\r\nimport {\r\n    isDefined\r\n} from \"../../../core/utils/type\";\r\nimport {\r\n    findDOMfromVNode\r\n} from \"inferno\";\r\nimport {\r\n    shallowEquals\r\n} from \"./utils/shallow_equals\";\r\nconst isDxElementWrapper = element => !!element.toArray;\r\nexport const buildTemplateArgs = (model, template) => {\r\n    const args = {\r\n        template: template,\r\n        model: _extends({}, model)\r\n    };\r\n    const _ref = model.data ?? {},\r\n        {\r\n            isEqual: isEqual\r\n        } = _ref,\r\n        data = _objectWithoutPropertiesLoose(_ref, _excluded);\r\n    if (isEqual) {\r\n        args.model.data = data;\r\n        args.isEqual = isEqual\r\n    }\r\n    return args\r\n};\r\nconst renderTemplateContent = (props, container) => {\r\n    const {\r\n        data: data,\r\n        index: index\r\n    } = props.model ?? {\r\n        data: {}\r\n    };\r\n    if (data) {\r\n        Object.keys(data).forEach((name => {\r\n            if (data[name] && domAdapter.isNode(data[name])) {\r\n                data[name] = getPublicElement($(data[name]))\r\n            }\r\n        }))\r\n    }\r\n    const rendered = props.template.render(_extends({\r\n        container: container,\r\n        transclude: props.transclude\r\n    }, {\r\n        renovated: props.renovated\r\n    }, !props.transclude ? {\r\n        model: data\r\n    } : {}, !props.transclude && Number.isFinite(index) ? {\r\n        index: index\r\n    } : {}));\r\n    if (void 0 === rendered) {\r\n        return []\r\n    }\r\n    return isDxElementWrapper(rendered) ? rendered.toArray() : [$(rendered).get(0)]\r\n};\r\nconst removeDifferentElements = (oldChildren, newChildren) => {\r\n    newChildren.forEach((newElement => {\r\n        const hasOldChild = !!oldChildren.find((oldElement => newElement === oldElement));\r\n        if (!hasOldChild && newElement.parentNode) {\r\n            $(newElement).remove()\r\n        }\r\n    }))\r\n};\r\nexport class TemplateWrapper extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.renderTemplate = this.renderTemplate.bind(this)\r\n    }\r\n    renderTemplate() {\r\n        const node = findDOMfromVNode(this.$LI, true);\r\n        if (!(null !== node && void 0 !== node && node.parentNode)) {\r\n            return () => {}\r\n        }\r\n        const container = node.parentNode;\r\n        const $container = $(container);\r\n        const $oldContainerContent = $container.contents().toArray();\r\n        const content = renderTemplateContent(this.props, getPublicElement($container));\r\n        replaceWith($(node), $(content));\r\n        return () => {\r\n            const $actualContainerContent = $(container).contents().toArray();\r\n            removeDifferentElements($oldContainerContent, $actualContainerContent);\r\n            container.appendChild(node)\r\n        }\r\n    }\r\n    shouldComponentUpdate(nextProps) {\r\n        const {\r\n            template: template,\r\n            model: model\r\n        } = this.props;\r\n        const {\r\n            template: nextTemplate,\r\n            model: nextModel,\r\n            isEqual: isEqual\r\n        } = nextProps;\r\n        const equalityComparer = isEqual ?? shallowEquals;\r\n        if (template !== nextTemplate) {\r\n            return true\r\n        }\r\n        if (!isDefined(model) || !isDefined(nextModel)) {\r\n            return model !== nextModel\r\n        }\r\n        const {\r\n            data: data,\r\n            index: index\r\n        } = model;\r\n        const {\r\n            data: nextData,\r\n            index: nextIndex\r\n        } = nextModel;\r\n        if (index !== nextIndex) {\r\n            return true\r\n        }\r\n        if (!isDefined(data) || !isDefined(nextData)) {\r\n            return model !== nextModel\r\n        }\r\n        return !equalityComparer(data, nextData)\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.renderTemplate, [this.props.template, this.props.model])]\r\n    }\r\n    updateEffects() {\r\n        this._effects[0].update([this.props.template, this.props.model])\r\n    }\r\n    componentWillUnmount() {}\r\n    render() {\r\n        return null\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}