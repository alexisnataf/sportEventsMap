{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/core/r1/utils/get_updated_options.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { isPlainObject, type } from \"../../../../core/utils/type\";\nconst defaultNotDeepCopyArrays = [\"dataSource\", \"selectedRowKeys\"];\nconst propsToIgnore = {\n  integrationOptions: true\n};\nfunction getDiffItem(key, value, previousValue) {\n  return {\n    path: key,\n    value: value,\n    previousValue: previousValue\n  };\n}\nfunction compare(resultPaths, item1, item2, key, fullPropName, notDeepCopyArrays) {\n  if (propsToIgnore[key]) {\n    return;\n  }\n  const type1 = type(item1);\n  const type2 = type(item2);\n  if (item1 === item2) {\n    return;\n  }\n  if (type1 !== type2) {\n    resultPaths.push(getDiffItem(key, item2, item1));\n  } else if (\"object\" === type1) {\n    if (!isPlainObject(item2)) {\n      resultPaths.push(getDiffItem(key, item2, item1));\n    } else {\n      const diffPaths = objectDiffs(item1, item2, fullPropName, notDeepCopyArrays);\n      resultPaths.push(...diffPaths.map(item => _extends({}, item, {\n        path: `${key}.${item.path}`\n      })));\n    }\n  } else if (\"array\" === type1) {\n    const notDeepCopy = notDeepCopyArrays.some(prop => fullPropName.includes(prop));\n    if (notDeepCopy && item1 !== item2) {\n      resultPaths.push(getDiffItem(key, item2, item1));\n    } else if (item1.length !== item2.length) {\n      resultPaths.push(getDiffItem(key, item2, item1));\n    } else {\n      const diffPaths = objectDiffs(item1, item2, fullPropName, notDeepCopyArrays);\n      [].push.apply(resultPaths, diffPaths.map(item => _extends({}, item, {\n        path: `${key}${item.path}`\n      })));\n    }\n  } else {\n    resultPaths.push(getDiffItem(key, item2, item1));\n  }\n}\nconst objectDiffsFiltered = propsEnumerator => (oldProps, props, fullPropName, notDeepCopyArrays) => {\n  const resultPaths = [];\n  const processItem = !Array.isArray(oldProps) ? propName => {\n    compare(resultPaths, oldProps[propName], props[propName], propName, `${fullPropName}.${propName}`, notDeepCopyArrays);\n  } : propName => {\n    compare(resultPaths, oldProps[propName], props[propName], `[${propName}]`, `${fullPropName}.${propName}`, notDeepCopyArrays);\n  };\n  propsEnumerator(oldProps).forEach(processItem);\n  Object.keys(props).filter(propName => !Object.prototype.hasOwnProperty.call(oldProps, propName) && oldProps[propName] !== props[propName]).forEach(propName => {\n    resultPaths.push({\n      path: propName,\n      value: props[propName],\n      previousValue: oldProps[propName]\n    });\n  });\n  return resultPaths;\n};\nconst objectDiffs = objectDiffsFiltered(oldProps => Object.keys(oldProps));\nconst reactProps = {\n  key: true,\n  ref: true,\n  children: true,\n  style: true\n};\nconst objectDiffsWithoutReactProps = objectDiffsFiltered(prop => Object.keys(prop).filter(p => !reactProps[p]));\nexport function getUpdatedOptions(oldProps, props) {\n  let notDeepCopyArrays = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : defaultNotDeepCopyArrays;\n  return objectDiffsWithoutReactProps(oldProps, props, \"\", notDeepCopyArrays);\n}","map":{"version":3,"names":["_extends","isPlainObject","type","defaultNotDeepCopyArrays","propsToIgnore","integrationOptions","getDiffItem","key","value","previousValue","path","compare","resultPaths","item1","item2","fullPropName","notDeepCopyArrays","type1","type2","push","diffPaths","objectDiffs","map","item","notDeepCopy","some","prop","includes","length","apply","objectDiffsFiltered","propsEnumerator","oldProps","props","processItem","Array","isArray","propName","forEach","Object","keys","filter","prototype","hasOwnProperty","call","reactProps","ref","children","style","objectDiffsWithoutReactProps","p","getUpdatedOptions","arguments"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/core/r1/utils/get_updated_options.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/core/r1/utils/get_updated_options.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    isPlainObject,\r\n    type\r\n} from \"../../../../core/utils/type\";\r\nconst defaultNotDeepCopyArrays = [\"dataSource\", \"selectedRowKeys\"];\r\nconst propsToIgnore = {\r\n    integrationOptions: true\r\n};\r\n\r\nfunction getDiffItem(key, value, previousValue) {\r\n    return {\r\n        path: key,\r\n        value: value,\r\n        previousValue: previousValue\r\n    }\r\n}\r\n\r\nfunction compare(resultPaths, item1, item2, key, fullPropName, notDeepCopyArrays) {\r\n    if (propsToIgnore[key]) {\r\n        return\r\n    }\r\n    const type1 = type(item1);\r\n    const type2 = type(item2);\r\n    if (item1 === item2) {\r\n        return\r\n    }\r\n    if (type1 !== type2) {\r\n        resultPaths.push(getDiffItem(key, item2, item1))\r\n    } else if (\"object\" === type1) {\r\n        if (!isPlainObject(item2)) {\r\n            resultPaths.push(getDiffItem(key, item2, item1))\r\n        } else {\r\n            const diffPaths = objectDiffs(item1, item2, fullPropName, notDeepCopyArrays);\r\n            resultPaths.push(...diffPaths.map((item => _extends({}, item, {\r\n                path: `${key}.${item.path}`\r\n            }))))\r\n        }\r\n    } else if (\"array\" === type1) {\r\n        const notDeepCopy = notDeepCopyArrays.some((prop => fullPropName.includes(prop)));\r\n        if (notDeepCopy && item1 !== item2) {\r\n            resultPaths.push(getDiffItem(key, item2, item1))\r\n        } else if (item1.length !== item2.length) {\r\n            resultPaths.push(getDiffItem(key, item2, item1))\r\n        } else {\r\n            const diffPaths = objectDiffs(item1, item2, fullPropName, notDeepCopyArrays);\r\n            [].push.apply(resultPaths, diffPaths.map((item => _extends({}, item, {\r\n                path: `${key}${item.path}`\r\n            }))))\r\n        }\r\n    } else {\r\n        resultPaths.push(getDiffItem(key, item2, item1))\r\n    }\r\n}\r\nconst objectDiffsFiltered = propsEnumerator => (oldProps, props, fullPropName, notDeepCopyArrays) => {\r\n    const resultPaths = [];\r\n    const processItem = !Array.isArray(oldProps) ? propName => {\r\n        compare(resultPaths, oldProps[propName], props[propName], propName, `${fullPropName}.${propName}`, notDeepCopyArrays)\r\n    } : propName => {\r\n        compare(resultPaths, oldProps[propName], props[propName], `[${propName}]`, `${fullPropName}.${propName}`, notDeepCopyArrays)\r\n    };\r\n    propsEnumerator(oldProps).forEach(processItem);\r\n    Object.keys(props).filter((propName => !Object.prototype.hasOwnProperty.call(oldProps, propName) && oldProps[propName] !== props[propName])).forEach((propName => {\r\n        resultPaths.push({\r\n            path: propName,\r\n            value: props[propName],\r\n            previousValue: oldProps[propName]\r\n        })\r\n    }));\r\n    return resultPaths\r\n};\r\nconst objectDiffs = objectDiffsFiltered((oldProps => Object.keys(oldProps)));\r\nconst reactProps = {\r\n    key: true,\r\n    ref: true,\r\n    children: true,\r\n    style: true\r\n};\r\nconst objectDiffsWithoutReactProps = objectDiffsFiltered((prop => Object.keys(prop).filter((p => !reactProps[p]))));\r\nexport function getUpdatedOptions(oldProps, props) {\r\n    let notDeepCopyArrays = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : defaultNotDeepCopyArrays;\r\n    return objectDiffsWithoutReactProps(oldProps, props, \"\", notDeepCopyArrays)\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}