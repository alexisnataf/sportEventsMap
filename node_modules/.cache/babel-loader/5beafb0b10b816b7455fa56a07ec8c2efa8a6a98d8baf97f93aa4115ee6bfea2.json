{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/ui/number_box/m_number_box.spin.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { lock } from \"../../../common/core/events/core/emitter.feedback\";\nimport eventsEngine from \"../../../common/core/events/core/events_engine\";\nimport holdEvent from \"../../../common/core/events/hold\";\nimport pointerEvents from \"../../../common/core/events/pointer\";\nimport { addNamespace } from \"../../../common/core/events/utils/index\";\nimport domAdapter from \"../../../core/dom_adapter\";\nimport $ from \"../../../core/renderer\";\nimport { Deferred } from \"../../../core/utils/deferred\";\nimport Widget from \"../../core/widget/widget\";\nconst SPIN_CLASS = \"dx-numberbox-spin\";\nconst SPIN_BUTTON_CLASS = \"dx-numberbox-spin-button\";\nconst SPIN_HOLD_DELAY = 100;\nconst NUMBER_BOX = \"dxNumberBox\";\nconst POINTERUP_EVENT_NAME = addNamespace(pointerEvents.up, NUMBER_BOX);\nconst POINTERCANCEL_EVENT_NAME = addNamespace(pointerEvents.cancel, NUMBER_BOX);\nclass SpinButton extends Widget {\n  _getDefaultOptions() {\n    return _extends({}, super._getDefaultOptions(), {\n      direction: \"up\",\n      onChange: null,\n      activeStateEnabled: true,\n      hoverStateEnabled: true\n    });\n  }\n  _initMarkup() {\n    super._initMarkup();\n    const {\n      direction: spinDirection\n    } = this.option();\n    const direction = `${SPIN_CLASS}-${spinDirection}`;\n    this.$element().addClass(SPIN_BUTTON_CLASS).addClass(direction);\n    this._spinIcon = $(\"<div>\").addClass(`${direction}-icon`).appendTo(this.$element());\n  }\n  _render() {\n    super._render();\n    const eventName = addNamespace(pointerEvents.down, this.NAME);\n    const $element = this.$element();\n    eventsEngine.off($element, eventName);\n    eventsEngine.on($element, eventName, this._spinDownHandler.bind(this));\n    this._spinChangeHandler = this._createActionByOption(\"onChange\");\n  }\n  _spinDownHandler(e) {\n    e.preventDefault();\n    this._clearTimer();\n    eventsEngine.on(this.$element(), holdEvent.name, () => {\n      this._feedBackDeferred = Deferred();\n      lock(this._feedBackDeferred);\n      this._spinChangeHandler({\n        event: e\n      });\n      this._holdTimer = setInterval(this._spinChangeHandler, 100, {\n        event: e\n      });\n    });\n    const document = domAdapter.getDocument();\n    eventsEngine.on(document, POINTERUP_EVENT_NAME, this._clearTimer.bind(this));\n    eventsEngine.on(document, POINTERCANCEL_EVENT_NAME, this._clearTimer.bind(this));\n    this._spinChangeHandler({\n      event: e\n    });\n  }\n  _dispose() {\n    this._clearTimer();\n    super._dispose();\n  }\n  _clearTimer() {\n    eventsEngine.off(this.$element(), holdEvent.name);\n    const document = domAdapter.getDocument();\n    eventsEngine.off(document, POINTERUP_EVENT_NAME);\n    eventsEngine.off(document, POINTERCANCEL_EVENT_NAME);\n    if (this._feedBackDeferred) {\n      this._feedBackDeferred.resolve();\n    }\n    if (this._holdTimer) {\n      clearInterval(this._holdTimer);\n    }\n  }\n  _optionChanged(args) {\n    switch (args.name) {\n      case \"onChange\":\n      case \"direction\":\n        this._invalidate();\n        break;\n      default:\n        super._optionChanged(args);\n    }\n  }\n}\nexport default SpinButton;","map":{"version":3,"names":["_extends","lock","eventsEngine","holdEvent","pointerEvents","addNamespace","domAdapter","$","Deferred","Widget","SPIN_CLASS","SPIN_BUTTON_CLASS","SPIN_HOLD_DELAY","NUMBER_BOX","POINTERUP_EVENT_NAME","up","POINTERCANCEL_EVENT_NAME","cancel","SpinButton","_getDefaultOptions","direction","onChange","activeStateEnabled","hoverStateEnabled","_initMarkup","spinDirection","option","$element","addClass","_spinIcon","appendTo","_render","eventName","down","NAME","off","on","_spinDownHandler","bind","_spinChangeHandler","_createActionByOption","e","preventDefault","_clearTimer","name","_feedBackDeferred","event","_holdTimer","setInterval","document","getDocument","_dispose","resolve","clearInterval","_optionChanged","args","_invalidate"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/ui/number_box/m_number_box.spin.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/ui/number_box/m_number_box.spin.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    lock\r\n} from \"../../../common/core/events/core/emitter.feedback\";\r\nimport eventsEngine from \"../../../common/core/events/core/events_engine\";\r\nimport holdEvent from \"../../../common/core/events/hold\";\r\nimport pointerEvents from \"../../../common/core/events/pointer\";\r\nimport {\r\n    addNamespace\r\n} from \"../../../common/core/events/utils/index\";\r\nimport domAdapter from \"../../../core/dom_adapter\";\r\nimport $ from \"../../../core/renderer\";\r\nimport {\r\n    Deferred\r\n} from \"../../../core/utils/deferred\";\r\nimport Widget from \"../../core/widget/widget\";\r\nconst SPIN_CLASS = \"dx-numberbox-spin\";\r\nconst SPIN_BUTTON_CLASS = \"dx-numberbox-spin-button\";\r\nconst SPIN_HOLD_DELAY = 100;\r\nconst NUMBER_BOX = \"dxNumberBox\";\r\nconst POINTERUP_EVENT_NAME = addNamespace(pointerEvents.up, NUMBER_BOX);\r\nconst POINTERCANCEL_EVENT_NAME = addNamespace(pointerEvents.cancel, NUMBER_BOX);\r\nclass SpinButton extends Widget {\r\n    _getDefaultOptions() {\r\n        return _extends({}, super._getDefaultOptions(), {\r\n            direction: \"up\",\r\n            onChange: null,\r\n            activeStateEnabled: true,\r\n            hoverStateEnabled: true\r\n        })\r\n    }\r\n    _initMarkup() {\r\n        super._initMarkup();\r\n        const {\r\n            direction: spinDirection\r\n        } = this.option();\r\n        const direction = `${SPIN_CLASS}-${spinDirection}`;\r\n        this.$element().addClass(SPIN_BUTTON_CLASS).addClass(direction);\r\n        this._spinIcon = $(\"<div>\").addClass(`${direction}-icon`).appendTo(this.$element())\r\n    }\r\n    _render() {\r\n        super._render();\r\n        const eventName = addNamespace(pointerEvents.down, this.NAME);\r\n        const $element = this.$element();\r\n        eventsEngine.off($element, eventName);\r\n        eventsEngine.on($element, eventName, this._spinDownHandler.bind(this));\r\n        this._spinChangeHandler = this._createActionByOption(\"onChange\")\r\n    }\r\n    _spinDownHandler(e) {\r\n        e.preventDefault();\r\n        this._clearTimer();\r\n        eventsEngine.on(this.$element(), holdEvent.name, (() => {\r\n            this._feedBackDeferred = Deferred();\r\n            lock(this._feedBackDeferred);\r\n            this._spinChangeHandler({\r\n                event: e\r\n            });\r\n            this._holdTimer = setInterval(this._spinChangeHandler, 100, {\r\n                event: e\r\n            })\r\n        }));\r\n        const document = domAdapter.getDocument();\r\n        eventsEngine.on(document, POINTERUP_EVENT_NAME, this._clearTimer.bind(this));\r\n        eventsEngine.on(document, POINTERCANCEL_EVENT_NAME, this._clearTimer.bind(this));\r\n        this._spinChangeHandler({\r\n            event: e\r\n        })\r\n    }\r\n    _dispose() {\r\n        this._clearTimer();\r\n        super._dispose()\r\n    }\r\n    _clearTimer() {\r\n        eventsEngine.off(this.$element(), holdEvent.name);\r\n        const document = domAdapter.getDocument();\r\n        eventsEngine.off(document, POINTERUP_EVENT_NAME);\r\n        eventsEngine.off(document, POINTERCANCEL_EVENT_NAME);\r\n        if (this._feedBackDeferred) {\r\n            this._feedBackDeferred.resolve()\r\n        }\r\n        if (this._holdTimer) {\r\n            clearInterval(this._holdTimer)\r\n        }\r\n    }\r\n    _optionChanged(args) {\r\n        switch (args.name) {\r\n            case \"onChange\":\r\n            case \"direction\":\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n}\r\nexport default SpinButton;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}