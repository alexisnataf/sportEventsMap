{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/core/utils/m_array_compare.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { isObject } from \"../../../core/utils/type\";\nconst getKeyWrapper = function (item, getKey) {\n  const key = getKey(item);\n  if (isObject(key)) {\n    try {\n      return JSON.stringify(key);\n    } catch (e) {\n      return key;\n    }\n  }\n  return key;\n};\nconst getSameNewByOld = function (oldItem, newItems, newIndexByKey, getKey) {\n  const key = getKeyWrapper(oldItem, getKey);\n  return newItems[newIndexByKey[key]];\n};\nexport const isKeysEqual = function (oldKeys, newKeys) {\n  if (oldKeys.length !== newKeys.length) {\n    return false;\n  }\n  for (let i = 0; i < newKeys.length; i++) {\n    if (oldKeys[i] !== newKeys[i]) {\n      return false;\n    }\n  }\n  return true;\n};\nexport const findChanges = function (oldItems, newItems, getKey, isItemEquals) {\n  const oldIndexByKey = {};\n  const newIndexByKey = {};\n  let addedCount = 0;\n  let removeCount = 0;\n  const result = [];\n  oldItems.forEach(function (item, index) {\n    const key = getKeyWrapper(item, getKey);\n    oldIndexByKey[key] = index;\n  });\n  newItems.forEach(function (item, index) {\n    const key = getKeyWrapper(item, getKey);\n    newIndexByKey[key] = index;\n  });\n  const itemCount = Math.max(oldItems.length, newItems.length);\n  for (let index = 0; index < itemCount + addedCount; index++) {\n    const newItem = newItems[index];\n    const oldNextIndex = index - addedCount + removeCount;\n    const nextOldItem = oldItems[oldNextIndex];\n    const isRemoved = !newItem || nextOldItem && !getSameNewByOld(nextOldItem, newItems, newIndexByKey, getKey);\n    if (isRemoved) {\n      if (nextOldItem) {\n        result.push({\n          type: \"remove\",\n          key: getKey(nextOldItem),\n          index: index,\n          oldItem: nextOldItem\n        });\n        removeCount++;\n        index--;\n      }\n    } else {\n      const key = getKeyWrapper(newItem, getKey);\n      const oldIndex = oldIndexByKey[key];\n      const oldItem = oldItems[oldIndex];\n      if (!oldItem) {\n        addedCount++;\n        result.push({\n          type: \"insert\",\n          data: newItem,\n          index: index\n        });\n      } else if (oldIndex === oldNextIndex) {\n        if (!isItemEquals(oldItem, newItem)) {\n          result.push({\n            type: \"update\",\n            data: newItem,\n            key: getKey(newItem),\n            index: index,\n            oldItem: oldItem\n          });\n        }\n      } else {\n        return;\n      }\n    }\n  }\n  return result;\n};","map":{"version":3,"names":["isObject","getKeyWrapper","item","getKey","key","JSON","stringify","e","getSameNewByOld","oldItem","newItems","newIndexByKey","isKeysEqual","oldKeys","newKeys","length","i","findChanges","oldItems","isItemEquals","oldIndexByKey","addedCount","removeCount","result","forEach","index","itemCount","Math","max","newItem","oldNextIndex","nextOldItem","isRemoved","push","type","oldIndex","data"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/core/utils/m_array_compare.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/core/utils/m_array_compare.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isObject\r\n} from \"../../../core/utils/type\";\r\nconst getKeyWrapper = function(item, getKey) {\r\n    const key = getKey(item);\r\n    if (isObject(key)) {\r\n        try {\r\n            return JSON.stringify(key)\r\n        } catch (e) {\r\n            return key\r\n        }\r\n    }\r\n    return key\r\n};\r\nconst getSameNewByOld = function(oldItem, newItems, newIndexByKey, getKey) {\r\n    const key = getKeyWrapper(oldItem, getKey);\r\n    return newItems[newIndexByKey[key]]\r\n};\r\nexport const isKeysEqual = function(oldKeys, newKeys) {\r\n    if (oldKeys.length !== newKeys.length) {\r\n        return false\r\n    }\r\n    for (let i = 0; i < newKeys.length; i++) {\r\n        if (oldKeys[i] !== newKeys[i]) {\r\n            return false\r\n        }\r\n    }\r\n    return true\r\n};\r\nexport const findChanges = function(oldItems, newItems, getKey, isItemEquals) {\r\n    const oldIndexByKey = {};\r\n    const newIndexByKey = {};\r\n    let addedCount = 0;\r\n    let removeCount = 0;\r\n    const result = [];\r\n    oldItems.forEach((function(item, index) {\r\n        const key = getKeyWrapper(item, getKey);\r\n        oldIndexByKey[key] = index\r\n    }));\r\n    newItems.forEach((function(item, index) {\r\n        const key = getKeyWrapper(item, getKey);\r\n        newIndexByKey[key] = index\r\n    }));\r\n    const itemCount = Math.max(oldItems.length, newItems.length);\r\n    for (let index = 0; index < itemCount + addedCount; index++) {\r\n        const newItem = newItems[index];\r\n        const oldNextIndex = index - addedCount + removeCount;\r\n        const nextOldItem = oldItems[oldNextIndex];\r\n        const isRemoved = !newItem || nextOldItem && !getSameNewByOld(nextOldItem, newItems, newIndexByKey, getKey);\r\n        if (isRemoved) {\r\n            if (nextOldItem) {\r\n                result.push({\r\n                    type: \"remove\",\r\n                    key: getKey(nextOldItem),\r\n                    index: index,\r\n                    oldItem: nextOldItem\r\n                });\r\n                removeCount++;\r\n                index--\r\n            }\r\n        } else {\r\n            const key = getKeyWrapper(newItem, getKey);\r\n            const oldIndex = oldIndexByKey[key];\r\n            const oldItem = oldItems[oldIndex];\r\n            if (!oldItem) {\r\n                addedCount++;\r\n                result.push({\r\n                    type: \"insert\",\r\n                    data: newItem,\r\n                    index: index\r\n                })\r\n            } else if (oldIndex === oldNextIndex) {\r\n                if (!isItemEquals(oldItem, newItem)) {\r\n                    result.push({\r\n                        type: \"update\",\r\n                        data: newItem,\r\n                        key: getKey(newItem),\r\n                        index: index,\r\n                        oldItem: oldItem\r\n                    })\r\n                }\r\n            } else {\r\n                return\r\n            }\r\n        }\r\n    }\r\n    return result\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}