{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/ui/scroll_view/m_scrollable.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport eventsEngine from \"../../../common/core/events/core/events_engine\";\nimport scrollEvents from \"../../../common/core/events/gesture/emitter.gesture.scroll\";\nimport { addNamespace } from \"../../../common/core/events/utils/index\";\nimport registerComponent from \"../../../core/component_registrator\";\nimport devices from \"../../../core/devices\";\nimport { getPublicElement } from \"../../../core/element\";\nimport $ from \"../../../core/renderer\";\nimport browser from \"../../../core/utils/browser\";\nimport { ensureDefined, noop } from \"../../../core/utils/common\";\nimport { when } from \"../../../core/utils/deferred\";\nimport { getHeight, getOuterHeight, getOuterWidth, getWidth } from \"../../../core/utils/size\";\nimport { isDefined, isPlainObject } from \"../../../core/utils/type\";\nimport { hasWindow } from \"../../../core/utils/window\";\nimport DOMComponent from \"../../core/widget/dom_component\";\nimport { getElementLocationInternal } from \"../../ui/scroll_view/utils/get_element_location_internal\";\nimport supportUtils from \"../../core/utils/m_support\";\nimport { deviceDependentOptions } from \"./m_scrollable.device\";\nimport NativeStrategy from \"./m_scrollable.native\";\nimport { SimulatedStrategy } from \"./m_scrollable.simulated\";\nconst SCROLLABLE = \"dxScrollable\";\nconst SCROLLABLE_STRATEGY = \"dxScrollableStrategy\";\nconst SCROLLABLE_CLASS = \"dx-scrollable\";\nconst SCROLLABLE_DISABLED_CLASS = \"dx-scrollable-disabled\";\nconst SCROLLABLE_CONTAINER_CLASS = \"dx-scrollable-container\";\nconst SCROLLABLE_WRAPPER_CLASS = \"dx-scrollable-wrapper\";\nconst SCROLLABLE_CONTENT_CLASS = \"dx-scrollable-content\";\nconst VERTICAL = \"vertical\";\nconst HORIZONTAL = \"horizontal\";\nconst BOTH = \"both\";\nclass Scrollable extends DOMComponent {\n  _getDefaultOptions() {\n    return _extends({}, super._getDefaultOptions(), {\n      disabled: false,\n      onScroll: null,\n      direction: VERTICAL,\n      showScrollbar: \"onScroll\",\n      useNative: true,\n      bounceEnabled: true,\n      scrollByContent: true,\n      scrollByThumb: false,\n      onUpdated: null,\n      onStart: null,\n      onEnd: null,\n      onBounce: null,\n      useSimulatedScrollbar: false,\n      useKeyboard: true,\n      inertiaEnabled: true,\n      updateManually: false,\n      _onVisibilityChanged: noop\n    });\n  }\n  _defaultOptionsRules() {\n    return super._defaultOptionsRules().concat(deviceDependentOptions(), [{\n      device: () => supportUtils.nativeScrolling && \"android\" === devices.real().platform && !browser.mozilla,\n      options: {\n        useSimulatedScrollbar: true\n      }\n    }]);\n  }\n  _initOptions(options) {\n    super._initOptions(options);\n    if (!(\"useSimulatedScrollbar\" in options)) {\n      this._setUseSimulatedScrollbar();\n    }\n  }\n  _setUseSimulatedScrollbar() {\n    if (!this.initialOption(\"useSimulatedScrollbar\")) {\n      this.option(\"useSimulatedScrollbar\", !this.option(\"useNative\"));\n    }\n  }\n  _init() {\n    super._init();\n    this._initScrollableMarkup();\n    this._locked = false;\n  }\n  _visibilityChanged(visible) {\n    if (visible) {\n      this.update();\n      this._updateRtlPosition();\n      this._savedScrollOffset && this.scrollTo(this._savedScrollOffset);\n      delete this._savedScrollOffset;\n      const {\n        _onVisibilityChanged: onVisibilityChanged\n      } = this.option();\n      null === onVisibilityChanged || void 0 === onVisibilityChanged || onVisibilityChanged(this);\n    } else {\n      this._savedScrollOffset = this.scrollOffset();\n    }\n  }\n  _initScrollableMarkup() {\n    const $element = this.$element().addClass(\"dx-scrollable\");\n    const $container = $(\"<div>\").addClass(\"dx-scrollable-container\");\n    const $wrapper = $(\"<div>\").addClass(\"dx-scrollable-wrapper\");\n    const $content = $(\"<div>\").addClass(\"dx-scrollable-content\");\n    this._$container = $container;\n    this._$wrapper = $wrapper;\n    this._$content = $content;\n    $content.append($element.contents()).appendTo($container);\n    $container.appendTo($wrapper);\n    $wrapper.appendTo($element);\n  }\n  _dimensionChanged() {\n    this.update();\n    this._updateRtlPosition();\n  }\n  _initMarkup() {\n    super._initMarkup();\n    this._renderDirection();\n  }\n  _render() {\n    this._renderStrategy();\n    this._attachEventHandlers();\n    this._renderDisabledState();\n    this._createActions();\n    this.update();\n    super._render();\n    this._updateRtlPosition(true);\n  }\n  _updateRtlPosition(needInitializeRtlConfig) {\n    this._strategy.updateRtlPosition(needInitializeRtlConfig);\n  }\n  _getMaxOffset() {\n    const {\n      scrollWidth: scrollWidth,\n      clientWidth: clientWidth,\n      scrollHeight: scrollHeight,\n      clientHeight: clientHeight\n    } = $(this.container()).get(0);\n    return {\n      left: scrollWidth - clientWidth,\n      top: scrollHeight - clientHeight\n    };\n  }\n  _attachEventHandlers() {\n    const strategy = this._strategy;\n    const initEventData = {\n      getDirection: strategy.getDirection.bind(strategy),\n      validate: this._validate.bind(this),\n      isNative: this.option(\"useNative\"),\n      scrollTarget: this._$container\n    };\n    eventsEngine.off(this._$wrapper, `.${SCROLLABLE}`);\n    eventsEngine.on(this._$wrapper, addNamespace(scrollEvents.init, SCROLLABLE), initEventData, this._initHandler.bind(this));\n    eventsEngine.on(this._$wrapper, addNamespace(scrollEvents.start, SCROLLABLE), strategy.handleStart.bind(strategy));\n    eventsEngine.on(this._$wrapper, addNamespace(scrollEvents.move, SCROLLABLE), strategy.handleMove.bind(strategy));\n    eventsEngine.on(this._$wrapper, addNamespace(scrollEvents.end, SCROLLABLE), strategy.handleEnd.bind(strategy));\n    eventsEngine.on(this._$wrapper, addNamespace(scrollEvents.cancel, SCROLLABLE), strategy.handleCancel.bind(strategy));\n    eventsEngine.on(this._$wrapper, addNamespace(scrollEvents.stop, SCROLLABLE), strategy.handleStop.bind(strategy));\n    eventsEngine.off(this._$container, `.${SCROLLABLE}`);\n    eventsEngine.on(this._$container, addNamespace(\"scroll\", SCROLLABLE), strategy.handleScroll.bind(strategy));\n  }\n  _validate(e) {\n    if (this._isLocked()) {\n      return false;\n    }\n    this._updateIfNeed();\n    return this._moveIsAllowed(e);\n  }\n  _moveIsAllowed(e) {\n    return this._strategy.validate(e);\n  }\n  handleMove(e) {\n    this._strategy.handleMove(e);\n  }\n  _prepareDirections(value) {\n    this._strategy._prepareDirections(value);\n  }\n  _initHandler() {\n    const strategy = this._strategy;\n    strategy.handleInit.apply(strategy, arguments);\n  }\n  _renderDisabledState() {\n    const {\n      disabled: disabled\n    } = this.option();\n    this.$element().toggleClass(\"dx-scrollable-disabled\", disabled);\n    if (this.option(\"disabled\")) {\n      this._lock();\n    } else {\n      this._unlock();\n    }\n  }\n  _renderDirection() {\n    const {\n      direction: direction\n    } = this.option();\n    this.$element().removeClass(`dx-scrollable-${HORIZONTAL}`).removeClass(`dx-scrollable-${VERTICAL}`).removeClass(`dx-scrollable-${BOTH}`).addClass(`dx-scrollable-${direction}`);\n  }\n  _renderStrategy() {\n    this._createStrategy();\n    this._strategy.render();\n    this.$element().data(SCROLLABLE_STRATEGY, this._strategy);\n  }\n  _createStrategy() {\n    this._strategy = this.option(\"useNative\") ? new NativeStrategy(this) : new SimulatedStrategy(this);\n  }\n  _createActions() {\n    var _this$_strategy;\n    null === (_this$_strategy = this._strategy) || void 0 === _this$_strategy || _this$_strategy.createActions();\n  }\n  _clean() {\n    var _this$_strategy2;\n    null === (_this$_strategy2 = this._strategy) || void 0 === _this$_strategy2 || _this$_strategy2.dispose();\n  }\n  _optionChanged(args) {\n    var _this$_strategy3;\n    switch (args.name) {\n      case \"onStart\":\n      case \"onEnd\":\n      case \"onUpdated\":\n      case \"onScroll\":\n      case \"onBounce\":\n        this._createActions();\n        break;\n      case \"direction\":\n        this._resetInactiveDirection();\n        this._invalidate();\n        break;\n      case \"useNative\":\n        this._setUseSimulatedScrollbar();\n        this._invalidate();\n        break;\n      case \"inertiaEnabled\":\n      case \"scrollByThumb\":\n      case \"bounceEnabled\":\n      case \"useKeyboard\":\n      case \"showScrollbar\":\n      case \"useSimulatedScrollbar\":\n        this._invalidate();\n        break;\n      case \"disabled\":\n        this._renderDisabledState();\n        null === (_this$_strategy3 = this._strategy) || void 0 === _this$_strategy3 || _this$_strategy3.disabledChanged();\n        break;\n      case \"updateManually\":\n      case \"scrollByContent\":\n      case \"_onVisibilityChanged\":\n        break;\n      case \"width\":\n        super._optionChanged(args);\n        this._updateRtlPosition();\n        break;\n      default:\n        super._optionChanged(args);\n    }\n  }\n  _resetInactiveDirection() {\n    const inactiveProp = this._getInactiveProp();\n    if (!inactiveProp || !hasWindow()) {\n      return;\n    }\n    const scrollOffset = this.scrollOffset();\n    scrollOffset[inactiveProp] = 0;\n    this.scrollTo(scrollOffset);\n  }\n  _getInactiveProp() {\n    const {\n      direction: direction\n    } = this.option();\n    if (direction === VERTICAL) {\n      return \"left\";\n    }\n    if (direction === HORIZONTAL) {\n      return \"top\";\n    }\n  }\n  _location() {\n    return this._strategy.location();\n  }\n  _normalizeLocation(location) {\n    if (isPlainObject(location)) {\n      const left = ensureDefined(location.left, location.x);\n      const top = ensureDefined(location.top, location.y);\n      return {\n        left: isDefined(left) ? -left : void 0,\n        top: isDefined(top) ? -top : void 0\n      };\n    }\n    const {\n      direction: direction\n    } = this.option();\n    return {\n      left: direction !== VERTICAL ? -location : void 0,\n      top: direction !== HORIZONTAL ? -location : void 0\n    };\n  }\n  _isLocked() {\n    return this._locked;\n  }\n  _lock() {\n    this._locked = true;\n  }\n  _unlock() {\n    if (!this.option(\"disabled\")) {\n      this._locked = false;\n    }\n  }\n  _isDirection(direction) {\n    const {\n      direction: current\n    } = this.option();\n    if (direction === VERTICAL) {\n      return current !== HORIZONTAL;\n    }\n    if (direction === HORIZONTAL) {\n      return current !== VERTICAL;\n    }\n    return current === direction;\n  }\n  _updateAllowedDirection() {\n    const allowedDirections = this._strategy._allowedDirections();\n    if (this._isDirection(BOTH) && allowedDirections.vertical && allowedDirections.horizontal) {\n      this._allowedDirectionValue = BOTH;\n    } else if (this._isDirection(HORIZONTAL) && allowedDirections.horizontal) {\n      this._allowedDirectionValue = HORIZONTAL;\n    } else if (this._isDirection(VERTICAL) && allowedDirections.vertical) {\n      this._allowedDirectionValue = VERTICAL;\n    } else {\n      this._allowedDirectionValue = null;\n    }\n  }\n  _allowedDirection() {\n    return this._allowedDirectionValue;\n  }\n  $content() {\n    return this._$content;\n  }\n  content() {\n    return getPublicElement(this._$content);\n  }\n  container() {\n    return getPublicElement(this._$container);\n  }\n  scrollOffset() {\n    return this._strategy._getScrollOffset();\n  }\n  _isRtlNativeStrategy() {\n    const {\n      useNative: useNative,\n      rtlEnabled: rtlEnabled\n    } = this.option();\n    return useNative && rtlEnabled;\n  }\n  scrollTop() {\n    return this.scrollOffset().top;\n  }\n  scrollLeft() {\n    return this.scrollOffset().left;\n  }\n  clientHeight() {\n    return getHeight(this._$container);\n  }\n  scrollHeight() {\n    return getOuterHeight(this.$content());\n  }\n  clientWidth() {\n    return getWidth(this._$container);\n  }\n  scrollWidth() {\n    return getOuterWidth(this.$content());\n  }\n  update() {\n    if (!this._strategy) {\n      return;\n    }\n    return when(this._strategy.update()).done(() => {\n      this._updateAllowedDirection();\n    });\n  }\n  scrollBy(distance) {\n    distance = this._normalizeLocation(distance);\n    if (!distance.top && !distance.left) {\n      return;\n    }\n    this._updateIfNeed();\n    this._strategy.scrollBy(distance);\n  }\n  scrollTo(targetLocation) {\n    if (!hasWindow()) {\n      return;\n    }\n    targetLocation = this._normalizeLocation(targetLocation);\n    this._updateIfNeed();\n    let location = this._location();\n    const {\n      useNative: useNative\n    } = this.option();\n    if (!useNative) {\n      const strategy = this._strategy;\n      targetLocation = strategy._applyScaleRatio(targetLocation);\n      location = strategy._applyScaleRatio(location);\n    }\n    if (this._isRtlNativeStrategy()) {\n      location.left -= this._getMaxOffset().left;\n    }\n    const distance = this._normalizeLocation({\n      left: location.left - ensureDefined(targetLocation.left, location.left),\n      top: location.top - ensureDefined(targetLocation.top, location.top)\n    });\n    if (!distance.top && !distance.left) {\n      return;\n    }\n    this._strategy.scrollBy(distance);\n  }\n  scrollToElement(element, offset) {\n    const $element = $(element);\n    const elementInsideContent = this.$content().find(element).length;\n    const elementIsInsideContent = $element.parents(\".dx-scrollable\").length - $element.parents(\".dx-scrollable-content\").length === 0;\n    if (!elementInsideContent || !elementIsInsideContent) {\n      return;\n    }\n    const scrollPosition = {\n      top: 0,\n      left: 0\n    };\n    const {\n      direction: direction\n    } = this.option();\n    if (direction !== VERTICAL) {\n      scrollPosition.left = this.getScrollElementPosition($element, HORIZONTAL, offset);\n    }\n    if (direction !== HORIZONTAL) {\n      scrollPosition.top = this.getScrollElementPosition($element, VERTICAL, offset);\n    }\n    this.scrollTo(scrollPosition);\n  }\n  getScrollElementPosition($element, direction, offset) {\n    const scrollOffset = this.scrollOffset();\n    return getElementLocationInternal($element.get(0), direction, $(this.container()).get(0), scrollOffset, offset);\n  }\n  _updateIfNeed() {\n    if (!this.option(\"updateManually\")) {\n      this.update();\n    }\n  }\n  _useTemplates() {\n    return false;\n  }\n  isRenovated() {\n    return !!Scrollable.IS_RENOVATED_WIDGET;\n  }\n}\nregisterComponent(SCROLLABLE, Scrollable);\nexport default Scrollable;","map":{"version":3,"names":["_extends","eventsEngine","scrollEvents","addNamespace","registerComponent","devices","getPublicElement","$","browser","ensureDefined","noop","when","getHeight","getOuterHeight","getOuterWidth","getWidth","isDefined","isPlainObject","hasWindow","DOMComponent","getElementLocationInternal","supportUtils","deviceDependentOptions","NativeStrategy","SimulatedStrategy","SCROLLABLE","SCROLLABLE_STRATEGY","SCROLLABLE_CLASS","SCROLLABLE_DISABLED_CLASS","SCROLLABLE_CONTAINER_CLASS","SCROLLABLE_WRAPPER_CLASS","SCROLLABLE_CONTENT_CLASS","VERTICAL","HORIZONTAL","BOTH","Scrollable","_getDefaultOptions","disabled","onScroll","direction","showScrollbar","useNative","bounceEnabled","scrollByContent","scrollByThumb","onUpdated","onStart","onEnd","onBounce","useSimulatedScrollbar","useKeyboard","inertiaEnabled","updateManually","_onVisibilityChanged","_defaultOptionsRules","concat","device","nativeScrolling","real","platform","mozilla","options","_initOptions","_setUseSimulatedScrollbar","initialOption","option","_init","_initScrollableMarkup","_locked","_visibilityChanged","visible","update","_updateRtlPosition","_savedScrollOffset","scrollTo","onVisibilityChanged","scrollOffset","$element","addClass","$container","$wrapper","$content","_$container","_$wrapper","_$content","append","contents","appendTo","_dimensionChanged","_initMarkup","_renderDirection","_render","_renderStrategy","_attachEventHandlers","_renderDisabledState","_createActions","needInitializeRtlConfig","_strategy","updateRtlPosition","_getMaxOffset","scrollWidth","clientWidth","scrollHeight","clientHeight","container","get","left","top","strategy","initEventData","getDirection","bind","validate","_validate","isNative","scrollTarget","off","on","init","_initHandler","start","handleStart","move","handleMove","end","handleEnd","cancel","handleCancel","stop","handleStop","handleScroll","e","_isLocked","_updateIfNeed","_moveIsAllowed","_prepareDirections","value","handleInit","apply","arguments","toggleClass","_lock","_unlock","removeClass","_createStrategy","render","data","_this$_strategy","createActions","_clean","_this$_strategy2","dispose","_optionChanged","args","_this$_strategy3","name","_resetInactiveDirection","_invalidate","disabledChanged","inactiveProp","_getInactiveProp","_location","location","_normalizeLocation","x","y","_isDirection","current","_updateAllowedDirection","allowedDirections","_allowedDirections","vertical","horizontal","_allowedDirectionValue","_allowedDirection","content","_getScrollOffset","_isRtlNativeStrategy","rtlEnabled","scrollTop","scrollLeft","done","scrollBy","distance","targetLocation","_applyScaleRatio","scrollToElement","element","offset","elementInsideContent","find","length","elementIsInsideContent","parents","scrollPosition","getScrollElementPosition","_useTemplates","isRenovated","IS_RENOVATED_WIDGET"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/ui/scroll_view/m_scrollable.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/ui/scroll_view/m_scrollable.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport eventsEngine from \"../../../common/core/events/core/events_engine\";\r\nimport scrollEvents from \"../../../common/core/events/gesture/emitter.gesture.scroll\";\r\nimport {\r\n    addNamespace\r\n} from \"../../../common/core/events/utils/index\";\r\nimport registerComponent from \"../../../core/component_registrator\";\r\nimport devices from \"../../../core/devices\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../../core/element\";\r\nimport $ from \"../../../core/renderer\";\r\nimport browser from \"../../../core/utils/browser\";\r\nimport {\r\n    ensureDefined,\r\n    noop\r\n} from \"../../../core/utils/common\";\r\nimport {\r\n    when\r\n} from \"../../../core/utils/deferred\";\r\nimport {\r\n    getHeight,\r\n    getOuterHeight,\r\n    getOuterWidth,\r\n    getWidth\r\n} from \"../../../core/utils/size\";\r\nimport {\r\n    isDefined,\r\n    isPlainObject\r\n} from \"../../../core/utils/type\";\r\nimport {\r\n    hasWindow\r\n} from \"../../../core/utils/window\";\r\nimport DOMComponent from \"../../core/widget/dom_component\";\r\nimport {\r\n    getElementLocationInternal\r\n} from \"../../ui/scroll_view/utils/get_element_location_internal\";\r\nimport supportUtils from \"../../core/utils/m_support\";\r\nimport {\r\n    deviceDependentOptions\r\n} from \"./m_scrollable.device\";\r\nimport NativeStrategy from \"./m_scrollable.native\";\r\nimport {\r\n    SimulatedStrategy\r\n} from \"./m_scrollable.simulated\";\r\nconst SCROLLABLE = \"dxScrollable\";\r\nconst SCROLLABLE_STRATEGY = \"dxScrollableStrategy\";\r\nconst SCROLLABLE_CLASS = \"dx-scrollable\";\r\nconst SCROLLABLE_DISABLED_CLASS = \"dx-scrollable-disabled\";\r\nconst SCROLLABLE_CONTAINER_CLASS = \"dx-scrollable-container\";\r\nconst SCROLLABLE_WRAPPER_CLASS = \"dx-scrollable-wrapper\";\r\nconst SCROLLABLE_CONTENT_CLASS = \"dx-scrollable-content\";\r\nconst VERTICAL = \"vertical\";\r\nconst HORIZONTAL = \"horizontal\";\r\nconst BOTH = \"both\";\r\nclass Scrollable extends DOMComponent {\r\n    _getDefaultOptions() {\r\n        return _extends({}, super._getDefaultOptions(), {\r\n            disabled: false,\r\n            onScroll: null,\r\n            direction: VERTICAL,\r\n            showScrollbar: \"onScroll\",\r\n            useNative: true,\r\n            bounceEnabled: true,\r\n            scrollByContent: true,\r\n            scrollByThumb: false,\r\n            onUpdated: null,\r\n            onStart: null,\r\n            onEnd: null,\r\n            onBounce: null,\r\n            useSimulatedScrollbar: false,\r\n            useKeyboard: true,\r\n            inertiaEnabled: true,\r\n            updateManually: false,\r\n            _onVisibilityChanged: noop\r\n        })\r\n    }\r\n    _defaultOptionsRules() {\r\n        return super._defaultOptionsRules().concat(deviceDependentOptions(), [{\r\n            device: () => supportUtils.nativeScrolling && \"android\" === devices.real().platform && !browser.mozilla,\r\n            options: {\r\n                useSimulatedScrollbar: true\r\n            }\r\n        }])\r\n    }\r\n    _initOptions(options) {\r\n        super._initOptions(options);\r\n        if (!(\"useSimulatedScrollbar\" in options)) {\r\n            this._setUseSimulatedScrollbar()\r\n        }\r\n    }\r\n    _setUseSimulatedScrollbar() {\r\n        if (!this.initialOption(\"useSimulatedScrollbar\")) {\r\n            this.option(\"useSimulatedScrollbar\", !this.option(\"useNative\"))\r\n        }\r\n    }\r\n    _init() {\r\n        super._init();\r\n        this._initScrollableMarkup();\r\n        this._locked = false\r\n    }\r\n    _visibilityChanged(visible) {\r\n        if (visible) {\r\n            this.update();\r\n            this._updateRtlPosition();\r\n            this._savedScrollOffset && this.scrollTo(this._savedScrollOffset);\r\n            delete this._savedScrollOffset;\r\n            const {\r\n                _onVisibilityChanged: onVisibilityChanged\r\n            } = this.option();\r\n            null === onVisibilityChanged || void 0 === onVisibilityChanged || onVisibilityChanged(this)\r\n        } else {\r\n            this._savedScrollOffset = this.scrollOffset()\r\n        }\r\n    }\r\n    _initScrollableMarkup() {\r\n        const $element = this.$element().addClass(\"dx-scrollable\");\r\n        const $container = $(\"<div>\").addClass(\"dx-scrollable-container\");\r\n        const $wrapper = $(\"<div>\").addClass(\"dx-scrollable-wrapper\");\r\n        const $content = $(\"<div>\").addClass(\"dx-scrollable-content\");\r\n        this._$container = $container;\r\n        this._$wrapper = $wrapper;\r\n        this._$content = $content;\r\n        $content.append($element.contents()).appendTo($container);\r\n        $container.appendTo($wrapper);\r\n        $wrapper.appendTo($element)\r\n    }\r\n    _dimensionChanged() {\r\n        this.update();\r\n        this._updateRtlPosition()\r\n    }\r\n    _initMarkup() {\r\n        super._initMarkup();\r\n        this._renderDirection()\r\n    }\r\n    _render() {\r\n        this._renderStrategy();\r\n        this._attachEventHandlers();\r\n        this._renderDisabledState();\r\n        this._createActions();\r\n        this.update();\r\n        super._render();\r\n        this._updateRtlPosition(true)\r\n    }\r\n    _updateRtlPosition(needInitializeRtlConfig) {\r\n        this._strategy.updateRtlPosition(needInitializeRtlConfig)\r\n    }\r\n    _getMaxOffset() {\r\n        const {\r\n            scrollWidth: scrollWidth,\r\n            clientWidth: clientWidth,\r\n            scrollHeight: scrollHeight,\r\n            clientHeight: clientHeight\r\n        } = $(this.container()).get(0);\r\n        return {\r\n            left: scrollWidth - clientWidth,\r\n            top: scrollHeight - clientHeight\r\n        }\r\n    }\r\n    _attachEventHandlers() {\r\n        const strategy = this._strategy;\r\n        const initEventData = {\r\n            getDirection: strategy.getDirection.bind(strategy),\r\n            validate: this._validate.bind(this),\r\n            isNative: this.option(\"useNative\"),\r\n            scrollTarget: this._$container\r\n        };\r\n        eventsEngine.off(this._$wrapper, `.${SCROLLABLE}`);\r\n        eventsEngine.on(this._$wrapper, addNamespace(scrollEvents.init, SCROLLABLE), initEventData, this._initHandler.bind(this));\r\n        eventsEngine.on(this._$wrapper, addNamespace(scrollEvents.start, SCROLLABLE), strategy.handleStart.bind(strategy));\r\n        eventsEngine.on(this._$wrapper, addNamespace(scrollEvents.move, SCROLLABLE), strategy.handleMove.bind(strategy));\r\n        eventsEngine.on(this._$wrapper, addNamespace(scrollEvents.end, SCROLLABLE), strategy.handleEnd.bind(strategy));\r\n        eventsEngine.on(this._$wrapper, addNamespace(scrollEvents.cancel, SCROLLABLE), strategy.handleCancel.bind(strategy));\r\n        eventsEngine.on(this._$wrapper, addNamespace(scrollEvents.stop, SCROLLABLE), strategy.handleStop.bind(strategy));\r\n        eventsEngine.off(this._$container, `.${SCROLLABLE}`);\r\n        eventsEngine.on(this._$container, addNamespace(\"scroll\", SCROLLABLE), strategy.handleScroll.bind(strategy))\r\n    }\r\n    _validate(e) {\r\n        if (this._isLocked()) {\r\n            return false\r\n        }\r\n        this._updateIfNeed();\r\n        return this._moveIsAllowed(e)\r\n    }\r\n    _moveIsAllowed(e) {\r\n        return this._strategy.validate(e)\r\n    }\r\n    handleMove(e) {\r\n        this._strategy.handleMove(e)\r\n    }\r\n    _prepareDirections(value) {\r\n        this._strategy._prepareDirections(value)\r\n    }\r\n    _initHandler() {\r\n        const strategy = this._strategy;\r\n        strategy.handleInit.apply(strategy, arguments)\r\n    }\r\n    _renderDisabledState() {\r\n        const {\r\n            disabled: disabled\r\n        } = this.option();\r\n        this.$element().toggleClass(\"dx-scrollable-disabled\", disabled);\r\n        if (this.option(\"disabled\")) {\r\n            this._lock()\r\n        } else {\r\n            this._unlock()\r\n        }\r\n    }\r\n    _renderDirection() {\r\n        const {\r\n            direction: direction\r\n        } = this.option();\r\n        this.$element().removeClass(`dx-scrollable-${HORIZONTAL}`).removeClass(`dx-scrollable-${VERTICAL}`).removeClass(`dx-scrollable-${BOTH}`).addClass(`dx-scrollable-${direction}`)\r\n    }\r\n    _renderStrategy() {\r\n        this._createStrategy();\r\n        this._strategy.render();\r\n        this.$element().data(SCROLLABLE_STRATEGY, this._strategy)\r\n    }\r\n    _createStrategy() {\r\n        this._strategy = this.option(\"useNative\") ? new NativeStrategy(this) : new SimulatedStrategy(this)\r\n    }\r\n    _createActions() {\r\n        var _this$_strategy;\r\n        null === (_this$_strategy = this._strategy) || void 0 === _this$_strategy || _this$_strategy.createActions()\r\n    }\r\n    _clean() {\r\n        var _this$_strategy2;\r\n        null === (_this$_strategy2 = this._strategy) || void 0 === _this$_strategy2 || _this$_strategy2.dispose()\r\n    }\r\n    _optionChanged(args) {\r\n        var _this$_strategy3;\r\n        switch (args.name) {\r\n            case \"onStart\":\r\n            case \"onEnd\":\r\n            case \"onUpdated\":\r\n            case \"onScroll\":\r\n            case \"onBounce\":\r\n                this._createActions();\r\n                break;\r\n            case \"direction\":\r\n                this._resetInactiveDirection();\r\n                this._invalidate();\r\n                break;\r\n            case \"useNative\":\r\n                this._setUseSimulatedScrollbar();\r\n                this._invalidate();\r\n                break;\r\n            case \"inertiaEnabled\":\r\n            case \"scrollByThumb\":\r\n            case \"bounceEnabled\":\r\n            case \"useKeyboard\":\r\n            case \"showScrollbar\":\r\n            case \"useSimulatedScrollbar\":\r\n                this._invalidate();\r\n                break;\r\n            case \"disabled\":\r\n                this._renderDisabledState();\r\n                null === (_this$_strategy3 = this._strategy) || void 0 === _this$_strategy3 || _this$_strategy3.disabledChanged();\r\n                break;\r\n            case \"updateManually\":\r\n            case \"scrollByContent\":\r\n            case \"_onVisibilityChanged\":\r\n                break;\r\n            case \"width\":\r\n                super._optionChanged(args);\r\n                this._updateRtlPosition();\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    _resetInactiveDirection() {\r\n        const inactiveProp = this._getInactiveProp();\r\n        if (!inactiveProp || !hasWindow()) {\r\n            return\r\n        }\r\n        const scrollOffset = this.scrollOffset();\r\n        scrollOffset[inactiveProp] = 0;\r\n        this.scrollTo(scrollOffset)\r\n    }\r\n    _getInactiveProp() {\r\n        const {\r\n            direction: direction\r\n        } = this.option();\r\n        if (direction === VERTICAL) {\r\n            return \"left\"\r\n        }\r\n        if (direction === HORIZONTAL) {\r\n            return \"top\"\r\n        }\r\n    }\r\n    _location() {\r\n        return this._strategy.location()\r\n    }\r\n    _normalizeLocation(location) {\r\n        if (isPlainObject(location)) {\r\n            const left = ensureDefined(location.left, location.x);\r\n            const top = ensureDefined(location.top, location.y);\r\n            return {\r\n                left: isDefined(left) ? -left : void 0,\r\n                top: isDefined(top) ? -top : void 0\r\n            }\r\n        }\r\n        const {\r\n            direction: direction\r\n        } = this.option();\r\n        return {\r\n            left: direction !== VERTICAL ? -location : void 0,\r\n            top: direction !== HORIZONTAL ? -location : void 0\r\n        }\r\n    }\r\n    _isLocked() {\r\n        return this._locked\r\n    }\r\n    _lock() {\r\n        this._locked = true\r\n    }\r\n    _unlock() {\r\n        if (!this.option(\"disabled\")) {\r\n            this._locked = false\r\n        }\r\n    }\r\n    _isDirection(direction) {\r\n        const {\r\n            direction: current\r\n        } = this.option();\r\n        if (direction === VERTICAL) {\r\n            return current !== HORIZONTAL\r\n        }\r\n        if (direction === HORIZONTAL) {\r\n            return current !== VERTICAL\r\n        }\r\n        return current === direction\r\n    }\r\n    _updateAllowedDirection() {\r\n        const allowedDirections = this._strategy._allowedDirections();\r\n        if (this._isDirection(BOTH) && allowedDirections.vertical && allowedDirections.horizontal) {\r\n            this._allowedDirectionValue = BOTH\r\n        } else if (this._isDirection(HORIZONTAL) && allowedDirections.horizontal) {\r\n            this._allowedDirectionValue = HORIZONTAL\r\n        } else if (this._isDirection(VERTICAL) && allowedDirections.vertical) {\r\n            this._allowedDirectionValue = VERTICAL\r\n        } else {\r\n            this._allowedDirectionValue = null\r\n        }\r\n    }\r\n    _allowedDirection() {\r\n        return this._allowedDirectionValue\r\n    }\r\n    $content() {\r\n        return this._$content\r\n    }\r\n    content() {\r\n        return getPublicElement(this._$content)\r\n    }\r\n    container() {\r\n        return getPublicElement(this._$container)\r\n    }\r\n    scrollOffset() {\r\n        return this._strategy._getScrollOffset()\r\n    }\r\n    _isRtlNativeStrategy() {\r\n        const {\r\n            useNative: useNative,\r\n            rtlEnabled: rtlEnabled\r\n        } = this.option();\r\n        return useNative && rtlEnabled\r\n    }\r\n    scrollTop() {\r\n        return this.scrollOffset().top\r\n    }\r\n    scrollLeft() {\r\n        return this.scrollOffset().left\r\n    }\r\n    clientHeight() {\r\n        return getHeight(this._$container)\r\n    }\r\n    scrollHeight() {\r\n        return getOuterHeight(this.$content())\r\n    }\r\n    clientWidth() {\r\n        return getWidth(this._$container)\r\n    }\r\n    scrollWidth() {\r\n        return getOuterWidth(this.$content())\r\n    }\r\n    update() {\r\n        if (!this._strategy) {\r\n            return\r\n        }\r\n        return when(this._strategy.update()).done((() => {\r\n            this._updateAllowedDirection()\r\n        }))\r\n    }\r\n    scrollBy(distance) {\r\n        distance = this._normalizeLocation(distance);\r\n        if (!distance.top && !distance.left) {\r\n            return\r\n        }\r\n        this._updateIfNeed();\r\n        this._strategy.scrollBy(distance)\r\n    }\r\n    scrollTo(targetLocation) {\r\n        if (!hasWindow()) {\r\n            return\r\n        }\r\n        targetLocation = this._normalizeLocation(targetLocation);\r\n        this._updateIfNeed();\r\n        let location = this._location();\r\n        const {\r\n            useNative: useNative\r\n        } = this.option();\r\n        if (!useNative) {\r\n            const strategy = this._strategy;\r\n            targetLocation = strategy._applyScaleRatio(targetLocation);\r\n            location = strategy._applyScaleRatio(location)\r\n        }\r\n        if (this._isRtlNativeStrategy()) {\r\n            location.left -= this._getMaxOffset().left\r\n        }\r\n        const distance = this._normalizeLocation({\r\n            left: location.left - ensureDefined(targetLocation.left, location.left),\r\n            top: location.top - ensureDefined(targetLocation.top, location.top)\r\n        });\r\n        if (!distance.top && !distance.left) {\r\n            return\r\n        }\r\n        this._strategy.scrollBy(distance)\r\n    }\r\n    scrollToElement(element, offset) {\r\n        const $element = $(element);\r\n        const elementInsideContent = this.$content().find(element).length;\r\n        const elementIsInsideContent = $element.parents(\".dx-scrollable\").length - $element.parents(\".dx-scrollable-content\").length === 0;\r\n        if (!elementInsideContent || !elementIsInsideContent) {\r\n            return\r\n        }\r\n        const scrollPosition = {\r\n            top: 0,\r\n            left: 0\r\n        };\r\n        const {\r\n            direction: direction\r\n        } = this.option();\r\n        if (direction !== VERTICAL) {\r\n            scrollPosition.left = this.getScrollElementPosition($element, HORIZONTAL, offset)\r\n        }\r\n        if (direction !== HORIZONTAL) {\r\n            scrollPosition.top = this.getScrollElementPosition($element, VERTICAL, offset)\r\n        }\r\n        this.scrollTo(scrollPosition)\r\n    }\r\n    getScrollElementPosition($element, direction, offset) {\r\n        const scrollOffset = this.scrollOffset();\r\n        return getElementLocationInternal($element.get(0), direction, $(this.container()).get(0), scrollOffset, offset)\r\n    }\r\n    _updateIfNeed() {\r\n        if (!this.option(\"updateManually\")) {\r\n            this.update()\r\n        }\r\n    }\r\n    _useTemplates() {\r\n        return false\r\n    }\r\n    isRenovated() {\r\n        return !!Scrollable.IS_RENOVATED_WIDGET\r\n    }\r\n}\r\nregisterComponent(SCROLLABLE, Scrollable);\r\nexport default Scrollable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}