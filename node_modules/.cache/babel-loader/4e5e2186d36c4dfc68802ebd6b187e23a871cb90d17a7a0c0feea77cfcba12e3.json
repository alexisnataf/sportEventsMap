{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/ui/text_box/texteditor_button_collection/m_index.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport $ from \"../../../../core/renderer\";\nimport errors from \"../../../../ui/widget/ui.errors\";\nimport CustomButton from \"./m_custom\";\nconst TEXTEDITOR_BUTTONS_CONTAINER_CLASS = \"dx-texteditor-buttons-container\";\nfunction checkButtonInfo(buttonInfo) {\n  (() => {\n    if (!buttonInfo || \"object\" !== typeof buttonInfo || Array.isArray(buttonInfo)) {\n      throw errors.Error(\"E1053\");\n    }\n  })();\n  (() => {\n    if (!(\"name\" in buttonInfo)) {\n      throw errors.Error(\"E1054\");\n    }\n  })();\n  (() => {\n    const {\n      name: name\n    } = buttonInfo;\n    if (\"string\" !== typeof name) {\n      throw errors.Error(\"E1055\");\n    }\n  })();\n  (() => {\n    const {\n      location: location\n    } = buttonInfo;\n    if (\"location\" in buttonInfo && \"after\" !== location && \"before\" !== location) {\n      buttonInfo.location = \"after\";\n    }\n  })();\n}\nfunction checkNamesUniqueness(existingNames, newName) {\n  if (existingNames.includes(newName)) {\n    throw errors.Error(\"E1055\", newName);\n  }\n  existingNames.push(newName);\n}\nfunction isPredefinedButtonName(name, predefinedButtonsInfo) {\n  return !!predefinedButtonsInfo.find(info => info.name === name);\n}\nexport default class TextEditorButtonCollection {\n  constructor(editor, defaultButtonsInfo) {\n    this.buttons = [];\n    this.defaultButtonsInfo = defaultButtonsInfo;\n    this.editor = editor;\n  }\n  _compileButtonInfo(buttons) {\n    const names = [];\n    return buttons.map(button => {\n      const isStringButton = \"string\" === typeof button;\n      if (!isStringButton) {\n        checkButtonInfo(button);\n      }\n      const isDefaultButton = isStringButton || isPredefinedButtonName(button.name, this.defaultButtonsInfo);\n      if (isDefaultButton) {\n        const defaultButtonInfo = this.defaultButtonsInfo.find(_ref => {\n          let {\n            name: name\n          } = _ref;\n          return name === button || name === button.name;\n        });\n        if (!defaultButtonInfo) {\n          throw errors.Error(\"E1056\", this.editor.NAME, button);\n        }\n        checkNamesUniqueness(names, button);\n        return defaultButtonInfo;\n      }\n      const {\n        name: name\n      } = button;\n      checkNamesUniqueness(names, name);\n      return _extends({}, button, {\n        Ctor: CustomButton\n      });\n    });\n  }\n  _createButton(buttonsInfo) {\n    const {\n      Ctor: Ctor,\n      options: options,\n      name: name\n    } = buttonsInfo;\n    const button = new Ctor(name, this.editor, options);\n    this.buttons.push(button);\n    return button;\n  }\n  _renderButtons(buttons, $container, targetLocation) {\n    let $buttonsContainer = null;\n    const buttonsInfo = buttons ? this._compileButtonInfo(buttons) : this.defaultButtonsInfo;\n    buttonsInfo.forEach(buttonInfo => {\n      const {\n        location = \"after\"\n      } = buttonInfo;\n      if (location === targetLocation) {\n        this._createButton(buttonInfo).render((() => {\n          $buttonsContainer = $buttonsContainer ?? $(\"<div>\").addClass(\"dx-texteditor-buttons-container\");\n          if (\"before\" === targetLocation) {\n            $container.prepend($buttonsContainer);\n          } else {\n            $container.append($buttonsContainer);\n          }\n          return $buttonsContainer;\n        })());\n      }\n    });\n    return $buttonsContainer;\n  }\n  clean() {\n    this.buttons.forEach(button => button.dispose());\n    this.buttons = [];\n  }\n  getButton(buttonName) {\n    const button = this.buttons.find(_ref2 => {\n      let {\n        name: name\n      } = _ref2;\n      return name === buttonName;\n    });\n    return null === button || void 0 === button ? void 0 : button.instance;\n  }\n  renderAfterButtons(buttons, $container) {\n    return this._renderButtons(buttons, $container, \"after\");\n  }\n  renderBeforeButtons(buttons, $container) {\n    return this._renderButtons(buttons, $container, \"before\");\n  }\n  updateButtons(names) {\n    this.buttons.forEach(button => {\n      if (!names || names.includes(button.name)) {\n        button.update();\n      }\n    });\n  }\n}","map":{"version":3,"names":["_extends","$","errors","CustomButton","TEXTEDITOR_BUTTONS_CONTAINER_CLASS","checkButtonInfo","buttonInfo","Array","isArray","Error","name","location","checkNamesUniqueness","existingNames","newName","includes","push","isPredefinedButtonName","predefinedButtonsInfo","find","info","TextEditorButtonCollection","constructor","editor","defaultButtonsInfo","buttons","_compileButtonInfo","names","map","button","isStringButton","isDefaultButton","defaultButtonInfo","_ref","NAME","Ctor","_createButton","buttonsInfo","options","_renderButtons","$container","targetLocation","$buttonsContainer","forEach","render","addClass","prepend","append","clean","dispose","getButton","buttonName","_ref2","instance","renderAfterButtons","renderBeforeButtons","updateButtons","update"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/ui/text_box/texteditor_button_collection/m_index.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/ui/text_box/texteditor_button_collection/m_index.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport $ from \"../../../../core/renderer\";\r\nimport errors from \"../../../../ui/widget/ui.errors\";\r\nimport CustomButton from \"./m_custom\";\r\nconst TEXTEDITOR_BUTTONS_CONTAINER_CLASS = \"dx-texteditor-buttons-container\";\r\n\r\nfunction checkButtonInfo(buttonInfo) {\r\n    (() => {\r\n        if (!buttonInfo || \"object\" !== typeof buttonInfo || Array.isArray(buttonInfo)) {\r\n            throw errors.Error(\"E1053\")\r\n        }\r\n    })();\r\n    (() => {\r\n        if (!(\"name\" in buttonInfo)) {\r\n            throw errors.Error(\"E1054\")\r\n        }\r\n    })();\r\n    (() => {\r\n        const {\r\n            name: name\r\n        } = buttonInfo;\r\n        if (\"string\" !== typeof name) {\r\n            throw errors.Error(\"E1055\")\r\n        }\r\n    })();\r\n    (() => {\r\n        const {\r\n            location: location\r\n        } = buttonInfo;\r\n        if (\"location\" in buttonInfo && \"after\" !== location && \"before\" !== location) {\r\n            buttonInfo.location = \"after\"\r\n        }\r\n    })()\r\n}\r\n\r\nfunction checkNamesUniqueness(existingNames, newName) {\r\n    if (existingNames.includes(newName)) {\r\n        throw errors.Error(\"E1055\", newName)\r\n    }\r\n    existingNames.push(newName)\r\n}\r\n\r\nfunction isPredefinedButtonName(name, predefinedButtonsInfo) {\r\n    return !!predefinedButtonsInfo.find((info => info.name === name))\r\n}\r\nexport default class TextEditorButtonCollection {\r\n    constructor(editor, defaultButtonsInfo) {\r\n        this.buttons = [];\r\n        this.defaultButtonsInfo = defaultButtonsInfo;\r\n        this.editor = editor\r\n    }\r\n    _compileButtonInfo(buttons) {\r\n        const names = [];\r\n        return buttons.map((button => {\r\n            const isStringButton = \"string\" === typeof button;\r\n            if (!isStringButton) {\r\n                checkButtonInfo(button)\r\n            }\r\n            const isDefaultButton = isStringButton || isPredefinedButtonName(button.name, this.defaultButtonsInfo);\r\n            if (isDefaultButton) {\r\n                const defaultButtonInfo = this.defaultButtonsInfo.find((_ref => {\r\n                    let {\r\n                        name: name\r\n                    } = _ref;\r\n                    return name === button || name === button.name\r\n                }));\r\n                if (!defaultButtonInfo) {\r\n                    throw errors.Error(\"E1056\", this.editor.NAME, button)\r\n                }\r\n                checkNamesUniqueness(names, button);\r\n                return defaultButtonInfo\r\n            }\r\n            const {\r\n                name: name\r\n            } = button;\r\n            checkNamesUniqueness(names, name);\r\n            return _extends({}, button, {\r\n                Ctor: CustomButton\r\n            })\r\n        }))\r\n    }\r\n    _createButton(buttonsInfo) {\r\n        const {\r\n            Ctor: Ctor,\r\n            options: options,\r\n            name: name\r\n        } = buttonsInfo;\r\n        const button = new Ctor(name, this.editor, options);\r\n        this.buttons.push(button);\r\n        return button\r\n    }\r\n    _renderButtons(buttons, $container, targetLocation) {\r\n        let $buttonsContainer = null;\r\n        const buttonsInfo = buttons ? this._compileButtonInfo(buttons) : this.defaultButtonsInfo;\r\n        buttonsInfo.forEach((buttonInfo => {\r\n            const {\r\n                location: location = \"after\"\r\n            } = buttonInfo;\r\n            if (location === targetLocation) {\r\n                this._createButton(buttonInfo).render((() => {\r\n                    $buttonsContainer = $buttonsContainer ?? $(\"<div>\").addClass(\"dx-texteditor-buttons-container\");\r\n                    if (\"before\" === targetLocation) {\r\n                        $container.prepend($buttonsContainer)\r\n                    } else {\r\n                        $container.append($buttonsContainer)\r\n                    }\r\n                    return $buttonsContainer\r\n                })())\r\n            }\r\n        }));\r\n        return $buttonsContainer\r\n    }\r\n    clean() {\r\n        this.buttons.forEach((button => button.dispose()));\r\n        this.buttons = []\r\n    }\r\n    getButton(buttonName) {\r\n        const button = this.buttons.find((_ref2 => {\r\n            let {\r\n                name: name\r\n            } = _ref2;\r\n            return name === buttonName\r\n        }));\r\n        return null === button || void 0 === button ? void 0 : button.instance\r\n    }\r\n    renderAfterButtons(buttons, $container) {\r\n        return this._renderButtons(buttons, $container, \"after\")\r\n    }\r\n    renderBeforeButtons(buttons, $container) {\r\n        return this._renderButtons(buttons, $container, \"before\")\r\n    }\r\n    updateButtons(names) {\r\n        this.buttons.forEach((button => {\r\n            if (!names || names.includes(button.name)) {\r\n                button.update()\r\n            }\r\n        }))\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}