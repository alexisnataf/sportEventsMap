{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/core/utils/m_template_manager.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport config from \"../../../core/config\";\nimport devices from \"../../../core/devices\";\nimport { getPublicElement } from \"../../../core/element\";\nimport Errors from \"../../../core/errors\";\nimport $ from \"../../../core/renderer\";\nimport { ChildDefaultTemplate } from \"../../../core/templates/child_default_template\";\nimport { EmptyTemplate } from \"../../../core/templates/empty_template\";\nimport { Template } from \"../../../core/templates/template\";\nimport { TemplateBase } from \"../../../core/templates/template_base\";\nimport { groupBy } from \"../../../core/utils/array\";\nimport { findBestMatches } from \"../../../core/utils/common\";\nimport { extend } from \"../../../core/utils/extend\";\nimport domUtils from \"./m_dom\";\nimport typeUtils from \"./m_type\";\nexport const findTemplates = (element, name) => {\n  const templates = $(element).contents().filter(`[data-options*=\"${name}\"]`);\n  return [].slice.call(templates).map(element => {\n    const optionsString = $(element).attr(\"data-options\") || \"\";\n    return {\n      element: element,\n      options: config().optionsParser(optionsString)[name]\n    };\n  }).filter(template => !!template.options);\n};\nexport const suitableTemplatesByName = rawTemplates => {\n  const templatesMap = groupBy(rawTemplates, template => template.options.name);\n  if (templatesMap.undefined) {\n    throw Errors.Error(\"E0023\");\n  }\n  const result = {};\n  Object.keys(templatesMap).forEach(name => {\n    var _findBestMatches$;\n    const suitableTemplate = null === (_findBestMatches$ = findBestMatches(devices.current(), templatesMap[name], template => template.options)[0]) || void 0 === _findBestMatches$ ? void 0 : _findBestMatches$.element;\n    if (suitableTemplate) {\n      result[name] = suitableTemplate;\n    }\n  });\n  return result;\n};\nexport const addOneRenderedCall = template => {\n  const render = template.render.bind(template);\n  return extend({}, template, {\n    render(options) {\n      const templateResult = render(options);\n      options && options.onRendered && options.onRendered();\n      return templateResult;\n    }\n  });\n};\nexport const addPublicElementNormalization = template => {\n  const render = template.render.bind(template);\n  return extend({}, template, {\n    render(options) {\n      const $container = $(options.container);\n      return render(_extends({}, options, {\n        container: getPublicElement($container)\n      }));\n    }\n  });\n};\nexport const getNormalizedTemplateArgs = options => {\n  const args = [];\n  if (\"model\" in options) {\n    args.push(options.model);\n  }\n  if (\"index\" in options) {\n    args.push(options.index);\n  }\n  args.push(options.container);\n  return args;\n};\nexport const validateTemplateSource = templateSource => \"string\" === typeof templateSource ? domUtils.normalizeTemplateElement(templateSource) : templateSource;\nexport const templateKey = templateSource => typeUtils.isRenderer(templateSource) && templateSource[0] || templateSource;\nexport const defaultCreateElement = element => new Template(element);\nexport const acquireIntegrationTemplate = (templateSource, templates, isAsyncTemplate, skipTemplates) => {\n  let integrationTemplate = null;\n  if (!skipTemplates || -1 === skipTemplates.indexOf(templateSource)) {\n    integrationTemplate = templates[templateSource];\n    if (integrationTemplate && !(integrationTemplate instanceof TemplateBase)) {\n      if (typeUtils.isFunction(integrationTemplate.render)) {\n        integrationTemplate = addPublicElementNormalization(integrationTemplate);\n      }\n      if (!isAsyncTemplate) {\n        integrationTemplate = addOneRenderedCall(integrationTemplate);\n      }\n    }\n  }\n  return integrationTemplate;\n};\nexport const acquireTemplate = (templateSource, createTemplate, templates, isAsyncTemplate, skipTemplates, defaultTemplates) => {\n  if (null == templateSource) {\n    return new EmptyTemplate();\n  }\n  if (templateSource instanceof ChildDefaultTemplate) {\n    return defaultTemplates[templateSource.name];\n  }\n  if (templateSource instanceof TemplateBase) {\n    return templateSource;\n  }\n  if (typeUtils.isFunction(templateSource.render) && !typeUtils.isRenderer(templateSource)) {\n    return isAsyncTemplate ? templateSource : addOneRenderedCall(templateSource);\n  }\n  if (templateSource.nodeType || typeUtils.isRenderer(templateSource)) {\n    return createTemplate($(templateSource));\n  }\n  return acquireIntegrationTemplate(templateSource, templates, isAsyncTemplate, skipTemplates) || defaultTemplates[templateSource] || createTemplate(templateSource);\n};\nexport default {\n  findTemplates: findTemplates,\n  suitableTemplatesByName: suitableTemplatesByName,\n  addOneRenderedCall: addOneRenderedCall,\n  addPublicElementNormalization: addPublicElementNormalization,\n  getNormalizedTemplateArgs: getNormalizedTemplateArgs,\n  validateTemplateSource: validateTemplateSource,\n  templateKey: templateKey,\n  defaultCreateElement: defaultCreateElement,\n  acquireIntegrationTemplate: acquireIntegrationTemplate,\n  acquireTemplate: acquireTemplate\n};","map":{"version":3,"names":["_extends","config","devices","getPublicElement","Errors","$","ChildDefaultTemplate","EmptyTemplate","Template","TemplateBase","groupBy","findBestMatches","extend","domUtils","typeUtils","findTemplates","element","name","templates","contents","filter","slice","call","map","optionsString","attr","options","optionsParser","template","suitableTemplatesByName","rawTemplates","templatesMap","undefined","Error","result","Object","keys","forEach","_findBestMatches$","suitableTemplate","current","addOneRenderedCall","render","bind","templateResult","onRendered","addPublicElementNormalization","$container","container","getNormalizedTemplateArgs","args","push","model","index","validateTemplateSource","templateSource","normalizeTemplateElement","templateKey","isRenderer","defaultCreateElement","acquireIntegrationTemplate","isAsyncTemplate","skipTemplates","integrationTemplate","indexOf","isFunction","acquireTemplate","createTemplate","defaultTemplates","nodeType"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/core/utils/m_template_manager.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/core/utils/m_template_manager.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport config from \"../../../core/config\";\r\nimport devices from \"../../../core/devices\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../../core/element\";\r\nimport Errors from \"../../../core/errors\";\r\nimport $ from \"../../../core/renderer\";\r\nimport {\r\n    ChildDefaultTemplate\r\n} from \"../../../core/templates/child_default_template\";\r\nimport {\r\n    EmptyTemplate\r\n} from \"../../../core/templates/empty_template\";\r\nimport {\r\n    Template\r\n} from \"../../../core/templates/template\";\r\nimport {\r\n    TemplateBase\r\n} from \"../../../core/templates/template_base\";\r\nimport {\r\n    groupBy\r\n} from \"../../../core/utils/array\";\r\nimport {\r\n    findBestMatches\r\n} from \"../../../core/utils/common\";\r\nimport {\r\n    extend\r\n} from \"../../../core/utils/extend\";\r\nimport domUtils from \"./m_dom\";\r\nimport typeUtils from \"./m_type\";\r\nexport const findTemplates = (element, name) => {\r\n    const templates = $(element).contents().filter(`[data-options*=\"${name}\"]`);\r\n    return [].slice.call(templates).map((element => {\r\n        const optionsString = $(element).attr(\"data-options\") || \"\";\r\n        return {\r\n            element: element,\r\n            options: config().optionsParser(optionsString)[name]\r\n        }\r\n    })).filter((template => !!template.options))\r\n};\r\nexport const suitableTemplatesByName = rawTemplates => {\r\n    const templatesMap = groupBy(rawTemplates, (template => template.options.name));\r\n    if (templatesMap.undefined) {\r\n        throw Errors.Error(\"E0023\")\r\n    }\r\n    const result = {};\r\n    Object.keys(templatesMap).forEach((name => {\r\n        var _findBestMatches$;\r\n        const suitableTemplate = null === (_findBestMatches$ = findBestMatches(devices.current(), templatesMap[name], (template => template.options))[0]) || void 0 === _findBestMatches$ ? void 0 : _findBestMatches$.element;\r\n        if (suitableTemplate) {\r\n            result[name] = suitableTemplate\r\n        }\r\n    }));\r\n    return result\r\n};\r\nexport const addOneRenderedCall = template => {\r\n    const render = template.render.bind(template);\r\n    return extend({}, template, {\r\n        render(options) {\r\n            const templateResult = render(options);\r\n            options && options.onRendered && options.onRendered();\r\n            return templateResult\r\n        }\r\n    })\r\n};\r\nexport const addPublicElementNormalization = template => {\r\n    const render = template.render.bind(template);\r\n    return extend({}, template, {\r\n        render(options) {\r\n            const $container = $(options.container);\r\n            return render(_extends({}, options, {\r\n                container: getPublicElement($container)\r\n            }))\r\n        }\r\n    })\r\n};\r\nexport const getNormalizedTemplateArgs = options => {\r\n    const args = [];\r\n    if (\"model\" in options) {\r\n        args.push(options.model)\r\n    }\r\n    if (\"index\" in options) {\r\n        args.push(options.index)\r\n    }\r\n    args.push(options.container);\r\n    return args\r\n};\r\nexport const validateTemplateSource = templateSource => \"string\" === typeof templateSource ? domUtils.normalizeTemplateElement(templateSource) : templateSource;\r\nexport const templateKey = templateSource => typeUtils.isRenderer(templateSource) && templateSource[0] || templateSource;\r\nexport const defaultCreateElement = element => new Template(element);\r\nexport const acquireIntegrationTemplate = (templateSource, templates, isAsyncTemplate, skipTemplates) => {\r\n    let integrationTemplate = null;\r\n    if (!skipTemplates || -1 === skipTemplates.indexOf(templateSource)) {\r\n        integrationTemplate = templates[templateSource];\r\n        if (integrationTemplate && !(integrationTemplate instanceof TemplateBase)) {\r\n            if (typeUtils.isFunction(integrationTemplate.render)) {\r\n                integrationTemplate = addPublicElementNormalization(integrationTemplate)\r\n            }\r\n            if (!isAsyncTemplate) {\r\n                integrationTemplate = addOneRenderedCall(integrationTemplate)\r\n            }\r\n        }\r\n    }\r\n    return integrationTemplate\r\n};\r\nexport const acquireTemplate = (templateSource, createTemplate, templates, isAsyncTemplate, skipTemplates, defaultTemplates) => {\r\n    if (null == templateSource) {\r\n        return new EmptyTemplate\r\n    }\r\n    if (templateSource instanceof ChildDefaultTemplate) {\r\n        return defaultTemplates[templateSource.name]\r\n    }\r\n    if (templateSource instanceof TemplateBase) {\r\n        return templateSource\r\n    }\r\n    if (typeUtils.isFunction(templateSource.render) && !typeUtils.isRenderer(templateSource)) {\r\n        return isAsyncTemplate ? templateSource : addOneRenderedCall(templateSource)\r\n    }\r\n    if (templateSource.nodeType || typeUtils.isRenderer(templateSource)) {\r\n        return createTemplate($(templateSource))\r\n    }\r\n    return acquireIntegrationTemplate(templateSource, templates, isAsyncTemplate, skipTemplates) || defaultTemplates[templateSource] || createTemplate(templateSource)\r\n};\r\nexport default {\r\n    findTemplates: findTemplates,\r\n    suitableTemplatesByName: suitableTemplatesByName,\r\n    addOneRenderedCall: addOneRenderedCall,\r\n    addPublicElementNormalization: addPublicElementNormalization,\r\n    getNormalizedTemplateArgs: getNormalizedTemplateArgs,\r\n    validateTemplateSource: validateTemplateSource,\r\n    templateKey: templateKey,\r\n    defaultCreateElement: defaultCreateElement,\r\n    acquireIntegrationTemplate: acquireIntegrationTemplate,\r\n    acquireTemplate: acquireTemplate\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}