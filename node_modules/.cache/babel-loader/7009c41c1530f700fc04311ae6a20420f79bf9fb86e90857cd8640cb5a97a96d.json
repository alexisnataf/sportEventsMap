{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/events/pointer/m_mouse_and_touch.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport BaseStrategy from \"../../../common/core/events/pointer/base\";\nimport MouseStrategy from \"../../../common/core/events/pointer/mouse\";\nimport TouchStrategy from \"../../../common/core/events/pointer/touch\";\nimport { isMouseEvent } from \"../../../common/core/events/utils/index\";\nimport { extend } from \"../../../core/utils/extend\";\nconst eventMap = {\n  dxpointerdown: \"touchstart mousedown\",\n  dxpointermove: \"touchmove mousemove\",\n  dxpointerup: \"touchend mouseup\",\n  dxpointercancel: \"touchcancel\",\n  dxpointerover: \"mouseover\",\n  dxpointerout: \"mouseout\",\n  dxpointerenter: \"mouseenter\",\n  dxpointerleave: \"mouseleave\"\n};\nlet activated = false;\nconst activateStrategy = function () {\n  if (activated) {\n    return;\n  }\n  MouseStrategy.activate();\n  activated = true;\n};\nconst MouseAndTouchStrategy = BaseStrategy.inherit({\n  EVENT_LOCK_TIMEOUT: 100,\n  ctor() {\n    this.callBase.apply(this, arguments);\n    activateStrategy();\n  },\n  _handler(e) {\n    const isMouse = isMouseEvent(e);\n    if (!isMouse) {\n      this._skipNextEvents = true;\n    }\n    if (isMouse && this._mouseLocked) {\n      return;\n    }\n    if (isMouse && this._skipNextEvents) {\n      this._skipNextEvents = false;\n      this._mouseLocked = true;\n      clearTimeout(this._unlockMouseTimer);\n      const that = this;\n      this._unlockMouseTimer = setTimeout(() => {\n        that._mouseLocked = false;\n      }, this.EVENT_LOCK_TIMEOUT);\n      return;\n    }\n    return this.callBase(e);\n  },\n  _fireEvent(args) {\n    const normalizer = isMouseEvent(args.originalEvent) ? MouseStrategy.normalize : TouchStrategy.normalize;\n    return this.callBase(extend(normalizer(args.originalEvent), args));\n  },\n  dispose() {\n    this.callBase();\n    this._skipNextEvents = false;\n    this._mouseLocked = false;\n    clearTimeout(this._unlockMouseTimer);\n  }\n});\nMouseAndTouchStrategy.map = eventMap;\nMouseAndTouchStrategy.resetObserver = MouseStrategy.resetObserver;\nexport default MouseAndTouchStrategy;","map":{"version":3,"names":["BaseStrategy","MouseStrategy","TouchStrategy","isMouseEvent","extend","eventMap","dxpointerdown","dxpointermove","dxpointerup","dxpointercancel","dxpointerover","dxpointerout","dxpointerenter","dxpointerleave","activated","activateStrategy","activate","MouseAndTouchStrategy","inherit","EVENT_LOCK_TIMEOUT","ctor","callBase","apply","arguments","_handler","e","isMouse","_skipNextEvents","_mouseLocked","clearTimeout","_unlockMouseTimer","that","setTimeout","_fireEvent","args","normalizer","originalEvent","normalize","dispose","map","resetObserver"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/events/pointer/m_mouse_and_touch.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/events/pointer/m_mouse_and_touch.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport BaseStrategy from \"../../../common/core/events/pointer/base\";\r\nimport MouseStrategy from \"../../../common/core/events/pointer/mouse\";\r\nimport TouchStrategy from \"../../../common/core/events/pointer/touch\";\r\nimport {\r\n    isMouseEvent\r\n} from \"../../../common/core/events/utils/index\";\r\nimport {\r\n    extend\r\n} from \"../../../core/utils/extend\";\r\nconst eventMap = {\r\n    dxpointerdown: \"touchstart mousedown\",\r\n    dxpointermove: \"touchmove mousemove\",\r\n    dxpointerup: \"touchend mouseup\",\r\n    dxpointercancel: \"touchcancel\",\r\n    dxpointerover: \"mouseover\",\r\n    dxpointerout: \"mouseout\",\r\n    dxpointerenter: \"mouseenter\",\r\n    dxpointerleave: \"mouseleave\"\r\n};\r\nlet activated = false;\r\nconst activateStrategy = function() {\r\n    if (activated) {\r\n        return\r\n    }\r\n    MouseStrategy.activate();\r\n    activated = true\r\n};\r\nconst MouseAndTouchStrategy = BaseStrategy.inherit({\r\n    EVENT_LOCK_TIMEOUT: 100,\r\n    ctor() {\r\n        this.callBase.apply(this, arguments);\r\n        activateStrategy()\r\n    },\r\n    _handler(e) {\r\n        const isMouse = isMouseEvent(e);\r\n        if (!isMouse) {\r\n            this._skipNextEvents = true\r\n        }\r\n        if (isMouse && this._mouseLocked) {\r\n            return\r\n        }\r\n        if (isMouse && this._skipNextEvents) {\r\n            this._skipNextEvents = false;\r\n            this._mouseLocked = true;\r\n            clearTimeout(this._unlockMouseTimer);\r\n            const that = this;\r\n            this._unlockMouseTimer = setTimeout((() => {\r\n                that._mouseLocked = false\r\n            }), this.EVENT_LOCK_TIMEOUT);\r\n            return\r\n        }\r\n        return this.callBase(e)\r\n    },\r\n    _fireEvent(args) {\r\n        const normalizer = isMouseEvent(args.originalEvent) ? MouseStrategy.normalize : TouchStrategy.normalize;\r\n        return this.callBase(extend(normalizer(args.originalEvent), args))\r\n    },\r\n    dispose() {\r\n        this.callBase();\r\n        this._skipNextEvents = false;\r\n        this._mouseLocked = false;\r\n        clearTimeout(this._unlockMouseTimer)\r\n    }\r\n});\r\nMouseAndTouchStrategy.map = eventMap;\r\nMouseAndTouchStrategy.resetObserver = MouseStrategy.resetObserver;\r\nexport default MouseAndTouchStrategy;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,YAAY,MAAM,0CAA0C;AACnE,OAAOC,aAAa,MAAM,2CAA2C;AACrE,OAAOC,aAAa,MAAM,2CAA2C;AACrE,SACIC,YAAY,QACT,yCAAyC;AAChD,SACIC,MAAM,QACH,4BAA4B;AACnC,MAAMC,QAAQ,GAAG;EACbC,aAAa,EAAE,sBAAsB;EACrCC,aAAa,EAAE,qBAAqB;EACpCC,WAAW,EAAE,kBAAkB;EAC/BC,eAAe,EAAE,aAAa;EAC9BC,aAAa,EAAE,WAAW;EAC1BC,YAAY,EAAE,UAAU;EACxBC,cAAc,EAAE,YAAY;EAC5BC,cAAc,EAAE;AACpB,CAAC;AACD,IAAIC,SAAS,GAAG,KAAK;AACrB,MAAMC,gBAAgB,GAAG,SAAAA,CAAA,EAAW;EAChC,IAAID,SAAS,EAAE;IACX;EACJ;EACAb,aAAa,CAACe,QAAQ,CAAC,CAAC;EACxBF,SAAS,GAAG,IAAI;AACpB,CAAC;AACD,MAAMG,qBAAqB,GAAGjB,YAAY,CAACkB,OAAO,CAAC;EAC/CC,kBAAkB,EAAE,GAAG;EACvBC,IAAIA,CAAA,EAAG;IACH,IAAI,CAACC,QAAQ,CAACC,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;IACpCR,gBAAgB,CAAC,CAAC;EACtB,CAAC;EACDS,QAAQA,CAACC,CAAC,EAAE;IACR,MAAMC,OAAO,GAAGvB,YAAY,CAACsB,CAAC,CAAC;IAC/B,IAAI,CAACC,OAAO,EAAE;MACV,IAAI,CAACC,eAAe,GAAG,IAAI;IAC/B;IACA,IAAID,OAAO,IAAI,IAAI,CAACE,YAAY,EAAE;MAC9B;IACJ;IACA,IAAIF,OAAO,IAAI,IAAI,CAACC,eAAe,EAAE;MACjC,IAAI,CAACA,eAAe,GAAG,KAAK;MAC5B,IAAI,CAACC,YAAY,GAAG,IAAI;MACxBC,YAAY,CAAC,IAAI,CAACC,iBAAiB,CAAC;MACpC,MAAMC,IAAI,GAAG,IAAI;MACjB,IAAI,CAACD,iBAAiB,GAAGE,UAAU,CAAE,MAAM;QACvCD,IAAI,CAACH,YAAY,GAAG,KAAK;MAC7B,CAAC,EAAG,IAAI,CAACT,kBAAkB,CAAC;MAC5B;IACJ;IACA,OAAO,IAAI,CAACE,QAAQ,CAACI,CAAC,CAAC;EAC3B,CAAC;EACDQ,UAAUA,CAACC,IAAI,EAAE;IACb,MAAMC,UAAU,GAAGhC,YAAY,CAAC+B,IAAI,CAACE,aAAa,CAAC,GAAGnC,aAAa,CAACoC,SAAS,GAAGnC,aAAa,CAACmC,SAAS;IACvG,OAAO,IAAI,CAAChB,QAAQ,CAACjB,MAAM,CAAC+B,UAAU,CAACD,IAAI,CAACE,aAAa,CAAC,EAAEF,IAAI,CAAC,CAAC;EACtE,CAAC;EACDI,OAAOA,CAAA,EAAG;IACN,IAAI,CAACjB,QAAQ,CAAC,CAAC;IACf,IAAI,CAACM,eAAe,GAAG,KAAK;IAC5B,IAAI,CAACC,YAAY,GAAG,KAAK;IACzBC,YAAY,CAAC,IAAI,CAACC,iBAAiB,CAAC;EACxC;AACJ,CAAC,CAAC;AACFb,qBAAqB,CAACsB,GAAG,GAAGlC,QAAQ;AACpCY,qBAAqB,CAACuB,aAAa,GAAGvC,aAAa,CAACuC,aAAa;AACjE,eAAevB,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}