{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/ui/text_box/m_text_editor.label.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { name as click } from \"../../../common/core/events/click\";\nimport { active } from \"../../../common/core/events/core/emitter.feedback\";\nimport eventsEngine from \"../../../common/core/events/core/events_engine\";\nimport { start as hoverStart } from \"../../../common/core/events/hover\";\nimport { addNamespace } from \"../../../common/core/events/utils/index\";\nimport Guid from \"../../../core/guid\";\nimport $ from \"../../../core/renderer\";\nimport { getWidth } from \"../../../core/utils/size\";\nimport { getWindow } from \"../../../core/utils/window\";\nconst TEXTEDITOR_LABEL_CLASS = \"dx-texteditor-label\";\nconst TEXTEDITOR_WITH_LABEL_CLASS = \"dx-texteditor-with-label\";\nconst TEXTEDITOR_LABEL_OUTSIDE_CLASS = \"dx-texteditor-label-outside\";\nconst TEXTEDITOR_WITH_FLOATING_LABEL_CLASS = \"dx-texteditor-with-floating-label\";\nconst TEXTEDITOR_WITH_BEFORE_BUTTONS_CLASS = \"dx-texteditor-with-before-buttons\";\nconst LABEL_BEFORE_CLASS = \"dx-label-before\";\nconst LABEL_CLASS = \"dx-label\";\nconst LABEL_AFTER_CLASS = \"dx-label-after\";\nclass TextEditorLabel {\n  constructor(props) {\n    this.NAME = \"dxLabel\";\n    this._props = props;\n    this._id = `dx-texteditor-label-${new Guid()}`;\n    this._render();\n    this._toggleMarkupVisibility();\n  }\n  _isVisible() {\n    return !!this._props.text && \"hidden\" !== this._props.mode;\n  }\n  _render() {\n    this._$before = $(\"<div>\").addClass(\"dx-label-before\");\n    this._$labelSpan = $(\"<span>\");\n    this._$label = $(\"<div>\").addClass(\"dx-label\").append(this._$labelSpan);\n    this._$after = $(\"<div>\").addClass(\"dx-label-after\");\n    this._$root = $(\"<div>\").addClass(\"dx-texteditor-label\").attr(\"id\", this._id).append(this._$before).append(this._$label).append(this._$after);\n    this._updateMark();\n    this._updateText();\n    this._updateBeforeWidth();\n    this._updateMaxWidth();\n  }\n  _toggleMarkupVisibility() {\n    const visible = this._isVisible();\n    this._updateEditorBeforeButtonsClass(visible);\n    this._updateEditorLabelClass(visible);\n    visible ? this._$root.appendTo(this._props.$editor) : this._$root.detach();\n    this._attachEvents();\n  }\n  _attachEvents() {\n    const clickEventName = addNamespace(click, this.NAME);\n    const hoverStartEventName = addNamespace(hoverStart, this.NAME);\n    const activeEventName = addNamespace(active, this.NAME);\n    eventsEngine.off(this._$labelSpan, clickEventName);\n    eventsEngine.off(this._$labelSpan, hoverStartEventName);\n    eventsEngine.off(this._$labelSpan, activeEventName);\n    if (this._isVisible() && this._isOutsideMode()) {\n      eventsEngine.on(this._$labelSpan, clickEventName, e => {\n        const selectedText = getWindow().getSelection().toString();\n        if (\"\" === selectedText) {\n          this._props.onClickHandler();\n          e.preventDefault();\n        }\n      });\n      eventsEngine.on(this._$labelSpan, hoverStartEventName, e => {\n        this._props.onHoverHandler(e);\n      });\n      eventsEngine.on(this._$labelSpan, activeEventName, e => {\n        this._props.onActiveHandler(e);\n      });\n    }\n  }\n  _updateEditorLabelClass(visible) {\n    this._props.$editor.removeClass(\"dx-texteditor-with-floating-label\").removeClass(\"dx-texteditor-label-outside\").removeClass(\"dx-texteditor-with-label\");\n    if (visible) {\n      const labelClass = \"floating\" === this._props.mode ? \"dx-texteditor-with-floating-label\" : \"dx-texteditor-with-label\";\n      this._props.$editor.addClass(labelClass);\n      if (this._isOutsideMode()) {\n        this._props.$editor.addClass(\"dx-texteditor-label-outside\");\n      }\n    }\n  }\n  _isOutsideMode() {\n    return \"outside\" === this._props.mode;\n  }\n  _updateEditorBeforeButtonsClass() {\n    let visible = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._isVisible();\n    this._props.$editor.removeClass(\"dx-texteditor-with-before-buttons\");\n    if (visible) {\n      const beforeButtonsClass = this._props.containsButtonsBefore ? \"dx-texteditor-with-before-buttons\" : \"\";\n      this._props.$editor.addClass(beforeButtonsClass);\n    }\n  }\n  _updateMark() {\n    this._$labelSpan.attr(\"data-mark\", this._props.mark);\n  }\n  _updateText() {\n    this._$labelSpan.text(this._props.text);\n  }\n  _updateBeforeWidth() {\n    if (this._isVisible()) {\n      const width = this._props.beforeWidth ?? this._props.getBeforeWidth();\n      this._$before.css({\n        width: width\n      });\n      this._updateLabelTransform();\n    }\n  }\n  _updateLabelTransform() {\n    let offset = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;\n    this._$labelSpan.css(\"transform\", \"\");\n    if (this._isVisible() && this._isOutsideMode()) {\n      const sign = this._props.rtlEnabled ? 1 : -1;\n      const labelTranslateX = sign * (getWidth(this._$before) + offset);\n      this._$labelSpan.css(\"transform\", `translateX(${labelTranslateX}px)`);\n    }\n  }\n  _updateMaxWidth() {\n    if (this._isVisible() && !this._isOutsideMode()) {\n      const maxWidth = this._props.containerWidth ?? this._props.getContainerWidth();\n      this._$label.css({\n        maxWidth: maxWidth\n      });\n    }\n  }\n  $element() {\n    return this._$root;\n  }\n  isVisible() {\n    return this._isVisible();\n  }\n  getId() {\n    if (this._isVisible()) {\n      return this._id;\n    }\n  }\n  updateMode(mode) {\n    this._props.mode = mode;\n    this._toggleMarkupVisibility();\n    this._updateBeforeWidth();\n    this._updateMaxWidth();\n  }\n  updateText(text) {\n    this._props.text = text;\n    this._updateText();\n    this._toggleMarkupVisibility();\n    this._updateBeforeWidth();\n    this._updateMaxWidth();\n  }\n  updateMark(mark) {\n    this._props.mark = mark;\n    this._updateMark();\n  }\n  updateContainsButtonsBefore(containsButtonsBefore) {\n    this._props.containsButtonsBefore = containsButtonsBefore;\n    this._updateEditorBeforeButtonsClass();\n  }\n  updateBeforeWidth(beforeWidth) {\n    this._props.beforeWidth = beforeWidth;\n    this._updateBeforeWidth();\n  }\n  updateMaxWidth(containerWidth) {\n    this._props.containerWidth = containerWidth;\n    this._updateMaxWidth();\n  }\n}\nexport { TextEditorLabel };","map":{"version":3,"names":["name","click","active","eventsEngine","start","hoverStart","addNamespace","Guid","$","getWidth","getWindow","TEXTEDITOR_LABEL_CLASS","TEXTEDITOR_WITH_LABEL_CLASS","TEXTEDITOR_LABEL_OUTSIDE_CLASS","TEXTEDITOR_WITH_FLOATING_LABEL_CLASS","TEXTEDITOR_WITH_BEFORE_BUTTONS_CLASS","LABEL_BEFORE_CLASS","LABEL_CLASS","LABEL_AFTER_CLASS","TextEditorLabel","constructor","props","NAME","_props","_id","_render","_toggleMarkupVisibility","_isVisible","text","mode","_$before","addClass","_$labelSpan","_$label","append","_$after","_$root","attr","_updateMark","_updateText","_updateBeforeWidth","_updateMaxWidth","visible","_updateEditorBeforeButtonsClass","_updateEditorLabelClass","appendTo","$editor","detach","_attachEvents","clickEventName","hoverStartEventName","activeEventName","off","_isOutsideMode","on","e","selectedText","getSelection","toString","onClickHandler","preventDefault","onHoverHandler","onActiveHandler","removeClass","labelClass","arguments","length","beforeButtonsClass","containsButtonsBefore","mark","width","beforeWidth","getBeforeWidth","css","_updateLabelTransform","offset","sign","rtlEnabled","labelTranslateX","maxWidth","containerWidth","getContainerWidth","$element","isVisible","getId","updateMode","updateText","updateMark","updateContainsButtonsBefore","updateBeforeWidth","updateMaxWidth"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/ui/text_box/m_text_editor.label.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/ui/text_box/m_text_editor.label.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    name as click\r\n} from \"../../../common/core/events/click\";\r\nimport {\r\n    active\r\n} from \"../../../common/core/events/core/emitter.feedback\";\r\nimport eventsEngine from \"../../../common/core/events/core/events_engine\";\r\nimport {\r\n    start as hoverStart\r\n} from \"../../../common/core/events/hover\";\r\nimport {\r\n    addNamespace\r\n} from \"../../../common/core/events/utils/index\";\r\nimport Guid from \"../../../core/guid\";\r\nimport $ from \"../../../core/renderer\";\r\nimport {\r\n    getWidth\r\n} from \"../../../core/utils/size\";\r\nimport {\r\n    getWindow\r\n} from \"../../../core/utils/window\";\r\nconst TEXTEDITOR_LABEL_CLASS = \"dx-texteditor-label\";\r\nconst TEXTEDITOR_WITH_LABEL_CLASS = \"dx-texteditor-with-label\";\r\nconst TEXTEDITOR_LABEL_OUTSIDE_CLASS = \"dx-texteditor-label-outside\";\r\nconst TEXTEDITOR_WITH_FLOATING_LABEL_CLASS = \"dx-texteditor-with-floating-label\";\r\nconst TEXTEDITOR_WITH_BEFORE_BUTTONS_CLASS = \"dx-texteditor-with-before-buttons\";\r\nconst LABEL_BEFORE_CLASS = \"dx-label-before\";\r\nconst LABEL_CLASS = \"dx-label\";\r\nconst LABEL_AFTER_CLASS = \"dx-label-after\";\r\nclass TextEditorLabel {\r\n    constructor(props) {\r\n        this.NAME = \"dxLabel\";\r\n        this._props = props;\r\n        this._id = `dx-texteditor-label-${new Guid}`;\r\n        this._render();\r\n        this._toggleMarkupVisibility()\r\n    }\r\n    _isVisible() {\r\n        return !!this._props.text && \"hidden\" !== this._props.mode\r\n    }\r\n    _render() {\r\n        this._$before = $(\"<div>\").addClass(\"dx-label-before\");\r\n        this._$labelSpan = $(\"<span>\");\r\n        this._$label = $(\"<div>\").addClass(\"dx-label\").append(this._$labelSpan);\r\n        this._$after = $(\"<div>\").addClass(\"dx-label-after\");\r\n        this._$root = $(\"<div>\").addClass(\"dx-texteditor-label\").attr(\"id\", this._id).append(this._$before).append(this._$label).append(this._$after);\r\n        this._updateMark();\r\n        this._updateText();\r\n        this._updateBeforeWidth();\r\n        this._updateMaxWidth()\r\n    }\r\n    _toggleMarkupVisibility() {\r\n        const visible = this._isVisible();\r\n        this._updateEditorBeforeButtonsClass(visible);\r\n        this._updateEditorLabelClass(visible);\r\n        visible ? this._$root.appendTo(this._props.$editor) : this._$root.detach();\r\n        this._attachEvents()\r\n    }\r\n    _attachEvents() {\r\n        const clickEventName = addNamespace(click, this.NAME);\r\n        const hoverStartEventName = addNamespace(hoverStart, this.NAME);\r\n        const activeEventName = addNamespace(active, this.NAME);\r\n        eventsEngine.off(this._$labelSpan, clickEventName);\r\n        eventsEngine.off(this._$labelSpan, hoverStartEventName);\r\n        eventsEngine.off(this._$labelSpan, activeEventName);\r\n        if (this._isVisible() && this._isOutsideMode()) {\r\n            eventsEngine.on(this._$labelSpan, clickEventName, (e => {\r\n                const selectedText = getWindow().getSelection().toString();\r\n                if (\"\" === selectedText) {\r\n                    this._props.onClickHandler();\r\n                    e.preventDefault()\r\n                }\r\n            }));\r\n            eventsEngine.on(this._$labelSpan, hoverStartEventName, (e => {\r\n                this._props.onHoverHandler(e)\r\n            }));\r\n            eventsEngine.on(this._$labelSpan, activeEventName, (e => {\r\n                this._props.onActiveHandler(e)\r\n            }))\r\n        }\r\n    }\r\n    _updateEditorLabelClass(visible) {\r\n        this._props.$editor.removeClass(\"dx-texteditor-with-floating-label\").removeClass(\"dx-texteditor-label-outside\").removeClass(\"dx-texteditor-with-label\");\r\n        if (visible) {\r\n            const labelClass = \"floating\" === this._props.mode ? \"dx-texteditor-with-floating-label\" : \"dx-texteditor-with-label\";\r\n            this._props.$editor.addClass(labelClass);\r\n            if (this._isOutsideMode()) {\r\n                this._props.$editor.addClass(\"dx-texteditor-label-outside\")\r\n            }\r\n        }\r\n    }\r\n    _isOutsideMode() {\r\n        return \"outside\" === this._props.mode\r\n    }\r\n    _updateEditorBeforeButtonsClass() {\r\n        let visible = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._isVisible();\r\n        this._props.$editor.removeClass(\"dx-texteditor-with-before-buttons\");\r\n        if (visible) {\r\n            const beforeButtonsClass = this._props.containsButtonsBefore ? \"dx-texteditor-with-before-buttons\" : \"\";\r\n            this._props.$editor.addClass(beforeButtonsClass)\r\n        }\r\n    }\r\n    _updateMark() {\r\n        this._$labelSpan.attr(\"data-mark\", this._props.mark)\r\n    }\r\n    _updateText() {\r\n        this._$labelSpan.text(this._props.text)\r\n    }\r\n    _updateBeforeWidth() {\r\n        if (this._isVisible()) {\r\n            const width = this._props.beforeWidth ?? this._props.getBeforeWidth();\r\n            this._$before.css({\r\n                width: width\r\n            });\r\n            this._updateLabelTransform()\r\n        }\r\n    }\r\n    _updateLabelTransform() {\r\n        let offset = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;\r\n        this._$labelSpan.css(\"transform\", \"\");\r\n        if (this._isVisible() && this._isOutsideMode()) {\r\n            const sign = this._props.rtlEnabled ? 1 : -1;\r\n            const labelTranslateX = sign * (getWidth(this._$before) + offset);\r\n            this._$labelSpan.css(\"transform\", `translateX(${labelTranslateX}px)`)\r\n        }\r\n    }\r\n    _updateMaxWidth() {\r\n        if (this._isVisible() && !this._isOutsideMode()) {\r\n            const maxWidth = this._props.containerWidth ?? this._props.getContainerWidth();\r\n            this._$label.css({\r\n                maxWidth: maxWidth\r\n            })\r\n        }\r\n    }\r\n    $element() {\r\n        return this._$root\r\n    }\r\n    isVisible() {\r\n        return this._isVisible()\r\n    }\r\n    getId() {\r\n        if (this._isVisible()) {\r\n            return this._id\r\n        }\r\n    }\r\n    updateMode(mode) {\r\n        this._props.mode = mode;\r\n        this._toggleMarkupVisibility();\r\n        this._updateBeforeWidth();\r\n        this._updateMaxWidth()\r\n    }\r\n    updateText(text) {\r\n        this._props.text = text;\r\n        this._updateText();\r\n        this._toggleMarkupVisibility();\r\n        this._updateBeforeWidth();\r\n        this._updateMaxWidth()\r\n    }\r\n    updateMark(mark) {\r\n        this._props.mark = mark;\r\n        this._updateMark()\r\n    }\r\n    updateContainsButtonsBefore(containsButtonsBefore) {\r\n        this._props.containsButtonsBefore = containsButtonsBefore;\r\n        this._updateEditorBeforeButtonsClass()\r\n    }\r\n    updateBeforeWidth(beforeWidth) {\r\n        this._props.beforeWidth = beforeWidth;\r\n        this._updateBeforeWidth()\r\n    }\r\n    updateMaxWidth(containerWidth) {\r\n        this._props.containerWidth = containerWidth;\r\n        this._updateMaxWidth()\r\n    }\r\n}\r\nexport {\r\n    TextEditorLabel\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}