{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/core/utils/m_comparator.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport domAdapter from \"../../../core/dom_adapter\";\nimport { toComparable } from \"../../../core/utils/data\";\nimport { isRenderer } from \"../../../core/utils/type\";\nconst hasNegation = function (oldValue, newValue) {\n  return 1 / oldValue === 1 / newValue;\n};\nexport const equals = function (oldValue, newValue) {\n  oldValue = toComparable(oldValue, true);\n  newValue = toComparable(newValue, true);\n  if (oldValue && newValue && isRenderer(oldValue) && isRenderer(newValue)) {\n    return newValue.is(oldValue);\n  }\n  const oldValueIsNaN = oldValue !== oldValue;\n  const newValueIsNaN = newValue !== newValue;\n  if (oldValueIsNaN && newValueIsNaN) {\n    return true;\n  }\n  if (0 === oldValue && 0 === newValue) {\n    return hasNegation(oldValue, newValue);\n  }\n  if (null === oldValue || \"object\" !== typeof oldValue || domAdapter.isElementNode(oldValue)) {\n    return oldValue === newValue;\n  }\n  return false;\n};","map":{"version":3,"names":["domAdapter","toComparable","isRenderer","hasNegation","oldValue","newValue","equals","is","oldValueIsNaN","newValueIsNaN","isElementNode"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/core/utils/m_comparator.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/core/utils/m_comparator.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport domAdapter from \"../../../core/dom_adapter\";\r\nimport {\r\n    toComparable\r\n} from \"../../../core/utils/data\";\r\nimport {\r\n    isRenderer\r\n} from \"../../../core/utils/type\";\r\nconst hasNegation = function(oldValue, newValue) {\r\n    return 1 / oldValue === 1 / newValue\r\n};\r\nexport const equals = function(oldValue, newValue) {\r\n    oldValue = toComparable(oldValue, true);\r\n    newValue = toComparable(newValue, true);\r\n    if (oldValue && newValue && isRenderer(oldValue) && isRenderer(newValue)) {\r\n        return newValue.is(oldValue)\r\n    }\r\n    const oldValueIsNaN = oldValue !== oldValue;\r\n    const newValueIsNaN = newValue !== newValue;\r\n    if (oldValueIsNaN && newValueIsNaN) {\r\n        return true\r\n    }\r\n    if (0 === oldValue && 0 === newValue) {\r\n        return hasNegation(oldValue, newValue)\r\n    }\r\n    if (null === oldValue || \"object\" !== typeof oldValue || domAdapter.isElementNode(oldValue)) {\r\n        return oldValue === newValue\r\n    }\r\n    return false\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,UAAU,MAAM,2BAA2B;AAClD,SACIC,YAAY,QACT,0BAA0B;AACjC,SACIC,UAAU,QACP,0BAA0B;AACjC,MAAMC,WAAW,GAAG,SAAAA,CAASC,QAAQ,EAAEC,QAAQ,EAAE;EAC7C,OAAO,CAAC,GAAGD,QAAQ,KAAK,CAAC,GAAGC,QAAQ;AACxC,CAAC;AACD,OAAO,MAAMC,MAAM,GAAG,SAAAA,CAASF,QAAQ,EAAEC,QAAQ,EAAE;EAC/CD,QAAQ,GAAGH,YAAY,CAACG,QAAQ,EAAE,IAAI,CAAC;EACvCC,QAAQ,GAAGJ,YAAY,CAACI,QAAQ,EAAE,IAAI,CAAC;EACvC,IAAID,QAAQ,IAAIC,QAAQ,IAAIH,UAAU,CAACE,QAAQ,CAAC,IAAIF,UAAU,CAACG,QAAQ,CAAC,EAAE;IACtE,OAAOA,QAAQ,CAACE,EAAE,CAACH,QAAQ,CAAC;EAChC;EACA,MAAMI,aAAa,GAAGJ,QAAQ,KAAKA,QAAQ;EAC3C,MAAMK,aAAa,GAAGJ,QAAQ,KAAKA,QAAQ;EAC3C,IAAIG,aAAa,IAAIC,aAAa,EAAE;IAChC,OAAO,IAAI;EACf;EACA,IAAI,CAAC,KAAKL,QAAQ,IAAI,CAAC,KAAKC,QAAQ,EAAE;IAClC,OAAOF,WAAW,CAACC,QAAQ,EAAEC,QAAQ,CAAC;EAC1C;EACA,IAAI,IAAI,KAAKD,QAAQ,IAAI,QAAQ,KAAK,OAAOA,QAAQ,IAAIJ,UAAU,CAACU,aAAa,CAACN,QAAQ,CAAC,EAAE;IACzF,OAAOA,QAAQ,KAAKC,QAAQ;EAChC;EACA,OAAO,KAAK;AAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}