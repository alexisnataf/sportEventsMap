{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/events/pointer/m_mouse.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport BaseStrategy from \"../../../common/core/events/pointer/base\";\nimport Observer from \"../../../common/core/events/pointer/observer\";\nimport browser from \"../../../core/utils/browser\";\nimport { extend } from \"../../../core/utils/extend\";\nconst eventMap = {\n  dxpointerdown: \"mousedown\",\n  dxpointermove: \"mousemove\",\n  dxpointerup: \"mouseup\",\n  dxpointercancel: \"pointercancel\",\n  dxpointerover: \"mouseover\",\n  dxpointerout: \"mouseout\",\n  dxpointerenter: \"mouseenter\",\n  dxpointerleave: \"mouseleave\"\n};\nif (browser.safari) {\n  eventMap.dxpointercancel += \" dragstart\";\n}\nconst normalizeMouseEvent = function (e) {\n  e.pointerId = 1;\n  return {\n    pointers: observer.pointers(),\n    pointerId: 1\n  };\n};\nlet observer;\nlet activated = false;\nconst activateStrategy = function () {\n  if (activated) {\n    return;\n  }\n  observer = new Observer(eventMap, () => true);\n  activated = true;\n};\nconst MouseStrategy = BaseStrategy.inherit({\n  ctor() {\n    this.callBase.apply(this, arguments);\n    activateStrategy();\n  },\n  _fireEvent(args) {\n    return this.callBase(extend(normalizeMouseEvent(args.originalEvent), args));\n  }\n});\nMouseStrategy.map = eventMap;\nMouseStrategy.normalize = normalizeMouseEvent;\nMouseStrategy.activate = activateStrategy;\nMouseStrategy.resetObserver = function () {\n  observer.reset();\n};\nexport default MouseStrategy;","map":{"version":3,"names":["BaseStrategy","Observer","browser","extend","eventMap","dxpointerdown","dxpointermove","dxpointerup","dxpointercancel","dxpointerover","dxpointerout","dxpointerenter","dxpointerleave","safari","normalizeMouseEvent","e","pointerId","pointers","observer","activated","activateStrategy","MouseStrategy","inherit","ctor","callBase","apply","arguments","_fireEvent","args","originalEvent","map","normalize","activate","resetObserver","reset"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/events/pointer/m_mouse.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/events/pointer/m_mouse.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport BaseStrategy from \"../../../common/core/events/pointer/base\";\r\nimport Observer from \"../../../common/core/events/pointer/observer\";\r\nimport browser from \"../../../core/utils/browser\";\r\nimport {\r\n    extend\r\n} from \"../../../core/utils/extend\";\r\nconst eventMap = {\r\n    dxpointerdown: \"mousedown\",\r\n    dxpointermove: \"mousemove\",\r\n    dxpointerup: \"mouseup\",\r\n    dxpointercancel: \"pointercancel\",\r\n    dxpointerover: \"mouseover\",\r\n    dxpointerout: \"mouseout\",\r\n    dxpointerenter: \"mouseenter\",\r\n    dxpointerleave: \"mouseleave\"\r\n};\r\nif (browser.safari) {\r\n    eventMap.dxpointercancel += \" dragstart\"\r\n}\r\nconst normalizeMouseEvent = function(e) {\r\n    e.pointerId = 1;\r\n    return {\r\n        pointers: observer.pointers(),\r\n        pointerId: 1\r\n    }\r\n};\r\nlet observer;\r\nlet activated = false;\r\nconst activateStrategy = function() {\r\n    if (activated) {\r\n        return\r\n    }\r\n    observer = new Observer(eventMap, (() => true));\r\n    activated = true\r\n};\r\nconst MouseStrategy = BaseStrategy.inherit({\r\n    ctor() {\r\n        this.callBase.apply(this, arguments);\r\n        activateStrategy()\r\n    },\r\n    _fireEvent(args) {\r\n        return this.callBase(extend(normalizeMouseEvent(args.originalEvent), args))\r\n    }\r\n});\r\nMouseStrategy.map = eventMap;\r\nMouseStrategy.normalize = normalizeMouseEvent;\r\nMouseStrategy.activate = activateStrategy;\r\nMouseStrategy.resetObserver = function() {\r\n    observer.reset()\r\n};\r\nexport default MouseStrategy;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,YAAY,MAAM,0CAA0C;AACnE,OAAOC,QAAQ,MAAM,8CAA8C;AACnE,OAAOC,OAAO,MAAM,6BAA6B;AACjD,SACIC,MAAM,QACH,4BAA4B;AACnC,MAAMC,QAAQ,GAAG;EACbC,aAAa,EAAE,WAAW;EAC1BC,aAAa,EAAE,WAAW;EAC1BC,WAAW,EAAE,SAAS;EACtBC,eAAe,EAAE,eAAe;EAChCC,aAAa,EAAE,WAAW;EAC1BC,YAAY,EAAE,UAAU;EACxBC,cAAc,EAAE,YAAY;EAC5BC,cAAc,EAAE;AACpB,CAAC;AACD,IAAIV,OAAO,CAACW,MAAM,EAAE;EAChBT,QAAQ,CAACI,eAAe,IAAI,YAAY;AAC5C;AACA,MAAMM,mBAAmB,GAAG,SAAAA,CAASC,CAAC,EAAE;EACpCA,CAAC,CAACC,SAAS,GAAG,CAAC;EACf,OAAO;IACHC,QAAQ,EAAEC,QAAQ,CAACD,QAAQ,CAAC,CAAC;IAC7BD,SAAS,EAAE;EACf,CAAC;AACL,CAAC;AACD,IAAIE,QAAQ;AACZ,IAAIC,SAAS,GAAG,KAAK;AACrB,MAAMC,gBAAgB,GAAG,SAAAA,CAAA,EAAW;EAChC,IAAID,SAAS,EAAE;IACX;EACJ;EACAD,QAAQ,GAAG,IAAIjB,QAAQ,CAACG,QAAQ,EAAG,MAAM,IAAK,CAAC;EAC/Ce,SAAS,GAAG,IAAI;AACpB,CAAC;AACD,MAAME,aAAa,GAAGrB,YAAY,CAACsB,OAAO,CAAC;EACvCC,IAAIA,CAAA,EAAG;IACH,IAAI,CAACC,QAAQ,CAACC,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;IACpCN,gBAAgB,CAAC,CAAC;EACtB,CAAC;EACDO,UAAUA,CAACC,IAAI,EAAE;IACb,OAAO,IAAI,CAACJ,QAAQ,CAACrB,MAAM,CAACW,mBAAmB,CAACc,IAAI,CAACC,aAAa,CAAC,EAAED,IAAI,CAAC,CAAC;EAC/E;AACJ,CAAC,CAAC;AACFP,aAAa,CAACS,GAAG,GAAG1B,QAAQ;AAC5BiB,aAAa,CAACU,SAAS,GAAGjB,mBAAmB;AAC7CO,aAAa,CAACW,QAAQ,GAAGZ,gBAAgB;AACzCC,aAAa,CAACY,aAAa,GAAG,YAAW;EACrCf,QAAQ,CAACgB,KAAK,CAAC,CAAC;AACpB,CAAC;AACD,eAAeb,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}