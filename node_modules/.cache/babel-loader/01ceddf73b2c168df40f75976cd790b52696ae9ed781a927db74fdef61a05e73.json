{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/ui/selection/m_selection.strategy.deferred.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport dataQuery from \"../../../common/data/query\";\nimport { Deferred } from \"../../../core/utils/deferred\";\nimport { isString } from \"../../../core/utils/type\";\nimport errors from \"../../../ui/widget/ui.errors\";\nimport SelectionStrategy from \"./m_selection.strategy\";\nexport default class DeferredStrategy extends SelectionStrategy {\n  getSelectedItems() {\n    return this._loadFilteredData(this.options.selectionFilter);\n  }\n  getSelectedItemKeys() {\n    const d = Deferred();\n    const that = this;\n    const key = this.options.key();\n    const select = isString(key) ? [key] : key;\n    this._loadFilteredData(this.options.selectionFilter, null, select).done(items => {\n      const keys = items.map(item => that.options.keyOf(item));\n      d.resolve(keys);\n    }).fail(d.reject);\n    return d.promise();\n  }\n  selectedItemKeys(keys, preserve, isDeselect, isSelectAll) {\n    if (isSelectAll) {\n      const filter = this.options.filter();\n      const needResetSelectionFilter = !filter || JSON.stringify(filter) === JSON.stringify(this.options.selectionFilter) && isDeselect;\n      if (needResetSelectionFilter) {\n        this._setOption(\"selectionFilter\", isDeselect ? [] : null);\n      } else {\n        this._addSelectionFilter(isDeselect, filter, isSelectAll);\n      }\n    } else {\n      if (!preserve) {\n        this._setOption(\"selectionFilter\", []);\n      }\n      for (let i = 0; i < keys.length; i++) {\n        if (isDeselect) {\n          this.removeSelectedItem(keys[i]);\n        } else {\n          this.addSelectedItem(keys[i], isSelectAll, !preserve);\n        }\n      }\n    }\n    this.onSelectionChanged();\n    return Deferred().resolve();\n  }\n  setSelectedItems(keys) {\n    this._setOption(\"selectionFilter\", null);\n    for (let i = 0; i < keys.length; i++) {\n      this.addSelectedItem(keys[i]);\n    }\n  }\n  isItemDataSelected(itemData) {\n    return this.isItemKeySelected(itemData);\n  }\n  isItemKeySelected(itemData) {\n    const {\n      selectionFilter: selectionFilter,\n      sensitivity: sensitivity\n    } = this.options;\n    if (!selectionFilter) {\n      return true;\n    }\n    const queryParams = {\n      langParams: {\n        collatorOptions: {\n          sensitivity: sensitivity\n        }\n      }\n    };\n    return !!dataQuery([itemData], queryParams).filter(selectionFilter).toArray().length;\n  }\n  _getKeyExpr() {\n    const keyField = this.options.key();\n    if (Array.isArray(keyField) && 1 === keyField.length) {\n      return keyField[0];\n    }\n    return keyField;\n  }\n  _normalizeKey(key) {\n    const keyExpr = this.options.key();\n    if (Array.isArray(keyExpr) && 1 === keyExpr.length) {\n      return key[keyExpr[0]];\n    }\n    return key;\n  }\n  _getFilterByKey(key) {\n    const keyField = this._getKeyExpr();\n    let filter = [keyField, \"=\", this._normalizeKey(key)];\n    if (Array.isArray(keyField)) {\n      filter = [];\n      for (let i = 0; i < keyField.length; i++) {\n        filter.push([keyField[i], \"=\", key[keyField[i]]]);\n        if (i !== keyField.length - 1) {\n          filter.push(\"and\");\n        }\n      }\n    }\n    return filter;\n  }\n  addSelectedItem(key, isSelectAll, skipFilter) {\n    const filter = this._getFilterByKey(key);\n    this._addSelectionFilter(false, filter, isSelectAll, skipFilter);\n  }\n  removeSelectedItem(key) {\n    const filter = this._getFilterByKey(key);\n    this._addSelectionFilter(true, filter);\n  }\n  validate() {\n    const {\n      key: key\n    } = this.options;\n    if (key && void 0 === key()) {\n      throw errors.Error(\"E1042\", \"Deferred selection\");\n    }\n  }\n  _findSubFilter(selectionFilter, filter) {\n    if (!selectionFilter) {\n      return -1;\n    }\n    const filterString = JSON.stringify(filter);\n    for (let index = 0; index < selectionFilter.length; index++) {\n      const subFilter = selectionFilter[index];\n      if (subFilter && JSON.stringify(subFilter) === filterString) {\n        return index;\n      }\n    }\n    return -1;\n  }\n  _isLastSubFilter(selectionFilter, filter) {\n    if (selectionFilter && filter) {\n      return this._findSubFilter(selectionFilter, filter) === selectionFilter.length - 1 || 0 === this._findSubFilter([selectionFilter], filter);\n    }\n    return false;\n  }\n  _addFilterOperator(selectionFilter, filterOperator) {\n    if (selectionFilter.length > 1 && isString(selectionFilter[1]) && selectionFilter[1] !== filterOperator) {\n      selectionFilter = [selectionFilter];\n    }\n    if (selectionFilter.length) {\n      selectionFilter.push(filterOperator);\n    }\n    return selectionFilter;\n  }\n  _denormalizeFilter(filter) {\n    if (filter && isString(filter[0])) {\n      filter = [filter];\n    }\n    return filter;\n  }\n  _isOnlyNegativeFiltersLeft(filters) {\n    return filters.every((filterItem, i) => {\n      if (i % 2 === 0) {\n        return Array.isArray(filterItem) && \"!\" === filterItem[0];\n      }\n      return \"and\" === filterItem;\n    });\n  }\n  _addSelectionFilter(isDeselect, filter, isSelectAll, skipFilter) {\n    var _selectionFilter;\n    const that = this;\n    const currentFilter = isDeselect ? [\"!\", filter] : filter;\n    const currentOperation = isDeselect ? \"and\" : \"or\";\n    let needAddFilter = true;\n    let selectionFilter = that.options.selectionFilter || [];\n    selectionFilter = that._denormalizeFilter(selectionFilter);\n    if (null !== (_selectionFilter = selectionFilter) && void 0 !== _selectionFilter && _selectionFilter.length && !skipFilter) {\n      const removedIndex = that._removeSameFilter(selectionFilter, filter, isDeselect, isSelectAll);\n      const filterIndex = that._removeSameFilter(selectionFilter, filter, !isDeselect);\n      const shouldCleanFilter = isDeselect && (-1 !== removedIndex || -1 !== filterIndex) && this._isOnlyNegativeFiltersLeft(selectionFilter);\n      if (shouldCleanFilter) {\n        selectionFilter = [];\n      }\n      const isKeyOperatorsAfterRemoved = this._isKeyFilter(filter) && this._hasKeyFiltersOnlyStartingFromIndex(selectionFilter, filterIndex);\n      needAddFilter = filter.length && !isKeyOperatorsAfterRemoved;\n    }\n    if (needAddFilter) {\n      selectionFilter = that._addFilterOperator(selectionFilter, currentOperation);\n      selectionFilter.push(currentFilter);\n    }\n    selectionFilter = that._normalizeFilter(selectionFilter);\n    that._setOption(\"selectionFilter\", !isDeselect && !selectionFilter.length ? null : selectionFilter);\n  }\n  _normalizeFilter(filter) {\n    if (filter && 1 === filter.length) {\n      filter = filter[0];\n    }\n    return filter;\n  }\n  _removeFilterByIndex(filter, filterIndex, isSelectAll) {\n    const operation = filter[1];\n    if (filterIndex > 0) {\n      filter.splice(filterIndex - 1, 2);\n    } else {\n      filter.splice(filterIndex, 2);\n    }\n    if (isSelectAll && \"and\" === operation) {\n      filter.splice(0, filter.length);\n    }\n  }\n  _isSimpleKeyFilter(filter, key) {\n    return 3 === filter.length && filter[0] === key && \"=\" === filter[1];\n  }\n  _isKeyFilter(filter) {\n    if (2 === filter.length && \"!\" === filter[0]) {\n      return this._isKeyFilter(filter[1]);\n    }\n    const keyField = this._getKeyExpr();\n    if (Array.isArray(keyField)) {\n      if (filter.length !== 2 * keyField.length - 1) {\n        return false;\n      }\n      for (let i = 0; i < keyField.length; i++) {\n        if (i > 0 && \"and\" !== filter[2 * i - 1]) {\n          return false;\n        }\n        if (!this._isSimpleKeyFilter(filter[2 * i], keyField[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return this._isSimpleKeyFilter(filter, keyField);\n  }\n  _hasKeyFiltersOnlyStartingFromIndex(selectionFilter, filterIndex) {\n    if (filterIndex >= 0) {\n      for (let i = filterIndex; i < selectionFilter.length; i++) {\n        if (\"string\" !== typeof selectionFilter[i] && !this._isKeyFilter(selectionFilter[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n  _removeSameFilter(selectionFilter, filter, inverted, isSelectAll) {\n    filter = inverted ? [\"!\", filter] : filter;\n    if (JSON.stringify(filter) === JSON.stringify(selectionFilter)) {\n      selectionFilter.splice(0, selectionFilter.length);\n      return 0;\n    }\n    const filterIndex = this._findSubFilter(selectionFilter, filter);\n    if (filterIndex >= 0) {\n      this._removeFilterByIndex(selectionFilter, filterIndex, isSelectAll);\n      return filterIndex;\n    }\n    for (let i = 0; i < selectionFilter.length; i++) {\n      if (Array.isArray(selectionFilter[i]) && selectionFilter[i].length > 2) {\n        const filterIndex = this._removeSameFilter(selectionFilter[i], filter, false, isSelectAll);\n        if (filterIndex >= 0) {\n          if (!selectionFilter[i].length) {\n            this._removeFilterByIndex(selectionFilter, i, isSelectAll);\n          } else if (1 === selectionFilter[i].length) {\n            selectionFilter[i] = selectionFilter[i][0];\n          }\n          return filterIndex;\n        }\n      }\n    }\n    return -1;\n  }\n  getSelectAllState() {\n    const filter = this.options.filter();\n    let {\n      selectionFilter: selectionFilter\n    } = this.options;\n    if (!selectionFilter) {\n      return true;\n    }\n    if (!selectionFilter.length) {\n      return false;\n    }\n    if (!filter || !filter.length) {\n      return;\n    }\n    selectionFilter = this._denormalizeFilter(selectionFilter);\n    if (this._isLastSubFilter(selectionFilter, filter)) {\n      return true;\n    }\n    if (this._isLastSubFilter(selectionFilter, [\"!\", filter])) {\n      return false;\n    }\n    return;\n  }\n  loadSelectedItemsWithFilter() {\n    const componentFilter = this.options.filter();\n    const {\n      selectionFilter: selectionFilter\n    } = this.options;\n    const filter = componentFilter ? [componentFilter, \"and\", selectionFilter] : selectionFilter;\n    return this._loadFilteredData(filter);\n  }\n  _onePageSelectAll(isDeselect) {\n    this._selectAllPlainItems(isDeselect);\n    this.onSelectionChanged();\n    return Deferred().resolve();\n  }\n}","map":{"version":3,"names":["dataQuery","Deferred","isString","errors","SelectionStrategy","DeferredStrategy","getSelectedItems","_loadFilteredData","options","selectionFilter","getSelectedItemKeys","d","that","key","select","done","items","keys","map","item","keyOf","resolve","fail","reject","promise","selectedItemKeys","preserve","isDeselect","isSelectAll","filter","needResetSelectionFilter","JSON","stringify","_setOption","_addSelectionFilter","i","length","removeSelectedItem","addSelectedItem","onSelectionChanged","setSelectedItems","isItemDataSelected","itemData","isItemKeySelected","sensitivity","queryParams","langParams","collatorOptions","toArray","_getKeyExpr","keyField","Array","isArray","_normalizeKey","keyExpr","_getFilterByKey","push","skipFilter","validate","Error","_findSubFilter","filterString","index","subFilter","_isLastSubFilter","_addFilterOperator","filterOperator","_denormalizeFilter","_isOnlyNegativeFiltersLeft","filters","every","filterItem","_selectionFilter","currentFilter","currentOperation","needAddFilter","removedIndex","_removeSameFilter","filterIndex","shouldCleanFilter","isKeyOperatorsAfterRemoved","_isKeyFilter","_hasKeyFiltersOnlyStartingFromIndex","_normalizeFilter","_removeFilterByIndex","operation","splice","_isSimpleKeyFilter","inverted","getSelectAllState","loadSelectedItemsWithFilter","componentFilter","_onePageSelectAll","_selectAllPlainItems"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/ui/selection/m_selection.strategy.deferred.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/ui/selection/m_selection.strategy.deferred.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport dataQuery from \"../../../common/data/query\";\r\nimport {\r\n    Deferred\r\n} from \"../../../core/utils/deferred\";\r\nimport {\r\n    isString\r\n} from \"../../../core/utils/type\";\r\nimport errors from \"../../../ui/widget/ui.errors\";\r\nimport SelectionStrategy from \"./m_selection.strategy\";\r\nexport default class DeferredStrategy extends SelectionStrategy {\r\n    getSelectedItems() {\r\n        return this._loadFilteredData(this.options.selectionFilter)\r\n    }\r\n    getSelectedItemKeys() {\r\n        const d = Deferred();\r\n        const that = this;\r\n        const key = this.options.key();\r\n        const select = isString(key) ? [key] : key;\r\n        this._loadFilteredData(this.options.selectionFilter, null, select).done((items => {\r\n            const keys = items.map((item => that.options.keyOf(item)));\r\n            d.resolve(keys)\r\n        })).fail(d.reject);\r\n        return d.promise()\r\n    }\r\n    selectedItemKeys(keys, preserve, isDeselect, isSelectAll) {\r\n        if (isSelectAll) {\r\n            const filter = this.options.filter();\r\n            const needResetSelectionFilter = !filter || JSON.stringify(filter) === JSON.stringify(this.options.selectionFilter) && isDeselect;\r\n            if (needResetSelectionFilter) {\r\n                this._setOption(\"selectionFilter\", isDeselect ? [] : null)\r\n            } else {\r\n                this._addSelectionFilter(isDeselect, filter, isSelectAll)\r\n            }\r\n        } else {\r\n            if (!preserve) {\r\n                this._setOption(\"selectionFilter\", [])\r\n            }\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (isDeselect) {\r\n                    this.removeSelectedItem(keys[i])\r\n                } else {\r\n                    this.addSelectedItem(keys[i], isSelectAll, !preserve)\r\n                }\r\n            }\r\n        }\r\n        this.onSelectionChanged();\r\n        return Deferred().resolve()\r\n    }\r\n    setSelectedItems(keys) {\r\n        this._setOption(\"selectionFilter\", null);\r\n        for (let i = 0; i < keys.length; i++) {\r\n            this.addSelectedItem(keys[i])\r\n        }\r\n    }\r\n    isItemDataSelected(itemData) {\r\n        return this.isItemKeySelected(itemData)\r\n    }\r\n    isItemKeySelected(itemData) {\r\n        const {\r\n            selectionFilter: selectionFilter,\r\n            sensitivity: sensitivity\r\n        } = this.options;\r\n        if (!selectionFilter) {\r\n            return true\r\n        }\r\n        const queryParams = {\r\n            langParams: {\r\n                collatorOptions: {\r\n                    sensitivity: sensitivity\r\n                }\r\n            }\r\n        };\r\n        return !!dataQuery([itemData], queryParams).filter(selectionFilter).toArray().length\r\n    }\r\n    _getKeyExpr() {\r\n        const keyField = this.options.key();\r\n        if (Array.isArray(keyField) && 1 === keyField.length) {\r\n            return keyField[0]\r\n        }\r\n        return keyField\r\n    }\r\n    _normalizeKey(key) {\r\n        const keyExpr = this.options.key();\r\n        if (Array.isArray(keyExpr) && 1 === keyExpr.length) {\r\n            return key[keyExpr[0]]\r\n        }\r\n        return key\r\n    }\r\n    _getFilterByKey(key) {\r\n        const keyField = this._getKeyExpr();\r\n        let filter = [keyField, \"=\", this._normalizeKey(key)];\r\n        if (Array.isArray(keyField)) {\r\n            filter = [];\r\n            for (let i = 0; i < keyField.length; i++) {\r\n                filter.push([keyField[i], \"=\", key[keyField[i]]]);\r\n                if (i !== keyField.length - 1) {\r\n                    filter.push(\"and\")\r\n                }\r\n            }\r\n        }\r\n        return filter\r\n    }\r\n    addSelectedItem(key, isSelectAll, skipFilter) {\r\n        const filter = this._getFilterByKey(key);\r\n        this._addSelectionFilter(false, filter, isSelectAll, skipFilter)\r\n    }\r\n    removeSelectedItem(key) {\r\n        const filter = this._getFilterByKey(key);\r\n        this._addSelectionFilter(true, filter)\r\n    }\r\n    validate() {\r\n        const {\r\n            key: key\r\n        } = this.options;\r\n        if (key && void 0 === key()) {\r\n            throw errors.Error(\"E1042\", \"Deferred selection\")\r\n        }\r\n    }\r\n    _findSubFilter(selectionFilter, filter) {\r\n        if (!selectionFilter) {\r\n            return -1\r\n        }\r\n        const filterString = JSON.stringify(filter);\r\n        for (let index = 0; index < selectionFilter.length; index++) {\r\n            const subFilter = selectionFilter[index];\r\n            if (subFilter && JSON.stringify(subFilter) === filterString) {\r\n                return index\r\n            }\r\n        }\r\n        return -1\r\n    }\r\n    _isLastSubFilter(selectionFilter, filter) {\r\n        if (selectionFilter && filter) {\r\n            return this._findSubFilter(selectionFilter, filter) === selectionFilter.length - 1 || 0 === this._findSubFilter([selectionFilter], filter)\r\n        }\r\n        return false\r\n    }\r\n    _addFilterOperator(selectionFilter, filterOperator) {\r\n        if (selectionFilter.length > 1 && isString(selectionFilter[1]) && selectionFilter[1] !== filterOperator) {\r\n            selectionFilter = [selectionFilter]\r\n        }\r\n        if (selectionFilter.length) {\r\n            selectionFilter.push(filterOperator)\r\n        }\r\n        return selectionFilter\r\n    }\r\n    _denormalizeFilter(filter) {\r\n        if (filter && isString(filter[0])) {\r\n            filter = [filter]\r\n        }\r\n        return filter\r\n    }\r\n    _isOnlyNegativeFiltersLeft(filters) {\r\n        return filters.every(((filterItem, i) => {\r\n            if (i % 2 === 0) {\r\n                return Array.isArray(filterItem) && \"!\" === filterItem[0]\r\n            }\r\n            return \"and\" === filterItem\r\n        }))\r\n    }\r\n    _addSelectionFilter(isDeselect, filter, isSelectAll, skipFilter) {\r\n        var _selectionFilter;\r\n        const that = this;\r\n        const currentFilter = isDeselect ? [\"!\", filter] : filter;\r\n        const currentOperation = isDeselect ? \"and\" : \"or\";\r\n        let needAddFilter = true;\r\n        let selectionFilter = that.options.selectionFilter || [];\r\n        selectionFilter = that._denormalizeFilter(selectionFilter);\r\n        if (null !== (_selectionFilter = selectionFilter) && void 0 !== _selectionFilter && _selectionFilter.length && !skipFilter) {\r\n            const removedIndex = that._removeSameFilter(selectionFilter, filter, isDeselect, isSelectAll);\r\n            const filterIndex = that._removeSameFilter(selectionFilter, filter, !isDeselect);\r\n            const shouldCleanFilter = isDeselect && (-1 !== removedIndex || -1 !== filterIndex) && this._isOnlyNegativeFiltersLeft(selectionFilter);\r\n            if (shouldCleanFilter) {\r\n                selectionFilter = []\r\n            }\r\n            const isKeyOperatorsAfterRemoved = this._isKeyFilter(filter) && this._hasKeyFiltersOnlyStartingFromIndex(selectionFilter, filterIndex);\r\n            needAddFilter = filter.length && !isKeyOperatorsAfterRemoved\r\n        }\r\n        if (needAddFilter) {\r\n            selectionFilter = that._addFilterOperator(selectionFilter, currentOperation);\r\n            selectionFilter.push(currentFilter)\r\n        }\r\n        selectionFilter = that._normalizeFilter(selectionFilter);\r\n        that._setOption(\"selectionFilter\", !isDeselect && !selectionFilter.length ? null : selectionFilter)\r\n    }\r\n    _normalizeFilter(filter) {\r\n        if (filter && 1 === filter.length) {\r\n            filter = filter[0]\r\n        }\r\n        return filter\r\n    }\r\n    _removeFilterByIndex(filter, filterIndex, isSelectAll) {\r\n        const operation = filter[1];\r\n        if (filterIndex > 0) {\r\n            filter.splice(filterIndex - 1, 2)\r\n        } else {\r\n            filter.splice(filterIndex, 2)\r\n        }\r\n        if (isSelectAll && \"and\" === operation) {\r\n            filter.splice(0, filter.length)\r\n        }\r\n    }\r\n    _isSimpleKeyFilter(filter, key) {\r\n        return 3 === filter.length && filter[0] === key && \"=\" === filter[1]\r\n    }\r\n    _isKeyFilter(filter) {\r\n        if (2 === filter.length && \"!\" === filter[0]) {\r\n            return this._isKeyFilter(filter[1])\r\n        }\r\n        const keyField = this._getKeyExpr();\r\n        if (Array.isArray(keyField)) {\r\n            if (filter.length !== 2 * keyField.length - 1) {\r\n                return false\r\n            }\r\n            for (let i = 0; i < keyField.length; i++) {\r\n                if (i > 0 && \"and\" !== filter[2 * i - 1]) {\r\n                    return false\r\n                }\r\n                if (!this._isSimpleKeyFilter(filter[2 * i], keyField[i])) {\r\n                    return false\r\n                }\r\n            }\r\n            return true\r\n        }\r\n        return this._isSimpleKeyFilter(filter, keyField)\r\n    }\r\n    _hasKeyFiltersOnlyStartingFromIndex(selectionFilter, filterIndex) {\r\n        if (filterIndex >= 0) {\r\n            for (let i = filterIndex; i < selectionFilter.length; i++) {\r\n                if (\"string\" !== typeof selectionFilter[i] && !this._isKeyFilter(selectionFilter[i])) {\r\n                    return false\r\n                }\r\n            }\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n    _removeSameFilter(selectionFilter, filter, inverted, isSelectAll) {\r\n        filter = inverted ? [\"!\", filter] : filter;\r\n        if (JSON.stringify(filter) === JSON.stringify(selectionFilter)) {\r\n            selectionFilter.splice(0, selectionFilter.length);\r\n            return 0\r\n        }\r\n        const filterIndex = this._findSubFilter(selectionFilter, filter);\r\n        if (filterIndex >= 0) {\r\n            this._removeFilterByIndex(selectionFilter, filterIndex, isSelectAll);\r\n            return filterIndex\r\n        }\r\n        for (let i = 0; i < selectionFilter.length; i++) {\r\n            if (Array.isArray(selectionFilter[i]) && selectionFilter[i].length > 2) {\r\n                const filterIndex = this._removeSameFilter(selectionFilter[i], filter, false, isSelectAll);\r\n                if (filterIndex >= 0) {\r\n                    if (!selectionFilter[i].length) {\r\n                        this._removeFilterByIndex(selectionFilter, i, isSelectAll)\r\n                    } else if (1 === selectionFilter[i].length) {\r\n                        selectionFilter[i] = selectionFilter[i][0]\r\n                    }\r\n                    return filterIndex\r\n                }\r\n            }\r\n        }\r\n        return -1\r\n    }\r\n    getSelectAllState() {\r\n        const filter = this.options.filter();\r\n        let {\r\n            selectionFilter: selectionFilter\r\n        } = this.options;\r\n        if (!selectionFilter) {\r\n            return true\r\n        }\r\n        if (!selectionFilter.length) {\r\n            return false\r\n        }\r\n        if (!filter || !filter.length) {\r\n            return\r\n        }\r\n        selectionFilter = this._denormalizeFilter(selectionFilter);\r\n        if (this._isLastSubFilter(selectionFilter, filter)) {\r\n            return true\r\n        }\r\n        if (this._isLastSubFilter(selectionFilter, [\"!\", filter])) {\r\n            return false\r\n        }\r\n        return\r\n    }\r\n    loadSelectedItemsWithFilter() {\r\n        const componentFilter = this.options.filter();\r\n        const {\r\n            selectionFilter: selectionFilter\r\n        } = this.options;\r\n        const filter = componentFilter ? [componentFilter, \"and\", selectionFilter] : selectionFilter;\r\n        return this._loadFilteredData(filter)\r\n    }\r\n    _onePageSelectAll(isDeselect) {\r\n        this._selectAllPlainItems(isDeselect);\r\n        this.onSelectionChanged();\r\n        return Deferred().resolve()\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}