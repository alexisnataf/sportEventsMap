{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/core/m_devices.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport Config from \"../../core/config\";\nimport errors from \"../../core/errors\";\nimport { EventsStrategy } from \"../../core/events_strategy\";\nimport $ from \"../../core/renderer\";\nimport Callbacks from \"../../core/utils/callbacks\";\nimport { when } from \"../../core/utils/deferred\";\nimport { extend } from \"../../core/utils/extend\";\nimport readyCallbacks from \"../../core/utils/ready_callbacks\";\nimport resizeCallbacks from \"../../core/utils/resize_callbacks\";\nimport { getHeight, getWidth } from \"../../core/utils/size\";\nimport { sessionStorage as SessionStorage } from \"../../core/utils/storage\";\nimport { isPlainObject } from \"../../core/utils/type\";\nimport { changeCallback, value as viewPort } from \"../../core/utils/view_port\";\nimport { getNavigator, getWindow, hasWindow } from \"../../core/utils/window\";\nimport { uiLayerInitialized } from \"../core/utils/m_common\";\nconst window = getWindow();\nconst KNOWN_UA_TABLE = {\n  iPhone: \"iPhone\",\n  iPhone5: \"iPhone\",\n  iPhone6: \"iPhone\",\n  iPhone6plus: \"iPhone\",\n  iPad: \"iPad\",\n  iPadMini: \"iPad Mini\",\n  androidPhone: \"Android Mobile\",\n  androidTablet: \"Android\",\n  msSurface: \"Windows ARM Tablet PC\",\n  desktop: \"desktop\"\n};\nconst DEFAULT_DEVICE = {\n  deviceType: \"desktop\",\n  platform: \"generic\",\n  version: [],\n  phone: false,\n  tablet: false,\n  android: false,\n  ios: false,\n  generic: true,\n  grade: \"A\",\n  mac: false\n};\nconst UA_PARSERS = {\n  generic(userAgent) {\n    const isPhone = /windows phone/i.test(userAgent) || userAgent.match(/WPDesktop/);\n    const isTablet = !isPhone && /Windows(.*)arm(.*)Tablet PC/i.test(userAgent);\n    const isDesktop = !isPhone && !isTablet && /msapphost/i.test(userAgent);\n    const isMac = /((intel|ppc) mac os x)/.test(userAgent.toLowerCase());\n    if (!(isPhone || isTablet || isDesktop || isMac)) {\n      return null;\n    }\n    return {\n      deviceType: isPhone ? \"phone\" : isTablet ? \"tablet\" : \"desktop\",\n      platform: \"generic\",\n      version: [],\n      grade: \"A\",\n      mac: isMac\n    };\n  },\n  appleTouchDevice(userAgent) {\n    const navigator = getNavigator();\n    const isIpadOs = /Macintosh/i.test(userAgent) && (null === navigator || void 0 === navigator ? void 0 : navigator.maxTouchPoints) > 2;\n    const isAppleDevice = /ip(hone|od|ad)/i.test(userAgent);\n    if (!isAppleDevice && !isIpadOs) {\n      return null;\n    }\n    const isPhone = /ip(hone|od)/i.test(userAgent);\n    const matches = userAgent.match(/os\\s{0,}X? (\\d+)_(\\d+)_?(\\d+)?/i);\n    const version = matches ? [parseInt(matches[1], 10), parseInt(matches[2], 10), parseInt(matches[3] || 0, 10)] : [];\n    const isIPhone4 = 480 === window.screen.height;\n    const grade = isIPhone4 ? \"B\" : \"A\";\n    return {\n      deviceType: isPhone ? \"phone\" : \"tablet\",\n      platform: \"ios\",\n      version: version,\n      grade: grade\n    };\n  },\n  android(userAgent) {\n    const isAndroid = /android|htc_|silk/i.test(userAgent);\n    const isWinPhone = /windows phone/i.test(userAgent);\n    if (!isAndroid || isWinPhone) {\n      return null;\n    }\n    const isPhone = /mobile/i.test(userAgent);\n    const matches = userAgent.match(/android (\\d+)\\.?(\\d+)?\\.?(\\d+)?/i);\n    const version = matches ? [parseInt(matches[1], 10), parseInt(matches[2] || 0, 10), parseInt(matches[3] || 0, 10)] : [];\n    const worseThan4_4 = version.length > 1 && (version[0] < 4 || 4 === version[0] && version[1] < 4);\n    const grade = worseThan4_4 ? \"B\" : \"A\";\n    return {\n      deviceType: isPhone ? \"phone\" : \"tablet\",\n      platform: \"android\",\n      version: version,\n      grade: grade\n    };\n  }\n};\nconst UA_PARSERS_ARRAY = [UA_PARSERS.appleTouchDevice, UA_PARSERS.android, UA_PARSERS.generic];\nclass Devices {\n  constructor(options) {\n    this._window = (null === options || void 0 === options ? void 0 : options.window) ?? window;\n    this._realDevice = this._getDevice();\n    this._currentDevice = void 0;\n    this._currentOrientation = void 0;\n    this._eventsStrategy = new EventsStrategy(this);\n    this.changed = Callbacks();\n    if (hasWindow()) {\n      readyCallbacks.add(this._recalculateOrientation.bind(this));\n      resizeCallbacks.add(this._recalculateOrientation.bind(this));\n    }\n  }\n  current(deviceOrName) {\n    if (deviceOrName) {\n      this._currentDevice = this._getDevice(deviceOrName);\n      this._forced = true;\n      this.changed.fire();\n      return;\n    }\n    if (!this._currentDevice) {\n      deviceOrName = void 0;\n      try {\n        deviceOrName = this._getDeviceOrNameFromWindowScope();\n      } catch (e) {\n        deviceOrName = this._getDeviceNameFromSessionStorage();\n      } finally {\n        if (!deviceOrName) {\n          deviceOrName = this._getDeviceNameFromSessionStorage();\n        }\n        if (deviceOrName) {\n          this._forced = true;\n        }\n      }\n      this._currentDevice = this._getDevice(deviceOrName);\n    }\n    return this._currentDevice;\n  }\n  real(forceDevice) {\n    return extend({}, this._realDevice);\n  }\n  orientation() {\n    return this._currentOrientation;\n  }\n  isForced() {\n    return this._forced;\n  }\n  isRippleEmulator() {\n    return !!this._window.tinyHippos;\n  }\n  _getCssClasses(device) {\n    const result = [];\n    const realDevice = this._realDevice;\n    device = device || this.current();\n    if (device.deviceType) {\n      result.push(`dx-device-${device.deviceType}`);\n      if (\"desktop\" !== device.deviceType) {\n        result.push(\"dx-device-mobile\");\n      }\n    }\n    result.push(`dx-device-${realDevice.platform}`);\n    if (realDevice.version && realDevice.version.length) {\n      result.push(`dx-device-${realDevice.platform}-${realDevice.version[0]}`);\n    }\n    if (this.isSimulator()) {\n      result.push(\"dx-simulator\");\n    }\n    if (Config().rtlEnabled) {\n      result.push(\"dx-rtl\");\n    }\n    return result;\n  }\n  attachCssClasses(element, device) {\n    this._deviceClasses = this._getCssClasses(device).join(\" \");\n    $(element).addClass(this._deviceClasses);\n  }\n  detachCssClasses(element) {\n    $(element).removeClass(this._deviceClasses);\n  }\n  isSimulator() {\n    try {\n      var _this$_window$top;\n      return this._isSimulator || hasWindow() && this._window.top !== this._window.self && (null === (_this$_window$top = this._window.top) || void 0 === _this$_window$top ? void 0 : _this$_window$top[\"dx-force-device\"]) || this.isRippleEmulator();\n    } catch (e) {\n      return false;\n    }\n  }\n  forceSimulator() {\n    this._isSimulator = true;\n  }\n  _getDevice(deviceName) {\n    if (\"genericPhone\" === deviceName) {\n      deviceName = {\n        deviceType: \"phone\",\n        platform: \"generic\",\n        generic: true\n      };\n    }\n    if (isPlainObject(deviceName)) {\n      return this._fromConfig(deviceName);\n    }\n    let ua;\n    if (deviceName) {\n      ua = KNOWN_UA_TABLE[deviceName];\n      if (!ua) {\n        throw errors.Error(\"E0005\");\n      }\n    } else {\n      const navigator = getNavigator();\n      ua = navigator.userAgent;\n    }\n    return this._fromUA(ua);\n  }\n  _getDeviceOrNameFromWindowScope() {\n    var _this$_window$top2, _this$_window$top3;\n    let result;\n    if (hasWindow() && (null !== (_this$_window$top2 = this._window.top) && void 0 !== _this$_window$top2 && _this$_window$top2[\"dx-force-device-object\"] || null !== (_this$_window$top3 = this._window.top) && void 0 !== _this$_window$top3 && _this$_window$top3[\"dx-force-device\"])) {\n      var _this$_window$top4, _this$_window$top5;\n      result = (null === (_this$_window$top4 = this._window.top) || void 0 === _this$_window$top4 ? void 0 : _this$_window$top4[\"dx-force-device-object\"]) || (null === (_this$_window$top5 = this._window.top) || void 0 === _this$_window$top5 ? void 0 : _this$_window$top5[\"dx-force-device\"]);\n    }\n    return result;\n  }\n  _getDeviceNameFromSessionStorage() {\n    const sessionStorage = SessionStorage();\n    if (!sessionStorage) {\n      return;\n    }\n    const deviceOrName = sessionStorage.getItem(\"dx-force-device\");\n    try {\n      return JSON.parse(deviceOrName);\n    } catch (ex) {\n      return deviceOrName;\n    }\n  }\n  _fromConfig(config) {\n    const result = extend({}, DEFAULT_DEVICE, this._currentDevice, config);\n    const shortcuts = {\n      phone: \"phone\" === result.deviceType,\n      tablet: \"tablet\" === result.deviceType,\n      android: \"android\" === result.platform,\n      ios: \"ios\" === result.platform,\n      generic: \"generic\" === result.platform\n    };\n    return extend(result, shortcuts);\n  }\n  _fromUA(ua) {\n    for (let idx = 0; idx < UA_PARSERS_ARRAY.length; idx += 1) {\n      const parser = UA_PARSERS_ARRAY[idx];\n      const config = parser(ua);\n      if (config) {\n        return this._fromConfig(config);\n      }\n    }\n    return DEFAULT_DEVICE;\n  }\n  _changeOrientation() {\n    const $window = $(this._window);\n    const orientation = getHeight($window) > getWidth($window) ? \"portrait\" : \"landscape\";\n    if (this._currentOrientation === orientation) {\n      return;\n    }\n    this._currentOrientation = orientation;\n    this._eventsStrategy.fireEvent(\"orientationChanged\", [{\n      orientation: orientation\n    }]);\n  }\n  _recalculateOrientation() {\n    const windowWidth = getWidth(this._window);\n    if (this._currentWidth === windowWidth) {\n      return;\n    }\n    this._currentWidth = windowWidth;\n    this._changeOrientation();\n  }\n  on(eventName, eventHandler) {\n    this._eventsStrategy.on(eventName, eventHandler);\n    return this;\n  }\n  off(eventName, eventHandler) {\n    this._eventsStrategy.off(eventName, eventHandler);\n    return this;\n  }\n}\nconst devices = new Devices();\nwhen(uiLayerInitialized).done(() => {\n  const viewPortElement = viewPort();\n  if (viewPortElement) {\n    devices.attachCssClasses(viewPortElement);\n  }\n  changeCallback.add((viewPort, prevViewport) => {\n    devices.detachCssClasses(prevViewport);\n    devices.attachCssClasses(viewPort);\n  });\n});\nexport default devices;","map":{"version":3,"names":["Config","errors","EventsStrategy","$","Callbacks","when","extend","readyCallbacks","resizeCallbacks","getHeight","getWidth","sessionStorage","SessionStorage","isPlainObject","changeCallback","value","viewPort","getNavigator","getWindow","hasWindow","uiLayerInitialized","window","KNOWN_UA_TABLE","iPhone","iPhone5","iPhone6","iPhone6plus","iPad","iPadMini","androidPhone","androidTablet","msSurface","desktop","DEFAULT_DEVICE","deviceType","platform","version","phone","tablet","android","ios","generic","grade","mac","UA_PARSERS","userAgent","isPhone","test","match","isTablet","isDesktop","isMac","toLowerCase","appleTouchDevice","navigator","isIpadOs","maxTouchPoints","isAppleDevice","matches","parseInt","isIPhone4","screen","height","isAndroid","isWinPhone","worseThan4_4","length","UA_PARSERS_ARRAY","Devices","constructor","options","_window","_realDevice","_getDevice","_currentDevice","_currentOrientation","_eventsStrategy","changed","add","_recalculateOrientation","bind","current","deviceOrName","_forced","fire","_getDeviceOrNameFromWindowScope","e","_getDeviceNameFromSessionStorage","real","forceDevice","orientation","isForced","isRippleEmulator","tinyHippos","_getCssClasses","device","result","realDevice","push","isSimulator","rtlEnabled","attachCssClasses","element","_deviceClasses","join","addClass","detachCssClasses","removeClass","_this$_window$top","_isSimulator","top","self","forceSimulator","deviceName","_fromConfig","ua","Error","_fromUA","_this$_window$top2","_this$_window$top3","_this$_window$top4","_this$_window$top5","getItem","JSON","parse","ex","config","shortcuts","idx","parser","_changeOrientation","$window","fireEvent","windowWidth","_currentWidth","on","eventName","eventHandler","off","devices","done","viewPortElement","prevViewport"],"sources":["/home/nataf/Cours/world-cities-map/client/node_modules/devextreme/esm/__internal/core/m_devices.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/core/m_devices.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Config from \"../../core/config\";\r\nimport errors from \"../../core/errors\";\r\nimport {\r\n    EventsStrategy\r\n} from \"../../core/events_strategy\";\r\nimport $ from \"../../core/renderer\";\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport {\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport readyCallbacks from \"../../core/utils/ready_callbacks\";\r\nimport resizeCallbacks from \"../../core/utils/resize_callbacks\";\r\nimport {\r\n    getHeight,\r\n    getWidth\r\n} from \"../../core/utils/size\";\r\nimport {\r\n    sessionStorage as SessionStorage\r\n} from \"../../core/utils/storage\";\r\nimport {\r\n    isPlainObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    changeCallback,\r\n    value as viewPort\r\n} from \"../../core/utils/view_port\";\r\nimport {\r\n    getNavigator,\r\n    getWindow,\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    uiLayerInitialized\r\n} from \"../core/utils/m_common\";\r\nconst window = getWindow();\r\nconst KNOWN_UA_TABLE = {\r\n    iPhone: \"iPhone\",\r\n    iPhone5: \"iPhone\",\r\n    iPhone6: \"iPhone\",\r\n    iPhone6plus: \"iPhone\",\r\n    iPad: \"iPad\",\r\n    iPadMini: \"iPad Mini\",\r\n    androidPhone: \"Android Mobile\",\r\n    androidTablet: \"Android\",\r\n    msSurface: \"Windows ARM Tablet PC\",\r\n    desktop: \"desktop\"\r\n};\r\nconst DEFAULT_DEVICE = {\r\n    deviceType: \"desktop\",\r\n    platform: \"generic\",\r\n    version: [],\r\n    phone: false,\r\n    tablet: false,\r\n    android: false,\r\n    ios: false,\r\n    generic: true,\r\n    grade: \"A\",\r\n    mac: false\r\n};\r\nconst UA_PARSERS = {\r\n    generic(userAgent) {\r\n        const isPhone = /windows phone/i.test(userAgent) || userAgent.match(/WPDesktop/);\r\n        const isTablet = !isPhone && /Windows(.*)arm(.*)Tablet PC/i.test(userAgent);\r\n        const isDesktop = !isPhone && !isTablet && /msapphost/i.test(userAgent);\r\n        const isMac = /((intel|ppc) mac os x)/.test(userAgent.toLowerCase());\r\n        if (!(isPhone || isTablet || isDesktop || isMac)) {\r\n            return null\r\n        }\r\n        return {\r\n            deviceType: isPhone ? \"phone\" : isTablet ? \"tablet\" : \"desktop\",\r\n            platform: \"generic\",\r\n            version: [],\r\n            grade: \"A\",\r\n            mac: isMac\r\n        }\r\n    },\r\n    appleTouchDevice(userAgent) {\r\n        const navigator = getNavigator();\r\n        const isIpadOs = /Macintosh/i.test(userAgent) && (null === navigator || void 0 === navigator ? void 0 : navigator.maxTouchPoints) > 2;\r\n        const isAppleDevice = /ip(hone|od|ad)/i.test(userAgent);\r\n        if (!isAppleDevice && !isIpadOs) {\r\n            return null\r\n        }\r\n        const isPhone = /ip(hone|od)/i.test(userAgent);\r\n        const matches = userAgent.match(/os\\s{0,}X? (\\d+)_(\\d+)_?(\\d+)?/i);\r\n        const version = matches ? [parseInt(matches[1], 10), parseInt(matches[2], 10), parseInt(matches[3] || 0, 10)] : [];\r\n        const isIPhone4 = 480 === window.screen.height;\r\n        const grade = isIPhone4 ? \"B\" : \"A\";\r\n        return {\r\n            deviceType: isPhone ? \"phone\" : \"tablet\",\r\n            platform: \"ios\",\r\n            version: version,\r\n            grade: grade\r\n        }\r\n    },\r\n    android(userAgent) {\r\n        const isAndroid = /android|htc_|silk/i.test(userAgent);\r\n        const isWinPhone = /windows phone/i.test(userAgent);\r\n        if (!isAndroid || isWinPhone) {\r\n            return null\r\n        }\r\n        const isPhone = /mobile/i.test(userAgent);\r\n        const matches = userAgent.match(/android (\\d+)\\.?(\\d+)?\\.?(\\d+)?/i);\r\n        const version = matches ? [parseInt(matches[1], 10), parseInt(matches[2] || 0, 10), parseInt(matches[3] || 0, 10)] : [];\r\n        const worseThan4_4 = version.length > 1 && (version[0] < 4 || 4 === version[0] && version[1] < 4);\r\n        const grade = worseThan4_4 ? \"B\" : \"A\";\r\n        return {\r\n            deviceType: isPhone ? \"phone\" : \"tablet\",\r\n            platform: \"android\",\r\n            version: version,\r\n            grade: grade\r\n        }\r\n    }\r\n};\r\nconst UA_PARSERS_ARRAY = [UA_PARSERS.appleTouchDevice, UA_PARSERS.android, UA_PARSERS.generic];\r\nclass Devices {\r\n    constructor(options) {\r\n        this._window = (null === options || void 0 === options ? void 0 : options.window) ?? window;\r\n        this._realDevice = this._getDevice();\r\n        this._currentDevice = void 0;\r\n        this._currentOrientation = void 0;\r\n        this._eventsStrategy = new EventsStrategy(this);\r\n        this.changed = Callbacks();\r\n        if (hasWindow()) {\r\n            readyCallbacks.add(this._recalculateOrientation.bind(this));\r\n            resizeCallbacks.add(this._recalculateOrientation.bind(this))\r\n        }\r\n    }\r\n    current(deviceOrName) {\r\n        if (deviceOrName) {\r\n            this._currentDevice = this._getDevice(deviceOrName);\r\n            this._forced = true;\r\n            this.changed.fire();\r\n            return\r\n        }\r\n        if (!this._currentDevice) {\r\n            deviceOrName = void 0;\r\n            try {\r\n                deviceOrName = this._getDeviceOrNameFromWindowScope()\r\n            } catch (e) {\r\n                deviceOrName = this._getDeviceNameFromSessionStorage()\r\n            } finally {\r\n                if (!deviceOrName) {\r\n                    deviceOrName = this._getDeviceNameFromSessionStorage()\r\n                }\r\n                if (deviceOrName) {\r\n                    this._forced = true\r\n                }\r\n            }\r\n            this._currentDevice = this._getDevice(deviceOrName)\r\n        }\r\n        return this._currentDevice\r\n    }\r\n    real(forceDevice) {\r\n        return extend({}, this._realDevice)\r\n    }\r\n    orientation() {\r\n        return this._currentOrientation\r\n    }\r\n    isForced() {\r\n        return this._forced\r\n    }\r\n    isRippleEmulator() {\r\n        return !!this._window.tinyHippos\r\n    }\r\n    _getCssClasses(device) {\r\n        const result = [];\r\n        const realDevice = this._realDevice;\r\n        device = device || this.current();\r\n        if (device.deviceType) {\r\n            result.push(`dx-device-${device.deviceType}`);\r\n            if (\"desktop\" !== device.deviceType) {\r\n                result.push(\"dx-device-mobile\")\r\n            }\r\n        }\r\n        result.push(`dx-device-${realDevice.platform}`);\r\n        if (realDevice.version && realDevice.version.length) {\r\n            result.push(`dx-device-${realDevice.platform}-${realDevice.version[0]}`)\r\n        }\r\n        if (this.isSimulator()) {\r\n            result.push(\"dx-simulator\")\r\n        }\r\n        if (Config().rtlEnabled) {\r\n            result.push(\"dx-rtl\")\r\n        }\r\n        return result\r\n    }\r\n    attachCssClasses(element, device) {\r\n        this._deviceClasses = this._getCssClasses(device).join(\" \");\r\n        $(element).addClass(this._deviceClasses)\r\n    }\r\n    detachCssClasses(element) {\r\n        $(element).removeClass(this._deviceClasses)\r\n    }\r\n    isSimulator() {\r\n        try {\r\n            var _this$_window$top;\r\n            return this._isSimulator || hasWindow() && this._window.top !== this._window.self && (null === (_this$_window$top = this._window.top) || void 0 === _this$_window$top ? void 0 : _this$_window$top[\"dx-force-device\"]) || this.isRippleEmulator()\r\n        } catch (e) {\r\n            return false\r\n        }\r\n    }\r\n    forceSimulator() {\r\n        this._isSimulator = true\r\n    }\r\n    _getDevice(deviceName) {\r\n        if (\"genericPhone\" === deviceName) {\r\n            deviceName = {\r\n                deviceType: \"phone\",\r\n                platform: \"generic\",\r\n                generic: true\r\n            }\r\n        }\r\n        if (isPlainObject(deviceName)) {\r\n            return this._fromConfig(deviceName)\r\n        }\r\n        let ua;\r\n        if (deviceName) {\r\n            ua = KNOWN_UA_TABLE[deviceName];\r\n            if (!ua) {\r\n                throw errors.Error(\"E0005\")\r\n            }\r\n        } else {\r\n            const navigator = getNavigator();\r\n            ua = navigator.userAgent\r\n        }\r\n        return this._fromUA(ua)\r\n    }\r\n    _getDeviceOrNameFromWindowScope() {\r\n        var _this$_window$top2, _this$_window$top3;\r\n        let result;\r\n        if (hasWindow() && (null !== (_this$_window$top2 = this._window.top) && void 0 !== _this$_window$top2 && _this$_window$top2[\"dx-force-device-object\"] || null !== (_this$_window$top3 = this._window.top) && void 0 !== _this$_window$top3 && _this$_window$top3[\"dx-force-device\"])) {\r\n            var _this$_window$top4, _this$_window$top5;\r\n            result = (null === (_this$_window$top4 = this._window.top) || void 0 === _this$_window$top4 ? void 0 : _this$_window$top4[\"dx-force-device-object\"]) || (null === (_this$_window$top5 = this._window.top) || void 0 === _this$_window$top5 ? void 0 : _this$_window$top5[\"dx-force-device\"])\r\n        }\r\n        return result\r\n    }\r\n    _getDeviceNameFromSessionStorage() {\r\n        const sessionStorage = SessionStorage();\r\n        if (!sessionStorage) {\r\n            return\r\n        }\r\n        const deviceOrName = sessionStorage.getItem(\"dx-force-device\");\r\n        try {\r\n            return JSON.parse(deviceOrName)\r\n        } catch (ex) {\r\n            return deviceOrName\r\n        }\r\n    }\r\n    _fromConfig(config) {\r\n        const result = extend({}, DEFAULT_DEVICE, this._currentDevice, config);\r\n        const shortcuts = {\r\n            phone: \"phone\" === result.deviceType,\r\n            tablet: \"tablet\" === result.deviceType,\r\n            android: \"android\" === result.platform,\r\n            ios: \"ios\" === result.platform,\r\n            generic: \"generic\" === result.platform\r\n        };\r\n        return extend(result, shortcuts)\r\n    }\r\n    _fromUA(ua) {\r\n        for (let idx = 0; idx < UA_PARSERS_ARRAY.length; idx += 1) {\r\n            const parser = UA_PARSERS_ARRAY[idx];\r\n            const config = parser(ua);\r\n            if (config) {\r\n                return this._fromConfig(config)\r\n            }\r\n        }\r\n        return DEFAULT_DEVICE\r\n    }\r\n    _changeOrientation() {\r\n        const $window = $(this._window);\r\n        const orientation = getHeight($window) > getWidth($window) ? \"portrait\" : \"landscape\";\r\n        if (this._currentOrientation === orientation) {\r\n            return\r\n        }\r\n        this._currentOrientation = orientation;\r\n        this._eventsStrategy.fireEvent(\"orientationChanged\", [{\r\n            orientation: orientation\r\n        }])\r\n    }\r\n    _recalculateOrientation() {\r\n        const windowWidth = getWidth(this._window);\r\n        if (this._currentWidth === windowWidth) {\r\n            return\r\n        }\r\n        this._currentWidth = windowWidth;\r\n        this._changeOrientation()\r\n    }\r\n    on(eventName, eventHandler) {\r\n        this._eventsStrategy.on(eventName, eventHandler);\r\n        return this\r\n    }\r\n    off(eventName, eventHandler) {\r\n        this._eventsStrategy.off(eventName, eventHandler);\r\n        return this\r\n    }\r\n}\r\nconst devices = new Devices;\r\nwhen(uiLayerInitialized).done((() => {\r\n    const viewPortElement = viewPort();\r\n    if (viewPortElement) {\r\n        devices.attachCssClasses(viewPortElement)\r\n    }\r\n    changeCallback.add(((viewPort, prevViewport) => {\r\n        devices.detachCssClasses(prevViewport);\r\n        devices.attachCssClasses(viewPort)\r\n    }))\r\n}));\r\nexport default devices;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}